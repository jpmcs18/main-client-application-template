{"version":3,"sources":["pages/modals/modal.tsx","pages/modals/message-dialog.tsx","custom-hooks/authorize-provider.tsx","constant.ts","processors/session-manager.tsx","endpoints.ts","processors/base.ts","processors/security-process.ts","processors/user-process.ts","pages/components/custom-textbox.tsx","pages/login-page.tsx","pages/components/pagination.tsx","pages/components/seachbar.tsx","pages/components/users-components/user-item.tsx","processors/personnel-process.ts","processors/role-process.ts","pages/components/custom-check-box-button.tsx","pages/components/custom-dropdown.tsx","processors/module-process.ts","pages/components/custom-check-box.tsx","pages/components/role-components/module-item-selection.tsx","pages/components/role-components/module-selection.tsx","pages/modals/manage-role.tsx","pages/modals/manage-user.tsx","pages/user-page.tsx","routes.ts","processors/classification-process.ts","helpers.ts","processors/concern-process.ts","pages/components/concerns-components/concern-item.tsx","pages/components/concerns-components/concern-items.tsx","pages/components/custom-datepicker.tsx","pages/modals/assign-concern.tsx","processors/personnel-concern-process.tsx","pages/components/concerns-components/concern-action.tsx","pages/modals/concern-actions-viewer.tsx","pages/components/custom-textarea.tsx","pages/modals/manage-concern.tsx","pages/concern-page.tsx","pages/modals/manage-profile.tsx","pages/components/role-components/role-item.tsx","pages/components/role-components/role-items.tsx","pages/role-page.tsx","pages/components/tickets-components/direct-concern-item.tsx","pages/components/tickets-components/direct-concern-items.tsx","pages/modals/forward-concern.tsx","pages/modals/resolve-concern.tsx","pages/ticket-page.tsx","pages/components/classification-components/classification-item.tsx","pages/components/classification-components/classification-items.tsx","pages/modals/manage-classification.tsx","pages/classification-page.tsx","pages/components/personnel-components/personnel-item.tsx","pages/components/personnel-components/personnel-items.tsx","processors/office-process.ts","pages/modals/manage-personnel.tsx","pages/personnel-page.tsx","pages/components/office-components/office-item.tsx","pages/components/office-components/office-items.tsx","pages/modals/manage-office.tsx","pages/office-page.tsx","pages/dashboard.tsx","pages/components/concerns-components/concern-detail.tsx","pages/modals/detailed-summary.tsx","pages/summary-page.tsx","pages/components/concerns-monitoring-components/concern-monitoring-item.tsx","pages/components/concerns-monitoring-components/concern-monitoring-items.tsx","pages/modals/manage-concern-monitoring.tsx","pages/concern-monitoring-page.tsx","pages/home-page.tsx","App.tsx","index.tsx"],"names":["Modal","title","className","onClose","children","useEffect","document","body","classList","add","remove","ReactDOM","createPortal","undefined","icon","faTimes","onClick","getElementById","MessageDialog","closeDialog","useContext","SetCloseMessageDialogContext","Message","MessageContext","updateAuthorize","useUpdateAuthorize","ref","useRef","current","focus","message","onOk","action","API","window","location","protocol","process","APP_SECRET","ConcernStatus","PersonnelConcernStatus","CryptoJS","require","token_add","profile_add","encrypt","data","AES","toString","decrypt","enc","Utf8","saveToken","auth","token","refreshToken","sessionStorage","setItem","JSON","stringify","clearToken","removeItem","getToken","parse","getItem","saveProfile","profile","trimmed","username","admin","personnel","distinctModules","AuthorizeContext","React","createContext","UserProfileContext","SetMessageContext","OpenMessageDialogContext","UpdateAuthorizeContext","SetBusyContext","UpdateUserProfileContext","useUserProfile","useSetMessage","useSetBusy","useUpdateUserProfile","AuthorizeProvider","useState","authorize","setAuthorize","getProfile","userProfile","setUserProfile","openMessageDialog","setOpenMessageDialog","setMessage","showLoading","setShowLoading","Provider","value","isBusy","b","clear","SecurityEnd","UserEnd","ModuleEnd","RoleEnd","ConcernEnd","ClassificationEnd","OfficeEnd","PersonnelEnd","PersonnelConcernEnd","Hub","httpGet","url","a","Error","axios","get","headers","Authorization","baseURL","then","res","status","catch","err","response","refreshTokenAuthentication","httpPost","param","post","httpPut","put","httpDelete","delete","httpAuthenticatingPost","request","authenticate","params","getUserData","name","page","parameters","encodeURI","activateUsers","id","resetUserPassword","deleteUser","createUser","user","roleIds","updateUser","newRoleIds","accessToDelete","updateProfile","CustomTextBox","type","readonly","onChange","onKeyPress","toggle","setToggle","htmlFor","e","elementName","target","faEye","faEyeSlash","prev","LoginPage","password","setUser","setBusy","signIn","finally","onTextChange","key","Pagination","pages","currentPageNumber","goInPage","currentPage","setCurrentPage","canGoFirst","setGoFirst","canGoBefore","setGoBefore","canGoAfter","setGoAfter","canGoLast","setGoLast","pageList","setPageList","pl","i","push","faAngleDoubleLeft","faAngleLeft","cp","map","faAngleRight","faAngleDoubleRight","SeachBar","search","searchKey","setSearchKey","placeholder","val","faSearch","UserItem","office","description","classification","userRoles","length","x","role","join","active","getPersonnels","getAvailablePersonnelsByClassification","classificationId","createPersonnel","updatePersonnel","getRoles","createRole","moduleIds","updateRole","newModuleIds","CustomCheckBoxButton","isCheck","CustomDropdown","itemsList","hasDefault","find","text","selectedOptions","item","getModules","CustomCheckBox","checkChange","checked","ModuleItemSelection","module","RoleManagementActions","viewOnly","payload","ModuleSelection","modules","Modules","ManageRole","selectedRole","accesses","setRole","setModules","fetchModules","filter","accessId","resMod","mod","acc","moduleId","initializeComponents","r","ManageUser","usersInfo","personnelItem","setPersonnelItem","personnelId","roleItems","setRoleItems","setUserRoles","showModal","setShowModal","setSelectedRole","fetchPersonnels","fetchRoles","roleId","deleted","roleDesc","userId","prevUser","u","faUndo","undoDeleteRole","faTrash","deleteRole","viewRole","UserPage","setName","users","setUsers","pageCount","setPageCount","selectedUser","setSelectedUser","userAction","resetPassword","deleteSelectedUser","userid","searchUser","searchUsers","results","colSpan","needToReload","Routes","getClassifications","createClassification","updateClassification","addDays","date","days","result","Date","setDate","getDate","addMonths","months","setMonth","getMonth","getLastDateOfMonth","getFirstDateOfMonth","dateToString","toLocaleString","searchConcerns","assigned","closed","start","end","officeId","createConcern","concern","updateConcern","deleteConcern","assignConcern","ConcernItem","ConcernActions","entryDate","number","caller","closedDate","statusId","ConcernItems","concerns","ConcernList","style","width","CustomDatePicker","getFullYear","padStart","getHours","getMinutes","toLocaleDateString","AssignConcern","availabelPersonnelItem","setAvailabelPersonnelItem","selectedPersonnel","setSelectedPersonnel","selectedAvailablePersonnel","setSelectedAvailablePersonnel","selectedPersonnelName","setSelectedPersonnelName","fetchAvailablePersonnels","getDirectConcerns","isResolve","isForwarded","isPending","getActions","concernId","resolvePersonnelConcern","actionTaken","forwardPersonnelConcern","reason","getTicketSummary","month","year","getDetailedSummary","day","ConcernAction","prevPersonnelConcernId","creator","receivedDate","ConcernActionsViewer","personnelConcern","setPersonnelConcern","fetchActions","CustomTextArea","lineCount","rows","ManageConcern","selectedConcern","setConcern","classificationItem","setClassificationItem","fetchClassifications","prevConcern","ConcernPage","setKey","setConcerns","showAssignmentModal","setShowAssignmentModal","showActionsModal","setShowActionsModal","setSelectedConcern","connection","setConnection","startDate","endDate","filtering","setFiltering","hasChanges","console","log","state","reconnect","invoke","searchConcern","Notification","requestPermission","connect","conn","HubConnectionBuilder","withUrl","configureLogging","LogLevel","Information","build","on","ticketnumber","HubConnectionState","Connected","Disconnected","deleteSelectedConcern","ManageProfile","updateProfileInfo","newPassword","confirmNewPassword","RoleItem","RoleActions","RoleItems","RoleList","RolePage","roles","setRoles","setViewOnly","searchRole","searchRoles","DirectConcernItem","DirectConcernActions","prevPersonnelConcern","DirectConcernItems","DirectConcernList","ForwardConcern","setReason","ResolveConcern","setActionTaken","TicketPage","directConcerns","setDirectConcerns","selectedDirectConcern","setSelectedDirectConcern","showResolveModal","setShowResolveModal","showForwardModal","setShowForwardModal","pending","setPending","resolved","setResolved","forwarded","setForwarded","fetchDirectConcern","isResolved","ClassificationItem","ClassificationActions","ClassificationItems","classifications","ClassificationList","ManageClassification","selectedClassification","setClassification","ClassificationPage","setClassifications","setSelectedClassification","searchClassification","searchClassifications","PersonnelItem","PersonnelActions","PersonnelItems","personnels","PersonnelList","getOffices","createOffice","updateOffice","ManagePersonnel","setPersonnel","officeItem","setOfficeItem","fetchOffices","OfficePage","setPersonnels","searchPersonnel","searchPersonnels","OfficeItem","OfficeActions","abbreviation","OfficeItems","offices","OfficeList","ManageOffice","selectedOffice","setOffice","setOffices","setSelectedOffice","searchOffice","searchOffices","Dashboard","ConcernDetail","DetailedSummary","fetchDetailedSummary","SummaryPage","currentDate","setCurrentDate","dates","setDates","selectedDate","setSelectedDate","firstDate","lastDate","firstDay","getDay","last","_dates","sum","toDateString","summary","monthName","Intl","DateTimeFormat","format","noOfResolved","noOfForwarded","ConcernMonitoringItem","ConcernMonitoringActions","ConcernMonitoringItems","ConcernMonitoringList","ManageConcernMonitoring","ConcernMonitoringPage","HomePage","showProfile","setShowProfile","menus","useMemo","head","navs","route","header","to","exact","menu","nav","path","component","PersonnelPage","App","render","StrictMode"],"mappings":"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","file":"static/js/main.8bbe8ec9.chunk.js","sourcesContent":["import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { ReactNode, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nexport default function Modal({\r\n  title,\r\n  className,\r\n  onClose,\r\n  children,\r\n}: {\r\n  title?: String | undefined;\r\n  className?: String | undefined;\r\n  onClose?: (() => void) | undefined;\r\n  children: ReactNode;\r\n}) {\r\n  useEffect(() => {\r\n    document.body.classList.add('body-modal');\r\n\r\n    return () => {\r\n      document.body.classList.remove('body-modal');\r\n    };\r\n  });\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div className='modal-container'>\r\n        <div className='modal-blocker'></div>\r\n        <div className={'modal-content ' + className}>\r\n          <div className='modal-content-header'>\r\n            <div className='header-text'>{title}</div>\r\n            {onClose !== undefined && (\r\n              <FontAwesomeIcon\r\n                className='close-icon'\r\n                icon={faTimes as IconProp}\r\n                onClick={onClose}\r\n              />\r\n            )}\r\n          </div>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </>,\r\n    document.getElementById('modal') as HTMLElement\r\n  );\r\n}\r\n","import { useEffect, useRef } from 'react';\r\nimport {\r\n  useMessage,\r\n  useSetCloseMessageDialog,\r\n  useUpdateAuthorize,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport Modal from './modal';\r\n\r\nexport default function MessageDialog() {\r\n  const closeDialog = useSetCloseMessageDialog();\r\n  const Message = useMessage();\r\n  const updateAuthorize = useUpdateAuthorize();\r\n  const ref = useRef<HTMLButtonElement>(null);\r\n\r\n  function handleClose() {\r\n    closeDialog();\r\n  }\r\n\r\n  function ok() {\r\n    if (Message?.message === 'Unauthorized') updateAuthorize(false);\r\n    closeDialog();\r\n    Message?.onOk?.();\r\n  }\r\n  useEffect(\r\n    () => {\r\n      ref?.current?.focus();\r\n    },\r\n    //eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Modal>\r\n      <div className='modal-content-body'>\r\n        <p>{Message?.message}</p>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={ok} className='btn-modal btn-primary' ref={ref}>\r\n          {(Message?.action === undefined ||\r\n            Message?.action === 'OKCANCEL') && <span>OK</span>}\r\n          {Message?.action === 'YESNO' && <span>YES</span>}\r\n        </button>\r\n        {Message?.action && (\r\n          <button onClick={handleClose} className='btn-modal btn-secondary '>\r\n            {Message?.action === 'OKCANCEL' && <span>CANCEL</span>}\r\n            {Message?.action === 'YESNO' && <span>NO</span>}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useContext, ReactNode, useState } from 'react';\r\nimport { Profile } from '../entities/user/Profile';\r\nimport MessageDialog from '../pages/modals/message-dialog';\r\nimport {\r\n  clearSession,\r\n  getProfile,\r\n  getToken,\r\n} from '../processors/session-manager';\r\n\r\nconst AuthorizeContext = React.createContext<boolean>(false);\r\nconst UserProfileContext = React.createContext<Profile | undefined>(undefined);\r\nconst SetMessageContext = React.createContext<(message: Message) => void>(\r\n  () => {}\r\n);\r\nconst SetCloseMessageDialogContext = React.createContext<() => void>(() => {});\r\nconst MessageContext = React.createContext<Message | undefined>(undefined);\r\nconst OpenMessageDialogContext = React.createContext<boolean>(false);\r\nconst UpdateAuthorizeContext = React.createContext<\r\n  (authorize: boolean) => void\r\n>(() => {});\r\nconst SetBusyContext = React.createContext<(args: boolean) => void>(() => {});\r\nconst UpdateUserProfileContext = React.createContext<\r\n  (args: Profile | undefined) => void\r\n>(() => {});\r\nexport interface Message {\r\n  message: any;\r\n  type?: MESSAGETYPE | undefined;\r\n  action?: MESSAGEACTION | undefined;\r\n  onOk?: () => void;\r\n}\r\nexport type MESSAGETYPE = 'MESSAGE' | 'ALERT';\r\nexport type MESSAGEACTION = 'YESNO' | 'OKCANCEL';\r\nexport function useSetCloseMessageDialog() {\r\n  return useContext(SetCloseMessageDialogContext);\r\n}\r\nexport function useAuthorize() {\r\n  return useContext(AuthorizeContext);\r\n}\r\nexport function useUserProfile() {\r\n  return useContext(UserProfileContext);\r\n}\r\nexport function useUpdateAuthorize() {\r\n  return useContext(UpdateAuthorizeContext);\r\n}\r\nexport function useSetMessage() {\r\n  return useContext(SetMessageContext);\r\n}\r\nexport function useMessage() {\r\n  return useContext(MessageContext);\r\n}\r\nexport function useOpenMessageDialog() {\r\n  return useContext(OpenMessageDialogContext);\r\n}\r\nexport function useSetBusy() {\r\n  return useContext(SetBusyContext);\r\n}\r\nexport function useUpdateUserProfile() {\r\n  return useContext(UpdateUserProfileContext);\r\n}\r\nexport function AuthorizeProvider({ children }: { children: ReactNode }) {\r\n  const [authorize, setAuthorize] = useState(() => {\r\n    const token = getToken();\r\n    return token?.token !== undefined;\r\n  });\r\n  const [userProfile, setUserProfile] = useState<Profile | undefined>(() => {\r\n    return getProfile();\r\n  });\r\n  const [openMessageDialog, setOpenMessageDialog] = useState<boolean>(false);\r\n  const [message, setMessage] = useState<Message>();\r\n  const [showLoading, setShowLoading] = useState<number>(() => 0);\r\n  function updateProfile(profile: Profile | undefined) {\r\n    setUserProfile(profile);\r\n  }\r\n  function updateAuthorize(authorize: boolean) {\r\n    if (!authorize) {\r\n      clearSession();\r\n      setUserProfile(undefined);\r\n    }\r\n    setAuthorize(authorize);\r\n  }\r\n  function showMessage(message: Message) {\r\n    setMessage(message);\r\n    setOpenMessageDialog(true);\r\n  }\r\n  function closeMessageDilaog() {\r\n    setOpenMessageDialog(false);\r\n  }\r\n  function setBusy(isBusy: boolean) {\r\n    setShowLoading((b) => b + (isBusy ? 1 : -1));\r\n    if (showLoading + (isBusy ? 1 : -1) === 1) {\r\n      document.body.classList.add('body-modal');\r\n    } else {\r\n      document.body.classList.remove('body-modal');\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className={\r\n          'loading-screen' + (showLoading > 0 ? ' loading-block' : '')\r\n        }>\r\n        <div className='loading-blocker'></div>\r\n        <div className='loading'>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n      <SetBusyContext.Provider value={setBusy}>\r\n        <OpenMessageDialogContext.Provider value={openMessageDialog}>\r\n          <SetCloseMessageDialogContext.Provider value={closeMessageDilaog}>\r\n            <MessageContext.Provider value={message}>\r\n              <SetMessageContext.Provider value={showMessage}>\r\n                <AuthorizeContext.Provider value={authorize}>\r\n                  <UpdateAuthorizeContext.Provider value={updateAuthorize}>\r\n                    <UserProfileContext.Provider value={userProfile}>\r\n                      <UpdateUserProfileContext.Provider value={updateProfile}>\r\n                        {children}\r\n                        {openMessageDialog && <MessageDialog />}\r\n                      </UpdateUserProfileContext.Provider>\r\n                    </UserProfileContext.Provider>\r\n                  </UpdateAuthorizeContext.Provider>\r\n                </AuthorizeContext.Provider>\r\n              </SetMessageContext.Provider>\r\n            </MessageContext.Provider>\r\n          </SetCloseMessageDialogContext.Provider>\r\n        </OpenMessageDialogContext.Provider>\r\n      </SetBusyContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n","export const API =\r\n  process.env.NODE_ENV === 'development'\r\n    ? process.env.REACT_APP_DEV\r\n    : window.location.protocol === 'http:'\r\n    ? process.env.REACT_APP_PROD\r\n    : process.env.REACT_APP_SECURED_PROD;\r\nexport const ICON = 'TICKETING SYSTEM';\r\nexport const APP_SECRET = process.env.REACT_APP_SECRET_KEY;\r\nexport const ConcernStatus = {\r\n  Open: 1,\r\n  Assign: 2,\r\n  Close: 3,\r\n};\r\nexport const PersonnelConcernStatus = {\r\n  Pending: 1,\r\n  Resolved: 2,\r\n  Forwarded: 3,\r\n};\r\n","import { Profile } from '../entities/user/Profile';\r\nimport { Authentication } from '../entities/Authentication';\r\nimport { APP_SECRET } from '../constant';\r\n\r\nvar CryptoJS = require('crypto-js');\r\nconst token_add = '--pxx--';\r\nconst profile_add = '--pxx-xdx--';\r\nconst current_voter = '--pxx-xvx--';\r\n\r\nfunction encrypt(data: string): string {\r\n  return CryptoJS.AES.encrypt(data, APP_SECRET).toString();\r\n}\r\nfunction decrypt(data: string): string {\r\n  return CryptoJS.AES.decrypt(data, APP_SECRET).toString(CryptoJS.enc.Utf8);\r\n}\r\n\r\nexport function saveToken(auth: Authentication) {\r\n  if (auth.token !== undefined && auth.refreshToken !== undefined) {\r\n    sessionStorage.setItem(token_add, encrypt(JSON.stringify(auth)));\r\n  }\r\n}\r\n\r\nexport function clearToken() {\r\n  sessionStorage.removeItem(token_add);\r\n}\r\n\r\nexport function getToken(): Authentication | undefined {\r\n  try {\r\n    return JSON.parse(decrypt(sessionStorage.getItem(token_add) ?? ''));\r\n  } catch {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function getProfile(): Profile | undefined {\r\n  try {\r\n    return JSON.parse(decrypt(sessionStorage.getItem(profile_add) ?? ''));\r\n  } catch {\r\n    return undefined;\r\n  }\r\n}\r\nexport function saveProfile(profile: Profile) {\r\n  if (profile !== undefined) {\r\n    let trimmed: Profile = {\r\n      username: profile.username,\r\n      admin: profile.admin,\r\n      personnel: profile.personnel,\r\n      distinctModules: profile.distinctModules,\r\n    };\r\n    sessionStorage.setItem(profile_add, encrypt(JSON.stringify(trimmed)));\r\n  }\r\n}\r\n\r\nexport function clearProfile() {\r\n  sessionStorage.removeItem(profile_add);\r\n}\r\n\r\nexport function getCurrentVoter(): number | undefined {\r\n  try {\r\n    return parseInt(decrypt(sessionStorage.getItem(current_voter) ?? ''));\r\n  } catch {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function saveCurrentVoter(voterId: number) {\r\n  if (voterId !== undefined) {\r\n    sessionStorage.setItem(current_voter, encrypt(voterId.toString()));\r\n  }\r\n}\r\n\r\nexport function clearVoterId() {\r\n  sessionStorage.removeItem(current_voter);\r\n}\r\n\r\nexport function clearSession() {\r\n  sessionStorage.clear();\r\n}\r\n","export const SecurityEnd = {\r\n  Refresh: 'securities/refresh',\r\n  Login: 'securities/log',\r\n};\r\n\r\nexport const UserEnd = {\r\n  GetData: 'users/profile',\r\n  Search: 'users/search',\r\n  Activate: 'users/activate',\r\n  ResetPassword: 'users/reset-password',\r\n  Delete: 'users',\r\n  Create: 'users',\r\n  Update: 'users',\r\n  UpdateProfile: 'users/profile',\r\n};\r\nexport const ModuleEnd = {\r\n  GetList: 'modules',\r\n};\r\nexport const RoleEnd = {\r\n  Search: 'roles/search',\r\n  GetList: 'roles',\r\n  Delete: 'roles',\r\n  Create: 'roles',\r\n  Update: 'roles',\r\n};\r\n\r\nexport const ConcernEnd = {\r\n  Search: 'concerns/search',\r\n  Create: 'concerns',\r\n  Update: 'concerns',\r\n  Delete: 'concerns',\r\n  Assign: 'concerns/assign',\r\n};\r\n\r\nexport const ClassificationEnd = {\r\n  GetList: 'classifications',\r\n  Get: 'classifications',\r\n  Search: 'classifications/search',\r\n  Add: 'classifications',\r\n  Update: 'classifications',\r\n};\r\n\r\nexport const OfficeEnd = {\r\n  GetList: 'offices',\r\n  Get: 'offices',\r\n  Search: 'offices/search',\r\n  Add: 'offices',\r\n  Update: 'offices',\r\n};\r\n\r\nexport const PersonnelEnd = {\r\n  GetList: 'personnels',\r\n  GetListByClassification: 'personnels/classification',\r\n  GetAvailableListByClassification: 'personnels/classification/available',\r\n  Get: 'personnels',\r\n  Search: 'personnels/search',\r\n  Add: 'personnels',\r\n  Update: 'personnels',\r\n};\r\n\r\nexport const PersonnelConcernEnd = {\r\n  GetList: 'personnel-concerns',\r\n  GetActions: 'personnel-concerns/actions',\r\n  Resolve: 'personnel-concerns/resolve',\r\n  Forward: 'personnel-concerns/forward',\r\n  Summary: 'personnel-concerns/summary',\r\n  DetailedSummary: 'personnel-concerns/detailed-summary',\r\n};\r\n\r\nexport const Hub = {\r\n  Transaction: '/transaction-hub',\r\n};\r\n","import axios, { AxiosRequestConfig } from 'axios';\r\nimport { Authentication } from '../entities/Authentication';\r\nimport { SecurityEnd } from '../endpoints';\r\nimport { API } from '../constant';\r\nimport { clearToken, getToken, saveToken } from './session-manager';\r\n\r\nexport async function httpGet<Return>(\r\n  url: string\r\n): Promise<Return | undefined> {\r\n  const token = getToken();\r\n  if (token?.token === null) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .get(url, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 200:\r\n          return res.data;\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpGet<Return>(url);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('Not Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpPost<Return>(\r\n  url: string,\r\n  param: any\r\n): Promise<Return | undefined> {\r\n  const token = getToken();\r\n  if (token?.token === undefined) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .post(url, param, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 200:\r\n          return res.data;\r\n        case 201:\r\n          return res.data;\r\n        case 204:\r\n          return true;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpPost<Return>(url, param);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpPut(url: string, param: any): Promise<boolean> {\r\n  const token = getToken();\r\n  if (token?.token === undefined) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .put(url, param, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 204:\r\n          return true;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpPut(url, param);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpDelete(url: string): Promise<boolean> {\r\n  const token = getToken();\r\n  if (token?.token === undefined) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .delete(url, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 204:\r\n          return true;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpDelete(url);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpAuthenticatingPost<Return>(\r\n  url: string,\r\n  param: any\r\n): Promise<Return | undefined> {\r\n  return await axios\r\n    .post(url, JSON.stringify(param), {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then((res) => {\r\n      switch (res.status) {\r\n        case 200:\r\n          return res.data;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function refreshTokenAuthentication(): Promise<\r\n  boolean | undefined\r\n> {\r\n  const request = getToken();\r\n  return await httpAuthenticatingPost<Authentication>(\r\n    SecurityEnd.Refresh,\r\n    request\r\n  )\r\n    .then((res) => {\r\n      if (res !== undefined) {\r\n        saveToken(res);\r\n        return true;\r\n      }\r\n      throw new Error('Unauthorized');\r\n    })\r\n    .catch(() => {\r\n      clearToken();\r\n      throw new Error('Unauthorized');\r\n    });\r\n}\r\n","import { SecurityEnd } from '../endpoints';\r\nimport { Authentication } from '../entities/Authentication';\r\nimport { httpAuthenticatingPost } from './base';\r\nimport { LoginUser } from '../entities/user/LoginUser';\r\nimport { saveToken } from './session-manager';\r\n\r\nexport async function authenticate(params: LoginUser): Promise<boolean> {\r\n  return await httpAuthenticatingPost(SecurityEnd.Login, params).then((res) => {\r\n    saveToken(res as Authentication);\r\n    return true;\r\n  });\r\n}\r\n","import { UserEnd } from '../endpoints';\r\nimport { httpDelete, httpGet, httpPost, httpPut } from './base';\r\nimport { Profile } from '../entities/user/Profile';\r\nimport { UpdateUserProfile } from '../entities/user/UpdateUserProfile';\r\nimport { User } from '../entities/user/User';\r\nimport { SearchResult } from '../entities/SearchResult';\r\n\r\nexport async function getUserData(): Promise<Profile | undefined> {\r\n  return await httpGet<Profile>(UserEnd.GetData);\r\n}\r\n\r\nexport async function searchUsers(\r\n  name: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<User> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (name !== undefined) {\r\n    parameters += '&key=' + encodeURI(name);\r\n  }\r\n\r\n  return await httpGet<SearchResult<User>>(UserEnd.Search + parameters);\r\n}\r\n\r\nexport async function activateUsers(id: number): Promise<boolean | undefined> {\r\n  return await httpPost(UserEnd.Activate + '/' + id, null);\r\n}\r\n\r\nexport async function resetUserPassword(\r\n  id: number\r\n): Promise<boolean | undefined> {\r\n  return await httpPost(UserEnd.ResetPassword + '/' + id, null);\r\n}\r\n\r\nexport async function deleteUser(id: number): Promise<boolean> {\r\n  return await httpDelete(UserEnd.Delete + '/' + id);\r\n}\r\n\r\nexport async function createUser(\r\n  user: User,\r\n  roleIds: number[] | undefined\r\n): Promise<User | undefined> {\r\n  return await httpPost<User>(UserEnd.Create, { ...user, roleIds });\r\n}\r\n\r\nexport async function updateUser(\r\n  user: User,\r\n  newRoleIds: number[] | undefined,\r\n  accessToDelete: number[] | undefined\r\n): Promise<boolean> {\r\n  return await httpPut(UserEnd.Update + '/' + user.id, {\r\n    ...user,\r\n    newRoleIds,\r\n    accessToDelete,\r\n  });\r\n}\r\n\r\nexport async function updateProfile(\r\n  user: UpdateUserProfile\r\n): Promise<boolean | undefined> {\r\n  return await httpPost<boolean>(UserEnd.UpdateProfile, user);\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\nimport { CustomReturn } from './CustomReturn';\r\nexport default function CustomTextBox({\r\n  title,\r\n  name,\r\n  type,\r\n  id,\r\n  className,\r\n  value,\r\n  readonly,\r\n  onChange,\r\n  onKeyPress,\r\n}: {\r\n  title: string;\r\n  value?: string;\r\n  name?: string;\r\n  type?: string;\r\n  id?: string;\r\n  className?: string;\r\n  readonly?: boolean | false;\r\n  onChange?: (data: CustomReturn) => void;\r\n  onKeyPress?: (key: React.KeyboardEvent<HTMLDivElement>) => void;\r\n}) {\r\n  const [toggle, setToggle] = useState(true);\r\n  return (\r\n    <div className='custom-input '>\r\n      <label htmlFor={name}>{title}</label>\r\n      <div className='input-container'>\r\n        {readonly ? (\r\n          <span>{value}</span>\r\n        ) : (\r\n          <>\r\n            <input\r\n              type={\r\n                type === 'password'\r\n                  ? toggle\r\n                    ? 'password'\r\n                    : 'text'\r\n                  : type ?? 'text'\r\n              }\r\n              name={name}\r\n              id={id}\r\n              value={value}\r\n              className={`${className} ${type}`}\r\n              onChange={(e) =>\r\n                onChange?.({ elementName: name ?? '', value: e.target.value })\r\n              }\r\n              onKeyPress={onKeyPress}\r\n            />\r\n            {type === 'password' && (\r\n              <div className='eye-container'>\r\n                <FontAwesomeIcon\r\n                  icon={(toggle ? faEye : faEyeSlash) as IconProp}\r\n                  className='eye-icon'\r\n                  onClick={() => {\r\n                    setToggle((prev) => !prev);\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n  useUpdateAuthorize,\r\n  useUpdateUserProfile,\r\n} from '../custom-hooks/authorize-provider';\r\nimport { LoginUser } from '../entities/user/LoginUser';\r\nimport { authenticate } from '../processors/security-process';\r\nimport { saveProfile } from '../processors/session-manager';\r\nimport { getUserData } from '../processors/user-process';\r\nimport CustomTextBox from './components/custom-textbox';\r\nimport { CustomReturn } from './components/CustomReturn';\r\n\r\nexport default function LoginPage() {\r\n  const [user, setUser] = useState<LoginUser>({\r\n    username: '',\r\n    password: '',\r\n  });\r\n  const setMessage = useSetMessage();\r\n  const updateProfile = useUpdateUserProfile();\r\n  const updateAuthorize = useUpdateAuthorize();\r\n  const setBusy = useSetBusy();\r\n  async function signIn() {\r\n    setBusy(true);\r\n    await authenticate(user)\r\n      .then(async (res) => {\r\n        if (res) {\r\n          await getProfile();\r\n          updateAuthorize(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  async function getProfile() {\r\n    setBusy(true);\r\n    await getUserData()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          saveProfile(res);\r\n          updateProfile(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function onTextChange({ elementName, value }: CustomReturn) {\r\n    setUser({ ...user, [elementName]: value });\r\n  }\r\n  function onKeyPress(key: React.KeyboardEvent<HTMLDivElement>) {\r\n    if (key.key === 'Enter') {\r\n      if (user.username === '') {\r\n        document.getElementById('username')?.focus();\r\n        return;\r\n      }\r\n      if (user.password === '') {\r\n        document.getElementById('password')?.focus();\r\n        return;\r\n      }\r\n\r\n      signIn();\r\n    }\r\n  }\r\n  return (\r\n    <section>\r\n      <div className='login-container'>\r\n        <div className='login-header'>\r\n          <h1>Authentication</h1>\r\n        </div>\r\n        <div className='login-content'>\r\n          <CustomTextBox\r\n            title='Username'\r\n            name='username'\r\n            id='username'\r\n            className='username'\r\n            onChange={onTextChange}\r\n            onKeyPress={onKeyPress}\r\n          />\r\n          <CustomTextBox\r\n            title='Password'\r\n            name='password'\r\n            id='password'\r\n            type='password'\r\n            className='password'\r\n            onChange={onTextChange}\r\n            onKeyPress={onKeyPress}\r\n          />\r\n          <button onClick={signIn} className='btn btn-signin'>\r\n            Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faAngleDoubleLeft,\r\n  faAngleDoubleRight,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function Pagination({\r\n  pages,\r\n  currentPageNumber,\r\n  goInPage,\r\n}: {\r\n  pages: number;\r\n  currentPageNumber: number;\r\n  goInPage: (page: number) => void;\r\n}) {\r\n  const [currentPage, setCurrentPage] = useState<number>(currentPageNumber);\r\n  const [canGoFirst, setGoFirst] = useState<boolean>(false);\r\n  const [canGoBefore, setGoBefore] = useState<boolean>(false);\r\n  const [canGoAfter, setGoAfter] = useState<boolean>(false);\r\n  const [canGoLast, setGoLast] = useState<boolean>(false);\r\n  const [pageList, setPageList] = useState<number[]>([]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(currentPageNumber);\r\n    let pl: number[] = [];\r\n    for (let i = 1; i <= pages; i++) {\r\n      pl.push(i);\r\n    }\r\n    setPageList(pl);\r\n\r\n    setGoAfter(false);\r\n    setGoLast(false);\r\n    setGoFirst(false);\r\n    setGoBefore(false);\r\n\r\n    if (pages > 1) {\r\n      if (currentPageNumber !== pages) {\r\n        setGoAfter(true);\r\n        setGoLast(true);\r\n      }\r\n      if (currentPageNumber !== 1) {\r\n        setGoFirst(true);\r\n        setGoBefore(true);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      pl = [];\r\n    };\r\n  }, [pages, currentPageNumber]);\r\n\r\n  function goToFirst() {\r\n    if (!canGoFirst) return;\r\n\r\n    goInPage(1);\r\n\r\n    setGoFirst(false);\r\n    setGoBefore(false);\r\n    setGoAfter(true);\r\n    setGoLast(true);\r\n  }\r\n\r\n  function goToBefore() {\r\n    if (!canGoBefore) return;\r\n    setCurrentPage((cp) => {\r\n      cp = cp - 1;\r\n      if (cp === 1) {\r\n        setGoFirst(false);\r\n        setGoBefore(false);\r\n      }\r\n\r\n      goInPage(cp);\r\n\r\n      return cp;\r\n    });\r\n\r\n    setGoAfter(true);\r\n    setGoLast(true);\r\n  }\r\n\r\n  function goToAfter() {\r\n    if (!canGoAfter) return;\r\n    setCurrentPage((cp) => {\r\n      cp = cp + 1;\r\n      if (cp === pages) {\r\n        setGoAfter(false);\r\n        setGoLast(false);\r\n      }\r\n\r\n      goInPage(cp);\r\n      return cp;\r\n    });\r\n\r\n    setGoFirst(true);\r\n    setGoBefore(true);\r\n  }\r\n\r\n  function goToLast() {\r\n    if (!canGoLast) return;\r\n    setCurrentPage(pages);\r\n    setGoAfter(false);\r\n    setGoLast(false);\r\n\r\n    setGoFirst(true);\r\n    setGoBefore(true);\r\n\r\n    goInPage(pages);\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    setCurrentPage(page);\r\n    setGoFirst(true);\r\n    setGoBefore(true);\r\n    setGoAfter(true);\r\n    setGoLast(true);\r\n\r\n    if (page === 1) {\r\n      setGoFirst(false);\r\n      setGoBefore(false);\r\n    }\r\n\r\n    if (page === pages) {\r\n      setGoAfter(false);\r\n      setGoLast(false);\r\n    }\r\n\r\n    goInPage(page);\r\n  }\r\n\r\n  return (\r\n    <div className='pagination'>\r\n      <FontAwesomeIcon\r\n        icon={faAngleDoubleLeft as IconProp}\r\n        className={!canGoFirst ? 'disabled' : ''}\r\n        onClick={goToFirst}\r\n      />\r\n      <FontAwesomeIcon\r\n        icon={faAngleLeft as IconProp}\r\n        onClick={goToBefore}\r\n        className={!canGoBefore ? 'disabled' : ''}\r\n      />\r\n      <div className='pages-container'>\r\n        <button className='current-page'>{currentPage}</button>\r\n        <div className='pages'>\r\n          {pageList.map((pl) => (\r\n            <div\r\n              key={pl}\r\n              className={pl === currentPage ? 'active' : ''}\r\n              onClick={() => {\r\n                goToPage(pl);\r\n              }}>\r\n              {pl}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <FontAwesomeIcon\r\n        icon={faAngleRight as IconProp}\r\n        onClick={goToAfter}\r\n        className={!canGoAfter ? 'disabled' : ''}\r\n      />\r\n      <FontAwesomeIcon\r\n        icon={faAngleDoubleRight as IconProp}\r\n        onClick={goToLast}\r\n        className={!canGoLast ? 'disabled' : ''}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function SeachBar({\r\n  search,\r\n}: {\r\n  search: (key: string) => void;\r\n}) {\r\n  const [searchKey, setSearchKey] = useState<string>('');\r\n\r\n  function onKeyPress(key: React.KeyboardEvent<HTMLDivElement>) {\r\n    if (key.key === 'Enter') {\r\n      search(searchKey);\r\n    }\r\n  }\r\n\r\n  function searchKeyChange(val: {\r\n    target: { value: React.SetStateAction<string> };\r\n  }) {\r\n    setSearchKey(val.target.value);\r\n  }\r\n\r\n  function searchClick() {\r\n    search(searchKey);\r\n  }\r\n  return (\r\n    <div className='search-container'>\r\n      <input\r\n        type='text'\r\n        className='name'\r\n        placeholder='Search...'\r\n        value={searchKey}\r\n        onChange={searchKeyChange}\r\n        onKeyPress={onKeyPress}\r\n      />\r\n      <FontAwesomeIcon\r\n        className='search-icon'\r\n        icon={faSearch as IconProp}\r\n        onClick={searchClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { User } from '../../../entities/user/User';\r\nimport { USERACTIONS } from '../../user-page';\r\n\r\nexport default function UserItem({\r\n  user,\r\n  action,\r\n}: {\r\n  user: User;\r\n  action: (action: USERACTIONS) => void;\r\n}) {\r\n  return (\r\n    <tr>\r\n      <td>{user.personnel?.name}</td>\r\n      <td>{user.personnel?.office?.description}</td>\r\n      <td>{user.personnel?.classification?.description}</td>\r\n      <td>{user.username}</td>\r\n      <td className='elipsis'>\r\n        {user.admin ? 'Admin' : 'User'}\r\n        {(user.userRoles?.length ?? 0) > 0 && ' | '}\r\n        {user.userRoles?.map((x) => x.role?.description).join(' | ')}\r\n      </td>\r\n      <td>{user.active ? 'Active' : 'Inactive'}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() =>\r\n            action({ type: 'Activate', id: user.id, active: user.active })\r\n          }>\r\n          Activate/Deactivate\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ type: 'ResetPassword', id: user.id })}>\r\n          Reset Password\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ type: 'Edit', user: user })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ type: 'Delete', id: user.id })}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { PersonnelEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { Personnel } from '../entities/transaction/Personnel';\r\nimport { httpGet, httpPost, httpPut } from './base';\r\n\r\nexport async function getPersonnels(): Promise<Personnel[] | undefined> {\r\n  return httpGet<Personnel[]>(PersonnelEnd.GetList);\r\n}\r\n\r\nexport async function getPersonnelsByClassification(\r\n  classificationId: number\r\n): Promise<Personnel[] | undefined> {\r\n  return httpGet<Personnel[]>(\r\n    `${PersonnelEnd.GetListByClassification}?classificationId=${classificationId}`\r\n  );\r\n}\r\n\r\nexport async function getAvailablePersonnelsByClassification(\r\n  classificationId: number\r\n): Promise<Personnel[] | undefined> {\r\n  return httpGet<Personnel[]>(\r\n    `${PersonnelEnd.GetAvailableListByClassification}?classificationId=${classificationId}`\r\n  );\r\n}\r\nexport async function searchPersonnels(\r\n  key: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<Personnel> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (key !== undefined) {\r\n    parameters += '&key=' + encodeURI(key);\r\n  }\r\n\r\n  return await httpGet<SearchResult<Personnel>>(\r\n    PersonnelEnd.Search + parameters\r\n  );\r\n}\r\nexport async function createPersonnel(\r\n  personnel: Personnel\r\n): Promise<Personnel | undefined> {\r\n  return httpPost(PersonnelEnd.Add, personnel);\r\n}\r\nexport async function updatePersonnel(personnel: Personnel): Promise<boolean> {\r\n  return httpPut(`${PersonnelEnd.Update}/${personnel.id}`, personnel);\r\n}\r\n","import { RoleEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { Role } from '../entities/user/Role';\r\nimport { httpDelete, httpGet, httpPost, httpPut } from './base';\r\nexport async function getRoles(): Promise<Role[] | undefined> {\r\n  return httpGet<Role[]>(RoleEnd.GetList);\r\n}\r\nexport async function searchRoles(\r\n  key: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<Role> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (key !== undefined) {\r\n    parameters += '&key=' + encodeURI(key);\r\n  }\r\n\r\n  return await httpGet<SearchResult<Role>>(RoleEnd.Search + parameters);\r\n}\r\nexport async function deleteRole(id: number): Promise<boolean> {\r\n  return await httpDelete(RoleEnd.Delete + '/' + id);\r\n}\r\n\r\nexport async function createRole(\r\n  description: string,\r\n  moduleIds: number[] | undefined\r\n): Promise<Role | undefined> {\r\n  return await httpPost<Role>(RoleEnd.Create, {\r\n    description,\r\n    moduleIds,\r\n  });\r\n}\r\n\r\nexport async function updateRole(\r\n  id: number,\r\n  description: string,\r\n  newModuleIds: number[] | undefined,\r\n  accessToDelete: number[] | undefined\r\n): Promise<boolean> {\r\n  return await httpPut(RoleEnd.Update + '/' + id, {\r\n    description,\r\n    newModuleIds,\r\n    accessToDelete,\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { CustomReturn } from './CustomReturn';\r\n\r\nexport default function CustomCheckBoxButton({\r\n  title,\r\n  name,\r\n  id,\r\n  className,\r\n  isCheck,\r\n  onChange,\r\n}: {\r\n  title: string;\r\n  name?: string;\r\n  id?: string;\r\n  className?: string;\r\n  isCheck: boolean;\r\n  onChange?: (data: CustomReturn) => void;\r\n}) {\r\n  return (\r\n    <div className={'custom-input ' + className}>\r\n      <button\r\n        className={'checkbox' + (isCheck ? ' checked' : '')}\r\n        value={isCheck ? 'true' : 'false'}\r\n        id={id}\r\n        onClick={() => {\r\n          onChange?.({ elementName: name ?? '', value: !isCheck });\r\n        }}>\r\n        {title}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { CustomReturn } from './CustomReturn';\r\n\r\nexport interface DropdownItem {\r\n  key: string | undefined;\r\n  value: string | undefined;\r\n}\r\nexport default function CustomDropdown({\r\n  title,\r\n  name,\r\n  id,\r\n  className,\r\n  value,\r\n  itemsList,\r\n  readonly,\r\n  onChange,\r\n  hasDefault,\r\n}: {\r\n  title: string;\r\n  name?: string;\r\n  id?: string;\r\n  className?: string;\r\n  value?: any;\r\n  itemsList: DropdownItem[];\r\n  readonly?: boolean | false;\r\n  onChange?: (data: CustomReturn) => void;\r\n  hasDefault?: boolean | undefined;\r\n}) {\r\n  return (\r\n    <div className='custom-input'>\r\n      <label>{title}</label>\r\n      <div className='select-container'>\r\n        {readonly ? (\r\n          <span>{itemsList.find((x) => x.key === value)?.value}</span>\r\n        ) : (\r\n          <select\r\n            id={id}\r\n            className={className}\r\n            value={value ?? ''}\r\n            onChange={(e) => {\r\n              onChange?.({\r\n                elementName: name ?? 'def',\r\n                value: e.target.value,\r\n                text: e.target.selectedOptions?.[0]?.text,\r\n              });\r\n            }}>\r\n            {hasDefault && <option value={undefined}></option>}\r\n            {itemsList?.map((item) => (\r\n              <option key={item.key} value={item.key}>\r\n                {item.value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { ModuleEnd } from '../endpoints';\r\nimport { Module } from '../entities/user/Module';\r\nimport { httpGet } from './base';\r\n\r\nexport async function getModules(): Promise<Module[] | undefined> {\r\n  return await httpGet<Module[]>(ModuleEnd.GetList);\r\n}\r\n","import React from 'react';\r\n\r\nexport default function CustomCheckBox({\r\n  isCheck,\r\n  checkChange,\r\n  id,\r\n  text,\r\n}: {\r\n  checkChange: () => void;\r\n  isCheck: boolean;\r\n  id?: string;\r\n  text?: string;\r\n}) {\r\n  return (\r\n    <div className='check'>\r\n      <label className='check-container'>\r\n        <input\r\n          type='checkbox'\r\n          id={id ?? 'check'}\r\n          onChange={checkChange}\r\n          checked={isCheck}\r\n        />\r\n        <span className='checkmark'></span>\r\n      </label>\r\n      {text && (\r\n        <label className='check-label' htmlFor={id ?? 'check'}>\r\n          {text}\r\n        </label>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { Module } from '../../../entities/user/Module';\r\nimport { RoleManagementActions } from '../../modals/manage-role';\r\nimport CustomCheckBox from '../custom-check-box';\r\n\r\nexport default function ModuleItemSelection({ module }: { module: Module }) {\r\n  const action = useContext(RoleManagementActions);\r\n  return (\r\n    <tr>\r\n      <td className='left-content'>\r\n        {module.viewOnly ? (\r\n          <div>{module.description}</div>\r\n        ) : (\r\n          <CustomCheckBox\r\n            checkChange={() => {\r\n              action({ action: 'Check', payload: module });\r\n            }}\r\n            id={module.id.toString()}\r\n            text={module.description}\r\n            isCheck={module?.checked ?? false}\r\n          />\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Modules } from '../../modals/manage-role';\r\nimport ModuleItemSelection from './module-item-selection';\r\n\r\nexport default function ModuleSelection() {\r\n  const modules = useContext(Modules);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Module Access</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {modules.map((module) => (\r\n          <ModuleItemSelection key={module.id} module={module} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Module } from '../../entities/user/Module';\r\nimport { Role } from '../../entities/user/Role';\r\nimport { getModules } from '../../processors/module-process';\r\nimport { createRole, updateRole } from '../../processors/role-process';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport ModuleSelection from '../components/role-components/module-selection';\r\nimport Modal from './modal';\r\n\r\ntype RoleManagementAction = { action: 'Check'; payload: Module };\r\nexport const RoleManagementActions = createContext<\r\n  (action: RoleManagementAction) => void\r\n>(() => {});\r\nexport const Modules = createContext<Module[]>([]);\r\nexport default function ManageRole({\r\n  selectedRole,\r\n  onClose,\r\n  viewOnly,\r\n}: {\r\n  selectedRole: Role | undefined;\r\n  onClose: (hasChanges: boolean) => void;\r\n  viewOnly: boolean;\r\n}) {\r\n  const [role, setRole] = useState<Role>(\r\n    () =>\r\n      selectedRole ?? {\r\n        id: 0,\r\n        description: '',\r\n        accesses: [],\r\n      }\r\n  );\r\n  const [modules, setModules] = useState<Module[]>([]);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    //eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchModules();\r\n  }\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (role.id === 0) {\r\n      await createRole(\r\n        role.description,\r\n        modules.filter((x) => x.checked).map((x) => x.id)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Role Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateRole(\r\n        role.id,\r\n        role.description,\r\n        modules\r\n          .filter((x) => x.checked && x.accessId === undefined)\r\n          .map((x) => x.id),\r\n        modules\r\n          .filter((x) => !x.checked && x.accessId !== undefined)\r\n          .map((x) => x.accessId ?? 0)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Role Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  function onChange(data: CustomReturn) {\r\n    setRole((r) => {\r\n      return { ...r, [data.elementName]: data.value };\r\n    });\r\n  }\r\n  async function roleManagement(action: RoleManagementAction) {\r\n    switch (action.action) {\r\n      case 'Check':\r\n        setModules(\r\n          modules.map((x) => {\r\n            if (x.id === action.payload.id) {\r\n              x.checked = !x.checked;\r\n            }\r\n            return x;\r\n          })\r\n        );\r\n        break;\r\n    }\r\n  }\r\n  async function fetchModules() {\r\n    setBusy(true);\r\n    await getModules()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          let resMod = res.map((module) => {\r\n            const mod = role.accesses?.filter(\r\n              (acc) => acc.moduleId === module.id\r\n            )?.[0];\r\n            if (mod !== undefined) {\r\n              module.checked = true;\r\n              module.accessId = mod.id;\r\n            }\r\n            return module;\r\n          });\r\n\r\n          if (viewOnly) {\r\n            resMod = resMod\r\n              .filter((x) => x.accessId !== undefined)\r\n              .map((x) => {\r\n                x.viewOnly = true;\r\n                return x;\r\n              });\r\n          }\r\n          setModules(resMod);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title={\r\n        viewOnly ? 'Role' : !!selectedRole?.id ? 'Update Role' : 'Add New Role'\r\n      }>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <CustomTextBox\r\n          title='Description'\r\n          name='description'\r\n          value={role.description}\r\n          onChange={onChange}\r\n          readonly={viewOnly}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Modules.Provider value={modules}>\r\n          <RoleManagementActions.Provider value={roleManagement}>\r\n            <ModuleSelection />\r\n          </RoleManagementActions.Provider>\r\n        </Modules.Provider>\r\n      </div>\r\n      {!viewOnly && (\r\n        <div className='modal-footer'>\r\n          <button onClick={saveData} className='btn-modal btn-primary'>\r\n            SAVE\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Modal>\r\n  );\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faEye, faTrash, faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Role } from '../../entities/user/Role';\r\nimport { User, UserRole } from '../../entities/user/User';\r\nimport { getPersonnels } from '../../processors/personnel-process';\r\nimport { getRoles } from '../../processors/role-process';\r\nimport { createUser, updateUser } from '../../processors/user-process';\r\nimport CustomCheckBoxButton from '../components/custom-check-box-button';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport ManageRole from './manage-role';\r\nimport Modal from './modal';\r\nexport default function ManageUser({\r\n  usersInfo,\r\n  onClose,\r\n}: {\r\n  usersInfo: User | undefined;\r\n  onClose: (needToReLoad: boolean) => void;\r\n}) {\r\n  const [personnelItem, setPersonnelItem] = useState<DropdownItem[]>([]);\r\n  const [user, setUser] = useState<User>(\r\n    () =>\r\n      usersInfo ?? {\r\n        id: 0,\r\n        username: '',\r\n        active: false,\r\n        admin: false,\r\n        personnelId: undefined,\r\n      }\r\n  );\r\n  const [roleItems, setRoleItems] = useState<DropdownItem[]>([]);\r\n  const [userRoles, setUserRoles] = useState<UserRole[]>(\r\n    () => usersInfo?.userRoles ?? []\r\n  );\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedRole, setSelectedRole] = useState<Role | undefined>();\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchPersonnels();\r\n    await fetchRoles();\r\n  }\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (user.id === 0) {\r\n      await createUser(\r\n        user,\r\n        userRoles.map((x) => x.roleId)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'New User Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateUser(\r\n        user,\r\n        userRoles.filter((x) => x.id === 0).map((x) => x.roleId),\r\n        userRoles.filter((x) => x.deleted).map((x) => x.id)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'User Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  async function fetchPersonnels() {\r\n    setBusy(true);\r\n    await getPersonnels()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnelItem(() =>\r\n            res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.name,\r\n              };\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function onChange({ elementName, value, text }: CustomReturn) {\r\n    if (elementName === 'role') {\r\n      if (value !== undefined) {\r\n        return;\r\n      }\r\n      setUserRoles((r) => [\r\n        ...r,\r\n        { id: 0, roleId: +value, roleDesc: text, userId: user.id },\r\n      ]);\r\n      setRoleItems((r) => r.filter((x) => x.key !== value));\r\n      return;\r\n    }\r\n    setUser((prevUser) => {\r\n      return { ...prevUser, [elementName]: value };\r\n    });\r\n  }\r\n  async function fetchRoles() {\r\n    setBusy(true);\r\n    await getRoles()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setRoleItems(() =>\r\n            res\r\n              .filter(\r\n                (x) =>\r\n                  !user.userRoles?.filter((u) => u.roleId === x.id)?.[0]?.id\r\n              )\r\n              .map((x) => {\r\n                return { key: x.id.toString(), value: x.description };\r\n              })\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => {\r\n        setBusy(false);\r\n      });\r\n  }\r\n  function undoDeleteRole(role: UserRole) {\r\n    setUserRoles((res) =>\r\n      res.map((x) => {\r\n        if (x.roleId === role.roleId) x.deleted = false;\r\n        return x;\r\n      })\r\n    );\r\n  }\r\n  function deleteRole(role: UserRole) {\r\n    setUserRoles((res) => {\r\n      if (role.id === 0) {\r\n        return res.filter((x) => x.roleId !== role.roleId);\r\n      }\r\n      return res.map((x) => {\r\n        if (x.roleId === role.roleId) x.deleted = true;\r\n        return x;\r\n      });\r\n    });\r\n    if (role.id === 0) {\r\n      setRoleItems([\r\n        ...roleItems,\r\n        {\r\n          key: role.roleId?.toString() ?? '',\r\n          value: role.role?.description ?? '',\r\n        },\r\n      ]);\r\n    }\r\n  }\r\n  function viewRole(role: UserRole) {\r\n    setSelectedRole(role.role);\r\n    setShowModal(true);\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => onClose(false)}\r\n      title={(user?.id ?? 0) > 0 ? 'Update Users Information' : 'Add New User'}>\r\n      <div className='user-management-modal-body modal-content-body'>\r\n        <div>\r\n          <CustomDropdown\r\n            title='Personnel'\r\n            name='personnelId'\r\n            hasDefault={true}\r\n            value={user?.personnelId}\r\n            onChange={onChange}\r\n            itemsList={personnelItem}\r\n          />\r\n          <CustomTextBox\r\n            title='Username'\r\n            name='username'\r\n            value={user?.username}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <CustomCheckBoxButton\r\n            title='Is Admin'\r\n            name='admin'\r\n            isCheck={user?.admin ?? false}\r\n            onChange={onChange}\r\n          />\r\n          <CustomCheckBoxButton\r\n            title='Is Active'\r\n            name='active'\r\n            isCheck={user?.active ?? false}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <CustomDropdown\r\n            title='Role'\r\n            name='role'\r\n            hasDefault={true}\r\n            onChange={onChange}\r\n            itemsList={roleItems}\r\n          />\r\n        </div>\r\n        <div className='table-container'>\r\n          <table className='item-table'>\r\n            <thead>\r\n              <tr>\r\n                <th>User Roles</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {userRoles?.map((role) => (\r\n                <tr key={role.roleId} className={role.deleted ? 'deleted' : ''}>\r\n                  <td>{role.roleDesc ?? role.role?.description}</td>\r\n                  <td className='table-actions'>\r\n                    {role.deleted && (\r\n                      <FontAwesomeIcon\r\n                        icon={faUndo as IconProp}\r\n                        className='action-icon table-icon-button'\r\n                        onClick={() => {\r\n                          undoDeleteRole(role);\r\n                        }}\r\n                        title='Undo'\r\n                      />\r\n                    )}\r\n                    {!role.deleted && (\r\n                      <FontAwesomeIcon\r\n                        icon={faTrash as IconProp}\r\n                        className='action-icon table-icon-button'\r\n                        onClick={() => {\r\n                          deleteRole(role);\r\n                        }}\r\n                        title='Delete'\r\n                      />\r\n                    )}\r\n                    <FontAwesomeIcon\r\n                      icon={faEye as IconProp}\r\n                      className='action-icon table-icon-button'\r\n                      onClick={() => {\r\n                        viewRole(role);\r\n                      }}\r\n                      title='View'\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n      <div>\r\n        {showModal && (\r\n          <ManageRole\r\n            onClose={() => {\r\n              setShowModal(false);\r\n            }}\r\n            selectedRole={selectedRole}\r\n            viewOnly={true}\r\n          />\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { User } from '../entities/user/User';\r\nimport {\r\n  activateUsers,\r\n  deleteUser,\r\n  resetUserPassword,\r\n  searchUsers,\r\n} from '../processors/user-process';\r\nimport Pagination from './components/pagination';\r\nimport SeachBar from './components/seachbar';\r\nimport UserItem from './components/users-components/user-item';\r\nimport ManageUser from './modals/manage-user';\r\n\r\nexport type USERACTIONS =\r\n  | { type: 'Activate'; id: number; active: boolean }\r\n  | { type: 'ResetPassword'; id: number }\r\n  | { type: 'Edit'; user: User }\r\n  | { type: 'Delete'; id: number };\r\n\r\nexport default function UserPage() {\r\n  const [name, setName] = useState<string | undefined>();\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState<User | undefined>();\r\n\r\n  useEffect(\r\n    () => {\r\n      searchUser(name, currentPage);\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function userAction(action: USERACTIONS) {\r\n    switch (action.type) {\r\n      case 'Activate':\r\n        activateUser(action.id, action.active);\r\n        break;\r\n      case 'ResetPassword':\r\n        resetPassword(action.id);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedUser(action.user);\r\n        break;\r\n      case 'Delete':\r\n        setMessage({\r\n          message: 'Are you sure you want to delete this?',\r\n          action: 'YESNO',\r\n          onOk: () => {\r\n            deleteSelectedUser(action.id);\r\n          },\r\n        });\r\n        break;\r\n      default:\r\n        setMessage({ message: 'Invalid Action' });\r\n        break;\r\n    }\r\n  }\r\n\r\n  async function deleteSelectedUser(userid: number) {\r\n    setBusy(true);\r\n    await deleteUser(userid)\r\n      .then(() => {\r\n        setMessage({\r\n          message: 'User Deleted',\r\n          onOk: () => {\r\n            searchUser(name, currentPage);\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function activateUser(id: number, active: boolean) {\r\n    setMessage({\r\n      message: 'Active this user?',\r\n      action: 'YESNO',\r\n      onOk: async () => {\r\n        setBusy(true);\r\n        await activateUsers(id)\r\n          .then((res) => {\r\n            setUsers((users) =>\r\n              users.map((user) => {\r\n                if (user.id === id && active !== null) {\r\n                  user.active = !active;\r\n                }\r\n                return user;\r\n              })\r\n            );\r\n\r\n            setMessage({ message: active ? 'Deactivated' : 'Activated' });\r\n          })\r\n          .catch((err) => {\r\n            setMessage({ message: err.message });\r\n          })\r\n          .finally(() => setBusy(false));\r\n      },\r\n    });\r\n  }\r\n\r\n  function resetPassword(id: number) {\r\n    setMessage({\r\n      message: 'Reset Password?',\r\n      action: 'YESNO',\r\n      onOk: async () => {\r\n        setBusy(true);\r\n        await resetUserPassword(id)\r\n          .then(() => {\r\n            setMessage({ message: 'Password reset to default password' });\r\n          })\r\n          .catch((err) => {\r\n            setMessage({ message: err.message });\r\n          })\r\n          .finally(() => setBusy(false));\r\n      },\r\n    });\r\n  }\r\n\r\n  function searchUser(name: undefined | string, page: number) {\r\n    setBusy(true);\r\n    searchUsers(name, page)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setUsers(res.results);\r\n          setPageCount(res.pageCount);\r\n          setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchUser(name, page);\r\n  }\r\n\r\n  function search(key: string) {\r\n    setName(key);\r\n    searchUser(key, 1);\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchUser(name, currentPage);\r\n    }\r\n  }\r\n  function addUser() {\r\n    setSelectedUser(undefined);\r\n    setShowModal(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Users</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <section>\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}></Pagination>\r\n      </section>\r\n      <section>\r\n        <table className='users-content item-table'>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Office</th>\r\n              <th>Classification</th>\r\n              <th>Username</th>\r\n              <th>Role</th>\r\n              <th>Status</th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan={6}>\r\n                <button className='btn' onClick={addUser}>\r\n                  Add New User\r\n                </button>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <UserItem key={user.id} user={user} action={userAction} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n      <>\r\n        {showModal && <ManageUser onClose={onClose} usersInfo={selectedUser} />}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","export const Routes = {\r\n  Home: '/',\r\n  User: '/users',\r\n  Role: '/roles',\r\n  Office: '/offices',\r\n  Personnel: '/personnels',\r\n  Classification: '/classifications',\r\n  ConcernMonitoring: '/concerns-monitoring',\r\n  Concern: '/concerns',\r\n  Ticket: '/tickets',\r\n  Summary: '/summary',\r\n};\r\n","import { ClassificationEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { Classification } from '../entities/transaction/Classification';\r\nimport { httpGet, httpPost, httpPut } from './base';\r\n\r\nexport async function getClassifications(): Promise<\r\n  Classification[] | undefined\r\n> {\r\n  return await httpGet<Classification[]>(ClassificationEnd.GetList);\r\n}\r\nexport async function searchClassifications(\r\n  key: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<Classification> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (key !== undefined) {\r\n    parameters += '&key=' + encodeURI(key);\r\n  }\r\n\r\n  return await httpGet<SearchResult<Classification>>(\r\n    ClassificationEnd.Search + parameters\r\n  );\r\n}\r\nexport async function createClassification(\r\n  classification: Classification\r\n): Promise<Classification | undefined> {\r\n  return httpPost(ClassificationEnd.Add, classification);\r\n}\r\nexport async function updateClassification(\r\n  classification: Classification\r\n): Promise<boolean> {\r\n  return httpPut(\r\n    `${ClassificationEnd.Update}/${classification.id}`,\r\n    classification\r\n  );\r\n}\r\n","export function downloadFile(file: string, fileName: string) {\r\n  let link = document.createElement('a');\r\n  link.href = file;\r\n  link.setAttribute('download', fileName);\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}\r\n\r\nexport function addDays(date: Date, days: number): Date {\r\n  var result = new Date(date);\r\n  result.setDate(result.getDate() + days);\r\n  return result;\r\n}\r\n\r\nexport function addMonths(date: Date, months: number): Date {\r\n  var result = new Date(date);\r\n  result.setMonth(result.getMonth() + months);\r\n  return result;\r\n}\r\n\r\nexport function getLastDateOfMonth(date: Date): Date {\r\n  var result = new Date(date);\r\n  result.setDate(1);\r\n  result = addMonths(result, 1);\r\n  result = addDays(result, -1);\r\n  return result;\r\n}\r\n\r\nexport function getFirstDateOfMonth(date: Date): Date {\r\n  var result = new Date(date);\r\n  result.setDate(1);\r\n  return result;\r\n}\r\n\r\nexport function getMonthName(date: Date): string {\r\n  const monthName = new Intl.DateTimeFormat('en-US', { month: 'long' }).format;\r\n  return monthName(date);\r\n}\r\n\r\nexport function dateToString(date?: Date | undefined): string | undefined {\r\n  return date === undefined ? undefined : new Date(date).toLocaleString();\r\n}\r\nexport function dateToDateString(date?: Date | undefined): string | undefined {\r\n  return date === undefined ? undefined : new Date(date).toDateString();\r\n}\r\n","import { ConcernEnd } from '../endpoints';\r\nimport { Concern } from '../entities/transaction/Concern';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { httpDelete, httpGet, httpPost, httpPut } from './base';\r\nimport { dateToString } from '../helpers';\r\n\r\nexport async function searchConcerns(\r\n  name: string | undefined,\r\n  page: number,\r\n  assigned: boolean,\r\n  closed: boolean,\r\n  start: Date | undefined,\r\n  end: Date | undefined,\r\n  officeId: number | undefined,\r\n  classificationId: number | undefined\r\n): Promise<SearchResult<Concern> | undefined> {\r\n  let parameters: string = `?page=${page}&isAssigned=${assigned}&isClosed=${closed}`;\r\n  if (name !== undefined) {\r\n    parameters += '&key=' + encodeURI(name);\r\n  }\r\n  if (start !== undefined) {\r\n    parameters += '&start=' + encodeURI(dateToString(start) ?? '');\r\n  }\r\n  if (end !== undefined) {\r\n    parameters += '&end=' + encodeURI(dateToString(end) ?? '');\r\n  }\r\n  if (officeId !== undefined) {\r\n    parameters += '&officeId=' + officeId;\r\n  }\r\n  if (classificationId !== undefined) {\r\n    parameters += '&classificationId=' + classificationId;\r\n  }\r\n  return await httpGet<SearchResult<Concern>>(ConcernEnd.Search + parameters);\r\n}\r\nexport async function createConcern(\r\n  concern: Concern,\r\n  personnelId: number | undefined\r\n): Promise<Concern | undefined> {\r\n  return await httpPost<Concern>(ConcernEnd.Create, {\r\n    ...concern,\r\n    personnelId,\r\n  });\r\n}\r\n\r\nexport async function updateConcern(concern: Concern): Promise<boolean> {\r\n  return await httpPut(`${ConcernEnd.Update}/${concern.id}`, concern);\r\n}\r\n\r\nexport async function deleteConcern(id: number): Promise<boolean> {\r\n  return await httpDelete(`${ConcernEnd.Delete}/${id}`);\r\n}\r\n\r\nexport async function assignConcern(\r\n  id: number,\r\n  personnelId: number\r\n): Promise<boolean | undefined> {\r\n  return await httpPost<boolean>(ConcernEnd.Assign, { id, personnelId });\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { ConcernStatus } from '../../../constant';\r\nimport { Concern } from '../../../entities/transaction/Concern';\r\nimport { dateToString } from '../../../helpers';\r\nimport { ConcernActions } from '../../concern-page';\r\n\r\nexport default function ConcernItem({ concern }: { concern: Concern }) {\r\n  const action = useContext(ConcernActions);\r\n  return (\r\n    <tr>\r\n      <td>{concern.entryDate && dateToString(concern.entryDate)}</td>\r\n      <td>{concern.number}</td>\r\n      <td>{concern.description}</td>\r\n      <td>{concern.classification?.description}</td>\r\n      <td>{concern.caller}</td>\r\n      <td>\r\n        <div>{concern.status}</div>\r\n        <div>{concern.closedDate && dateToString(concern.closedDate)}</div>\r\n      </td>\r\n      <td className='table-actions'>\r\n        {concern.statusId !== ConcernStatus.Open && (\r\n          <button\r\n            className='btn'\r\n            onClick={() => action({ action: 'ViewAction', payload: concern })}>\r\n            View Actions\r\n          </button>\r\n        )}\r\n        {concern.statusId === ConcernStatus.Open && (\r\n          <>\r\n            <button\r\n              className='btn'\r\n              onClick={() => action({ action: 'Assign', payload: concern })}>\r\n              Assign To Concerned Personnel\r\n            </button>\r\n\r\n            <button\r\n              className='btn'\r\n              onClick={() => action({ action: 'Edit', payload: concern })}>\r\n              Edit\r\n            </button>\r\n            <button\r\n              className='btn'\r\n              onClick={() => action({ action: 'Delete', payload: concern.id })}>\r\n              Delete\r\n            </button>\r\n          </>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { ConcernActions, ConcernList } from '../../concern-page';\r\nimport ConcernItem from './concern-item';\r\n\r\nexport default function ConcernItems() {\r\n  const action = useContext(ConcernActions);\r\n  const concerns = useContext(ConcernList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th style={{ width: '8%' }}>Time Entry</th>\r\n          <th style={{ width: '10%' }}>Ticket Number</th>\r\n          <th>Description</th>\r\n          <th style={{ width: '10%' }}>Classification</th>\r\n          <th style={{ width: '15%' }}>Caller</th>\r\n          <th style={{ width: '8%' }}>Status</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Concern\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {concerns.map((concern) => (\r\n          <ConcernItem key={concern.id} concern={concern} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import 'react-day-picker/lib/style.css';\r\nimport { CustomReturn } from './CustomReturn';\r\n\r\nexport default function CustomDatePicker({\r\n  title,\r\n  name,\r\n  id,\r\n  className,\r\n  value,\r\n  readonly,\r\n  onChange,\r\n}: {\r\n  title: string;\r\n  value?: Date;\r\n  name?: string;\r\n  id?: string;\r\n  className?: string;\r\n  readonly?: boolean | false;\r\n  onChange?: (data: CustomReturn) => void;\r\n}) {\r\n  const text: string | undefined =\r\n    value === undefined\r\n      ? undefined\r\n      : `${value.getFullYear()}-${(value.getMonth() + 1)\r\n          .toString()\r\n          .padStart(2, '0')}-${value\r\n          .getDate()\r\n          .toString()\r\n          .padStart(2, '0')}T${value\r\n          .getHours()\r\n          .toString()\r\n          .padStart(2, '0')}:${value.getMinutes().toString().padStart(2, '0')}`;\r\n  return (\r\n    <div className='custom-input'>\r\n      <label htmlFor={name}>{title}</label>\r\n      <div className='datepicker-container'>\r\n        {readonly ? (\r\n          <span>{value?.toLocaleDateString()}</span>\r\n        ) : (\r\n          <>\r\n            <input\r\n              type='datetime-local'\r\n              className='custom-datepicker'\r\n              value={text}\r\n              onChange={(e) => {\r\n                onChange?.({\r\n                  elementName: name ?? '',\r\n                  value:\r\n                    (e.target.value ?? '') === ''\r\n                      ? undefined\r\n                      : new Date(e.target.value),\r\n                });\r\n              }}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Concern } from '../../entities/transaction/Concern';\r\nimport { assignConcern } from '../../processors/concern-process';\r\nimport {\r\n  getAvailablePersonnelsByClassification,\r\n  getPersonnels,\r\n} from '../../processors/personnel-process';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function AssignConcern({\r\n  title,\r\n  onClose,\r\n  concern,\r\n}: {\r\n  title?: string;\r\n  onClose: (hasChanges: boolean, personnel: string) => void;\r\n  concern: Concern | undefined;\r\n}) {\r\n  const [personnelItem, setPersonnelItem] = useState<DropdownItem[]>([]);\r\n  const [availabelPersonnelItem, setAvailabelPersonnelItem] = useState<\r\n    DropdownItem[]\r\n  >([]);\r\n  const [selectedPersonnel, setSelectedPersonnel] = useState<\r\n    number | undefined\r\n  >();\r\n  const [selectedAvailablePersonnel, setSelectedAvailablePersonnel] = useState<\r\n    number | undefined\r\n  >();\r\n  const [selectedPersonnelName, setSelectedPersonnelName] = useState<\r\n    string | undefined\r\n  >();\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchAvailablePersonnels();\r\n    await fetchPersonnels();\r\n  }\r\n  async function fetchPersonnels() {\r\n    setBusy(true);\r\n    await getPersonnels()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnelItem(() =>\r\n            res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.name,\r\n              };\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchAvailablePersonnels() {\r\n    setBusy(true);\r\n    await getAvailablePersonnelsByClassification(concern?.classificationId ?? 0)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setAvailabelPersonnelItem(() =>\r\n            res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.name,\r\n              };\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function onChange({ elementName, value, text }: CustomReturn) {\r\n    setSelectedPersonnelName(text);\r\n    if (elementName === 'personnel') {\r\n      setSelectedPersonnel(+value);\r\n      setSelectedAvailablePersonnel(undefined);\r\n      return;\r\n    }\r\n    if (elementName === 'available-personnel') {\r\n      setSelectedAvailablePersonnel(+value);\r\n      setSelectedPersonnel(undefined);\r\n      return;\r\n    }\r\n  }\r\n\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if ((selectedPersonnel ?? selectedAvailablePersonnel ?? 0) === 0) {\r\n      setMessage({ message: 'Select Personnel' });\r\n      return;\r\n    }\r\n    await assignConcern(\r\n      concern?.id ?? 0,\r\n      selectedPersonnel ?? selectedAvailablePersonnel ?? 0\r\n    )\r\n      .then((res) => {\r\n        if (res)\r\n          setMessage({\r\n            message: 'Success',\r\n            onOk: () => {\r\n              onClose(true, selectedPersonnelName ?? '');\r\n            },\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <Modal onClose={() => onClose(false, '')} title={title ?? 'Assign Concern'}>\r\n      <div className='concern-management-modal-body modal-content-body'>\r\n        <div>\r\n          <CustomDropdown\r\n            title='Available Personnel'\r\n            name='available-personnel'\r\n            hasDefault={true}\r\n            value={selectedAvailablePersonnel}\r\n            onChange={onChange}\r\n            itemsList={availabelPersonnelItem}\r\n          />\r\n          <CustomDropdown\r\n            title='All Personnel'\r\n            name='personnel'\r\n            hasDefault={true}\r\n            value={selectedPersonnel}\r\n            onChange={onChange}\r\n            itemsList={personnelItem}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          ASSIGN\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { PersonnelConcernEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport {\r\n  PersonnelConcern,\r\n  TicketSummary,\r\n} from '../entities/transaction/PersonnelConcern';\r\nimport { httpGet, httpPost } from './base';\r\n\r\nexport async function getDirectConcerns(\r\n  isResolve: boolean,\r\n  isForwarded: boolean,\r\n  isPending: boolean,\r\n  page: number\r\n): Promise<SearchResult<PersonnelConcern> | undefined> {\r\n  let params = `?isResolved=${isResolve}&isForwarded=${isForwarded}&isPending=${isPending}&page=${page}`;\r\n  return httpGet<SearchResult<PersonnelConcern>>(\r\n    `${PersonnelConcernEnd.GetList}${params}`\r\n  );\r\n}\r\nexport async function getActions(\r\n  concernId: number\r\n): Promise<PersonnelConcern[] | undefined> {\r\n  return httpGet<PersonnelConcern[]>(\r\n    `${PersonnelConcernEnd.GetActions}?concernId=${concernId}`\r\n  );\r\n}\r\nexport async function resolvePersonnelConcern(\r\n  id: number,\r\n  actionTaken: string\r\n): Promise<boolean | undefined> {\r\n  return httpPost<boolean>(PersonnelConcernEnd.Resolve, { id, actionTaken });\r\n}\r\nexport async function forwardPersonnelConcern(\r\n  id: number,\r\n  personnelId: number,\r\n  reason: string\r\n): Promise<boolean | undefined> {\r\n  return httpPost<boolean>(PersonnelConcernEnd.Forward, {\r\n    id,\r\n    personnelId,\r\n    reason,\r\n  });\r\n}\r\n\r\nexport async function getTicketSummary(\r\n  month: number,\r\n  year: number\r\n): Promise<TicketSummary[] | undefined> {\r\n  return httpGet<TicketSummary[]>(\r\n    `${PersonnelConcernEnd.Summary}?month=${month}&year=${year}`\r\n  );\r\n}\r\n\r\nexport async function getDetailedSummary(\r\n  year: number,\r\n  month: number,\r\n  day: number\r\n): Promise<PersonnelConcern[] | undefined> {\r\n  return httpGet<PersonnelConcern[]>(\r\n    `${PersonnelConcernEnd.DetailedSummary}?year=${year}&month=${month}&day=${day}`\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { PersonnelConcernStatus } from '../../../constant';\r\nimport { PersonnelConcern } from '../../../entities/transaction/PersonnelConcern';\r\nimport { dateToString } from '../../../helpers';\r\n\r\nexport default function ConcernAction({\r\n  action,\r\n}: {\r\n  action: PersonnelConcern;\r\n}) {\r\n  return (\r\n    <div className='concern-action'>\r\n      <div>\r\n        <span>{action.prevPersonnelConcernId ? 'Forwarded' : 'Assigned'}</span>\r\n        <span>\r\n          {action.prevPersonnelConcernId ? '' : ` By ${action.creator}`}\r\n        </span>\r\n        <span>\r\n          &nbsp; at ({action.receivedDate && dateToString(action.receivedDate)})\r\n        </span>\r\n        &nbsp; to\r\n      </div>\r\n      <div>{action.personnel?.name}</div>\r\n      <div>Status</div>\r\n      <div>\r\n        {action.status}\r\n        {action.closedDate && <span> ({dateToString(action.closedDate)})</span>}\r\n      </div>\r\n      {action.statusId !== PersonnelConcernStatus.Pending && (\r\n        <>\r\n          <div>\r\n            {action.statusId === PersonnelConcernStatus.Forwarded\r\n              ? 'Reason'\r\n              : 'Action Taken'}\r\n            :\r\n          </div>\r\n          <div>{action.action}</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Concern } from '../../entities/transaction/Concern';\r\nimport { PersonnelConcern } from '../../entities/transaction/PersonnelConcern';\r\nimport { getActions } from '../../processors/personnel-concern-process';\r\nimport ConcernAction from '../components/concerns-components/concern-action';\r\nimport Modal from './modal';\r\n\r\nexport default function ConcernActionsViewer({\r\n  concern,\r\n  onClose,\r\n}: {\r\n  concern: Concern | undefined;\r\n  onClose: () => void;\r\n}) {\r\n  const [personnelConcern, setPersonnelConcern] = useState<PersonnelConcern[]>(\r\n    []\r\n  );\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchActions();\r\n  }\r\n  async function fetchActions() {\r\n    setBusy(true);\r\n    await getActions(concern?.id ?? 0)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnelConcern(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  return (\r\n    <Modal title='Concern Actions' onClose={onClose}>\r\n      <div className='modal-content-body'>\r\n        <div className='concern-actions'>\r\n          {personnelConcern.map((x) => (\r\n            <ConcernAction key={x.id} action={x} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { CustomReturn } from './CustomReturn';\r\nexport default function CustomTextArea({\r\n  title,\r\n  name,\r\n  id,\r\n  className,\r\n  value,\r\n  readonly,\r\n  onChange,\r\n  lineCount,\r\n}: {\r\n  title: string;\r\n  value?: string;\r\n  name?: string;\r\n  id?: string;\r\n  className?: string;\r\n  readonly?: boolean | false;\r\n  lineCount?: number | undefined;\r\n  onChange?: (data: CustomReturn) => void;\r\n}) {\r\n  return (\r\n    <div className='custom-input no-height'>\r\n      <label htmlFor={name}>{title}</label>\r\n      <div className='input-container'>\r\n        {readonly ? (\r\n          <span>{value}</span>\r\n        ) : (\r\n          <>\r\n            <textarea\r\n              rows={lineCount}\r\n              name={name}\r\n              id={id}\r\n              value={value}\r\n              className={className}\r\n              onChange={(e) =>\r\n                onChange?.({ elementName: name ?? '', value: e.target.value })\r\n              }\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n  useUserProfile,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Concern } from '../../entities/transaction/Concern';\r\nimport { getClassifications } from '../../processors/classification-process';\r\nimport { createConcern, updateConcern } from '../../processors/concern-process';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport CustomTextArea from '../components/custom-textarea';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManageConcern({\r\n  selectedConcern,\r\n  onClose,\r\n}: {\r\n  selectedConcern: Concern | undefined;\r\n  onClose: (hasChange: boolean, personnel: string) => void;\r\n}) {\r\n  const profile = useUserProfile();\r\n  const [concern, setConcern] = useState<Concern>(\r\n    () =>\r\n      selectedConcern ?? {\r\n        id: 0,\r\n        caller: profile?.personnel?.name,\r\n        description: '',\r\n        classificationId: undefined,\r\n        officeId: profile?.personnel?.officeId,\r\n      }\r\n  );\r\n  const [classificationItem, setClassificationItem] = useState<DropdownItem[]>(\r\n    () => []\r\n  );\r\n  const [selectedPersonnel, setSelectedPersonnel] = useState<\r\n    number | undefined\r\n  >();\r\n  const [selectedAvailablePersonnel, setSelectedAvailablePersonnel] = useState<\r\n    number | undefined\r\n  >();\r\n  const [selectedPersonnelName, setSelectedPersonnelName] = useState<\r\n    string | undefined\r\n  >();\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchClassifications();\r\n  }\r\n  async function fetchClassifications() {\r\n    setBusy(true);\r\n    await getClassifications()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setClassificationItem(() =>\r\n            res.map((r) => {\r\n              return { key: r.id.toString(), value: r.description };\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (concern.id === 0) {\r\n      await createConcern(\r\n        concern,\r\n        selectedPersonnel ?? selectedAvailablePersonnel\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'New Concern Added',\r\n            onOk: () => {\r\n              onClose(true, selectedPersonnelName ?? '');\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateConcern(concern)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Concern Updated',\r\n            onOk: () => {\r\n              onClose(true, selectedPersonnelName ?? '');\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n\r\n  async function onChange({ elementName, value, text }: CustomReturn) {\r\n    if (elementName === 'personnel') {\r\n      setSelectedPersonnel(+value);\r\n      setSelectedAvailablePersonnel(undefined);\r\n      setSelectedPersonnelName(text);\r\n      return;\r\n    }\r\n    if (elementName === 'available-personnel') {\r\n      setSelectedAvailablePersonnel(+value);\r\n      setSelectedPersonnel(undefined);\r\n      setSelectedPersonnelName(text);\r\n      return;\r\n    }\r\n    setConcern((prevConcern) => {\r\n      return { ...prevConcern, [elementName]: value };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => onClose(false, '')}\r\n      title={\r\n        (concern?.id ?? 0) > 0\r\n          ? `Update Concern ${concern.number}`\r\n          : 'New Concern'\r\n      }\r\n      className='management-modal'>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <div>\r\n          <div>\r\n            <CustomDropdown\r\n              title='Classification'\r\n              name='classificationId'\r\n              hasDefault={true}\r\n              value={concern?.classificationId}\r\n              onChange={onChange}\r\n              itemsList={classificationItem}\r\n            />\r\n          </div>\r\n          <div>\r\n            <CustomTextBox\r\n              title='Caller'\r\n              name='caller'\r\n              value={concern?.caller}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <CustomTextArea\r\n            title='Description'\r\n            name='description'\r\n            lineCount={7}\r\n            value={concern?.description}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  HubConnectionState,\r\n  LogLevel,\r\n} from '@microsoft/signalr';\r\nimport { createContext, useEffect, useRef, useState } from 'react';\r\nimport { API } from '../constant';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n  useUserProfile,\r\n} from '../custom-hooks/authorize-provider';\r\nimport { Hub } from '../endpoints';\r\nimport { Concern } from '../entities/transaction/Concern';\r\nimport { getClassifications } from '../processors/classification-process';\r\nimport { deleteConcern, searchConcerns } from '../processors/concern-process';\r\nimport ConcernItems from './components/concerns-components/concern-items';\r\nimport CustomCheckBox from './components/custom-check-box';\r\nimport CustomDatePicker from './components/custom-datepicker';\r\nimport CustomDropdown, { DropdownItem } from './components/custom-dropdown';\r\nimport { CustomReturn } from './components/CustomReturn';\r\nimport Pagination from './components/pagination';\r\nimport SeachBar from './components/seachbar';\r\nimport AssignConcern from './modals/assign-concern';\r\nimport ConcernActionsViewer from './modals/concern-actions-viewer';\r\nimport ManageConcern from './modals/manage-concern';\r\ninterface Filtering {\r\n  classification?: number | undefined;\r\n  startDate?: Date | undefined;\r\n  endDate?: Date | undefined;\r\n}\r\nexport type CONCERNACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'Assign'; payload: Concern }\r\n  | { action: 'ViewAction'; payload: Concern }\r\n  | { action: 'Edit'; payload: Concern }\r\n  | { action: 'Delete'; payload: number };\r\n\r\nexport const ConcernList = createContext<Concern[]>([]);\r\nexport const ConcernActions = createContext<(action: CONCERNACTIONS) => void>(\r\n  () => {}\r\n);\r\nexport default function ConcernPage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const profile = useUserProfile();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [concerns, setConcerns] = useState<Concern[]>(() => []);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showAssignmentModal, setShowAssignmentModal] = useState(false);\r\n  const [showActionsModal, setShowActionsModal] = useState(false);\r\n  const [selectedConcern, setSelectedConcern] = useState<Concern | undefined>();\r\n  const assigned = useRef(true);\r\n  const closed = useRef(false);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [connection, setConnection] = useState<HubConnection>();\r\n  const [classificationItem, setClassificationItem] = useState<DropdownItem[]>(\r\n    () => []\r\n  );\r\n  const [filtering, setFiltering] = useState<Filtering>(() => {\r\n    return {\r\n      classification: undefined,\r\n      startDate: undefined,\r\n      endDate: undefined,\r\n    };\r\n  });\r\n\r\n  async function onClose(hasChanges: boolean, personnel: string | undefined) {\r\n    setShowModal(false);\r\n    setShowAssignmentModal(false);\r\n    if (hasChanges) {\r\n      console.log(connection?.state);\r\n      await reconnect();\r\n      await connection?.invoke('NewConcern');\r\n      if ((personnel ?? '') !== '')\r\n        await connection?.invoke('NewTicket', personnel);\r\n      searchConcern();\r\n    }\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  async function initializeComponents() {\r\n    if (!('Notification' in window)) {\r\n      console.log('This browser does not support desktop notification');\r\n    } else {\r\n      Notification.requestPermission();\r\n    }\r\n    await fetchClassifications();\r\n    await connect();\r\n    await searchConcern();\r\n  }\r\n\r\n  async function connect() {\r\n    try {\r\n      if (connection === undefined) {\r\n        var conn = new HubConnectionBuilder()\r\n          .withUrl(API + Hub.Transaction)\r\n          .configureLogging(LogLevel.Information)\r\n          .build();\r\n\r\n        conn.on('NewConcern', () => {\r\n          new Notification('New Concern Added');\r\n          searchConcern();\r\n        });\r\n        conn.on('ResolveConcern', (ticketnumber) => {\r\n          new Notification(`Ticket ${ticketnumber} Resolved`);\r\n          searchConcern();\r\n        });\r\n        await conn.start();\r\n        if (conn.state === HubConnectionState.Connected) {\r\n          await conn.invoke('JoinConcernCreators');\r\n          console.log(conn.state);\r\n        }\r\n        setConnection(conn);\r\n      } else {\r\n        await reconnect();\r\n      }\r\n    } catch (ex) {\r\n      setMessage({ message: ex });\r\n    }\r\n  }\r\n\r\n  async function reconnect() {\r\n    if (connection?.state === HubConnectionState.Disconnected)\r\n      await connection?.start();\r\n  }\r\n\r\n  async function searchConcern() {\r\n    setBusy(true);\r\n    searchConcerns(\r\n      key,\r\n      currentPage,\r\n      assigned.current,\r\n      closed.current,\r\n      filtering.startDate,\r\n      filtering.endDate,\r\n      profile?.personnel?.officeId,\r\n      filtering.classification\r\n    )\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setConcerns(res.results);\r\n          setPageCount(res.pageCount);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function search(key: string) {\r\n    setKey(() => key);\r\n    setCurrentPage(() => 1);\r\n    searchConcern();\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    setCurrentPage(() => page);\r\n    searchConcern();\r\n  }\r\n\r\n  function concernAction(action: CONCERNACTIONS) {\r\n    switch (action.action) {\r\n      case 'Add':\r\n        setSelectedConcern(() => undefined);\r\n        setShowModal(() => true);\r\n        break;\r\n      case 'ViewAction':\r\n        setSelectedConcern(action.payload);\r\n        setShowActionsModal(true);\r\n        break;\r\n      case 'Assign':\r\n        setSelectedConcern(action.payload);\r\n        setShowAssignmentModal(true);\r\n        break;\r\n      case 'Edit':\r\n        setSelectedConcern(action.payload);\r\n        setShowModal(true);\r\n        break;\r\n      case 'Delete':\r\n        setMessage({\r\n          message: 'Are you sure you want to delete this?',\r\n          action: 'YESNO',\r\n          onOk: () => {\r\n            deleteSelectedConcern(action.payload);\r\n          },\r\n        });\r\n        break;\r\n      default:\r\n        setMessage({ message: 'Invalid Action' });\r\n        break;\r\n    }\r\n  }\r\n\r\n  async function deleteSelectedConcern(id: number) {\r\n    setBusy(true);\r\n    await deleteConcern(id)\r\n      .then(() => {\r\n        setMessage({\r\n          message: 'User Deleted',\r\n          onOk: () => {\r\n            searchConcern();\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  async function fetchClassifications() {\r\n    setBusy(true);\r\n    await getClassifications()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setClassificationItem(() => [\r\n            { key: '', value: '' },\r\n            ...res.map((r) => {\r\n              return { key: r.id.toString(), value: r.description };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  async function onChange({ elementName, value }: CustomReturn) {\r\n    setFiltering((r) => {\r\n      return { ...r, [elementName]: value };\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Concerns</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <section>\r\n        <div className='filter-container'>\r\n          <CustomDatePicker\r\n            title='Start Date'\r\n            name='startDate'\r\n            value={filtering.startDate}\r\n            onChange={onChange}\r\n          />\r\n          <CustomDatePicker\r\n            title='End Date'\r\n            name='endDate'\r\n            value={filtering.endDate}\r\n            onChange={onChange}\r\n          />\r\n          <CustomDropdown\r\n            title='Classification'\r\n            name='classification'\r\n            value={filtering.classification}\r\n            onChange={onChange}\r\n            itemsList={classificationItem}\r\n          />\r\n        </div>\r\n      </section>\r\n      <section className='head-content'>\r\n        <div className='container'>\r\n          <CustomCheckBox\r\n            text='Assigned'\r\n            id='assigned'\r\n            checkChange={() => {\r\n              assigned.current = !assigned.current;\r\n              searchConcern();\r\n            }}\r\n            isCheck={assigned.current}\r\n          />\r\n          <CustomCheckBox\r\n            text='Closed'\r\n            id='closed'\r\n            checkChange={() => {\r\n              closed.current = !closed.current;\r\n              searchConcern();\r\n            }}\r\n            isCheck={closed.current}\r\n          />\r\n        </div>\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}></Pagination>\r\n      </section>\r\n      <section>\r\n        <ConcernList.Provider value={concerns}>\r\n          <ConcernActions.Provider value={concernAction}>\r\n            <ConcernItems />\r\n          </ConcernActions.Provider>\r\n        </ConcernList.Provider>\r\n      </section>\r\n      <>\r\n        {showModal && (\r\n          <ManageConcern onClose={onClose} selectedConcern={selectedConcern} />\r\n        )}\r\n        {showAssignmentModal && (\r\n          <AssignConcern onClose={onClose} concern={selectedConcern} />\r\n        )}\r\n        {showActionsModal && (\r\n          <ConcernActionsViewer\r\n            concern={selectedConcern}\r\n            onClose={() => setShowActionsModal(false)}\r\n          />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n  useUpdateUserProfile,\r\n  useUserProfile,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { UpdateUserProfile } from '../../entities/user/UpdateUserProfile';\r\nimport { saveProfile } from '../../processors/session-manager';\r\nimport { updateProfile } from '../../processors/user-process';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManageProfile({ onClose }: { onClose: () => void }) {\r\n  const profile = useUserProfile();\r\n  const updateProfileInfo = useUpdateUserProfile();\r\n  const [user, setUser] = useState<UpdateUserProfile>(() => {\r\n    return {\r\n      username: profile?.username ?? '',\r\n      personnel: profile?.personnel,\r\n      password: '',\r\n      newPassword: '',\r\n      confirmNewPassword: '',\r\n    };\r\n  });\r\n\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  async function saveData() {\r\n    if ((user.password ?? '') !== '') {\r\n      if (\r\n        (user.newPassword ?? '') !== '' &&\r\n        (user.confirmNewPassword ?? '') !== ''\r\n      ) {\r\n        if (user.newPassword !== user.confirmNewPassword) {\r\n          setMessage({ message: 'Password not match' });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    setBusy(true);\r\n    await updateProfile(user)\r\n      .then(() => {\r\n        setMessage({\r\n          message: 'Profile Updated',\r\n          onOk: () => {\r\n            saveProfile({\r\n              ...profile,\r\n              username: user.username,\r\n            });\r\n            updateProfileInfo({\r\n              ...profile,\r\n              username: user.username,\r\n            });\r\n            onClose();\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function onChange({ elementName, value }: CustomReturn) {\r\n    setUser((prevUser) => {\r\n      return { ...prevUser, [elementName]: value };\r\n    });\r\n  }\r\n  return (\r\n    <Modal className='profile-modal' onClose={onClose} title='Users Profile'>\r\n      <div className='modal-content-body'>\r\n        <div>\r\n          <CustomTextBox\r\n            title='Name'\r\n            readonly={true}\r\n            value={user?.personnel?.name}\r\n          />\r\n          <CustomTextBox\r\n            title='Username'\r\n            name='username'\r\n            value={user?.username}\r\n            onChange={onChange}\r\n          />\r\n          <CustomTextBox\r\n            title='Old Password'\r\n            name='password'\r\n            value={user?.password}\r\n            type='password'\r\n            onChange={onChange}\r\n          />\r\n          <CustomTextBox\r\n            title='New Password'\r\n            name='newPassword'\r\n            type='password'\r\n            value={user?.newPassword}\r\n            onChange={onChange}\r\n          />\r\n          <CustomTextBox\r\n            title='Confirm New Password'\r\n            name='confirmNewPassword'\r\n            type='password'\r\n            value={user?.confirmNewPassword}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Role } from '../../../entities/user/Role';\r\nimport { RoleActions } from '../../role-page';\r\n\r\nexport default function RoleItem({ role }: { role: Role }) {\r\n  const action = useContext(RoleActions);\r\n  return (\r\n    <tr>\r\n      <td>{role.description}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'View', payload: role })}>\r\n          View\r\n        </button>\r\n\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Edit', payload: role })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Delete', payload: role.id })}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { RoleActions, RoleList } from '../../role-page';\r\nimport RoleItem from './role-item';\r\n\r\nexport default function RoleItems() {\r\n  const action = useContext(RoleActions);\r\n  const concerns = useContext(RoleList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Role\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {concerns.map((concern) => (\r\n          <RoleItem key={concern.id} role={concern} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Module } from '../entities/user/Module';\r\nimport { Role } from '../entities/user/Role';\r\nimport { searchRoles } from '../processors/role-process';\r\nimport Pagination from './components/pagination';\r\nimport RoleItems from './components/role-components/role-items';\r\nimport SeachBar from './components/seachbar';\r\nimport ManageRole from './modals/manage-role';\r\n\r\ntype ACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'View'; payload: Role }\r\n  | { action: 'Edit'; payload: Role }\r\n  | { action: 'Delete'; payload: number }\r\n  | { action: 'Check'; payload: Module };\r\nexport const RoleList = createContext<Role[]>([]);\r\nexport const RoleActions = createContext<(action: ACTIONS) => void>(() => {});\r\n\r\nexport default function RolePage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [roles, setRoles] = useState<Role[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedRole, setSelectedRole] = useState<Role | undefined>();\r\n  const [viewOnly, setViewOnly] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      searchRole({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function roleAction(action: ACTIONS) {\r\n    switch (action.action) {\r\n      case 'View':\r\n        setShowModal(true);\r\n        setSelectedRole(action.payload);\r\n        setViewOnly(true);\r\n        break;\r\n      case 'Add':\r\n        setShowModal(true);\r\n        setSelectedRole(undefined);\r\n        setViewOnly(false);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedRole(action.payload);\r\n        setViewOnly(false);\r\n        break;\r\n      // case 'Delete':\r\n      //   setMessage({\r\n      //     message: 'Are you sure you want to delete this?',\r\n      //     action: 'YESNO',\r\n      //     onOk: () => {\r\n      //       deleteSelectedUser(action.payload);\r\n      //     },\r\n      //   });\r\n      //   break;\r\n      // default:\r\n      //   setMessage({ message: 'Invalid Action' });\r\n      //   break;\r\n    }\r\n  }\r\n\r\n  function searchRole({\r\n    searchKey,\r\n    page,\r\n  }: {\r\n    searchKey?: string | undefined;\r\n    page?: number | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    searchRoles(searchKey ?? key, page ?? currentPage)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setRoles(res.results);\r\n          setPageCount(res.pageCount);\r\n          if (page !== undefined) setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchRole({ page: page });\r\n  }\r\n\r\n  function search(key: string) {\r\n    setKey(key);\r\n    searchRole({ searchKey: key, page: 1 });\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchRole({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Roles</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <section>\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}></Pagination>\r\n      </section>\r\n      <section>\r\n        <RoleList.Provider value={roles}>\r\n          <RoleActions.Provider value={roleAction}>\r\n            <RoleItems />\r\n          </RoleActions.Provider>\r\n        </RoleList.Provider>\r\n      </section>\r\n      <>\r\n        {showModal && (\r\n          <ManageRole\r\n            onClose={onClose}\r\n            selectedRole={selectedRole}\r\n            viewOnly={viewOnly}\r\n          />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { PersonnelConcernStatus } from '../../../constant';\r\nimport { PersonnelConcern } from '../../../entities/transaction/PersonnelConcern';\r\nimport { dateToString } from '../../../helpers';\r\nimport { DirectConcernActions } from '../../ticket-page';\r\n\r\nexport default function DirectConcernItem({\r\n  concern,\r\n}: {\r\n  concern: PersonnelConcern;\r\n}) {\r\n  const action = useContext(DirectConcernActions);\r\n  return (\r\n    <tr\r\n      title={\r\n        concern?.action\r\n          ? (concern?.statusId ?? 0) === PersonnelConcernStatus.Resolved\r\n            ? `Action Taken: ${concern.action}`\r\n            : `Reason: ${concern.action}`\r\n          : undefined\r\n      }>\r\n      <td>{dateToString(concern.receivedDate)}</td>\r\n      <td>{concern.concern.number}</td>\r\n      <td>\r\n        <div>{concern.concern.description}</div>\r\n        {concern.prevPersonnelConcernId && (\r\n          <div>\r\n            <span>Forward Reason: </span>\r\n            {concern.prevPersonnelConcern?.action}\r\n          </div>\r\n        )}\r\n      </td>\r\n      <td>{concern.concern.classification?.description}</td>\r\n      <td>{concern.concern.office?.description}</td>\r\n      <td>{concern.concern.caller}</td>\r\n      <td>\r\n        <div>{concern.status}</div>\r\n        <div>\r\n          {concern.closedDate && (\r\n            <span> ({dateToString(concern.closedDate)})</span>\r\n          )}\r\n        </div>\r\n      </td>\r\n      <td className='table-actions'>\r\n        {concern.statusId === PersonnelConcernStatus.Pending && (\r\n          <>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Resolve', payload: concern });\r\n              }}>\r\n              Resolve\r\n            </button>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Forward', payload: concern });\r\n              }}>\r\n              Forward\r\n            </button>\r\n          </>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { DirectConcernList } from '../../ticket-page';\r\nimport DirectConcernItem from './direct-concern-item';\r\n\r\nexport default function DirectConcernItems() {\r\n  const concerns = useContext(DirectConcernList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th style={{ width: '8%' }}>Received Date</th>\r\n          <th style={{ width: '10%' }}>Ticket Number</th>\r\n          <th>Description</th>\r\n          <th style={{ width: '10%' }}>Classification</th>\r\n          <th style={{ width: '20%' }}>Concern Office</th>\r\n          <th style={{ width: '15%' }}>Caller</th>\r\n          <th style={{ width: '8%' }}>Status</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {concerns.map((concern) => (\r\n          <DirectConcernItem key={concern.id} concern={concern} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n  useUserProfile,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { PersonnelConcern } from '../../entities/transaction/PersonnelConcern';\r\nimport { forwardPersonnelConcern } from '../../processors/personnel-concern-process';\r\nimport {\r\n  getAvailablePersonnelsByClassification,\r\n  getPersonnels,\r\n} from '../../processors/personnel-process';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport CustomTextArea from '../components/custom-textarea';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ForwardConcern({\r\n  onClose,\r\n  personnelConcern,\r\n}: {\r\n  onClose: (hasChanges: boolean, personnel: string) => void;\r\n  personnelConcern: PersonnelConcern | undefined;\r\n}) {\r\n  const [reason, setReason] = useState<string>('');\r\n  const [personnelItem, setPersonnelItem] = useState<DropdownItem[]>([]);\r\n  const [availabelPersonnelItem, setAvailabelPersonnelItem] = useState<\r\n    DropdownItem[]\r\n  >([]);\r\n  const [selectedPersonnel, setSelectedPersonnel] = useState<\r\n    number | undefined\r\n  >();\r\n  const [selectedAvailablePersonnel, setSelectedAvailablePersonnel] = useState<\r\n    number | undefined\r\n  >();\r\n  const [selectedPersonnelName, setSelectedPersonnelName] = useState<\r\n    string | undefined\r\n  >();\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const profile = useUserProfile();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchAvailablePersonnels();\r\n    await fetchPersonnels();\r\n  }\r\n  async function fetchPersonnels() {\r\n    setBusy(true);\r\n    await getPersonnels()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnelItem([\r\n            ...res\r\n              .filter((x) => x.id !== profile?.personnel?.id)\r\n              .map((x) => {\r\n                return {\r\n                  key: x.id.toString(),\r\n                  value: x.name,\r\n                };\r\n              }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchAvailablePersonnels() {\r\n    setBusy(true);\r\n    await getAvailablePersonnelsByClassification(\r\n      personnelConcern?.concern?.classificationId ?? 0\r\n    )\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setAvailabelPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res\r\n              .filter((x) => x.id !== profile?.personnel?.id)\r\n              .map((x) => {\r\n                return {\r\n                  key: x.id.toString(),\r\n                  value: x.name,\r\n                };\r\n              }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function onChange({ elementName, value, text }: CustomReturn) {\r\n    setSelectedPersonnelName(text);\r\n    if (elementName === 'personnel') {\r\n      setSelectedPersonnel(+value);\r\n      setSelectedAvailablePersonnel(undefined);\r\n      return;\r\n    }\r\n    if (elementName === 'available-personnel') {\r\n      setSelectedAvailablePersonnel(+value);\r\n      setSelectedPersonnel(undefined);\r\n      return;\r\n    }\r\n  }\r\n\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if ((selectedPersonnel ?? selectedAvailablePersonnel ?? 0) === 0) {\r\n      setMessage({ message: 'Select Personnel' });\r\n      return;\r\n    }\r\n    await forwardPersonnelConcern(\r\n      personnelConcern?.id ?? 0,\r\n      selectedPersonnel ?? selectedAvailablePersonnel ?? 0,\r\n      reason\r\n    )\r\n      .then((res) => {\r\n        if (res)\r\n          setMessage({\r\n            message: 'Success',\r\n            onOk: () => {\r\n              onClose(true, selectedPersonnelName ?? '');\r\n            },\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false, '');\r\n      }}\r\n      title='Forward Concern'>\r\n      <div className='concern-management-modal-body modal-content-body'>\r\n        <div>\r\n          <CustomTextArea\r\n            title='Reason'\r\n            lineCount={5}\r\n            onChange={(data) => {\r\n              setReason(data.value);\r\n            }}\r\n          />\r\n          <CustomDropdown\r\n            title='Available Personnel'\r\n            name='available-personnel'\r\n            hasDefault={true}\r\n            value={selectedAvailablePersonnel}\r\n            onChange={onChange}\r\n            itemsList={availabelPersonnelItem}\r\n          />\r\n          <CustomDropdown\r\n            title='All Personnel'\r\n            name='personnel'\r\n            hasDefault={true}\r\n            value={selectedPersonnel}\r\n            onChange={onChange}\r\n            itemsList={personnelItem}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          FORWARD\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { PersonnelConcern } from '../../entities/transaction/PersonnelConcern';\r\nimport { resolvePersonnelConcern } from '../../processors/personnel-concern-process';\r\nimport CustomTextArea from '../components/custom-textarea';\r\nimport Modal from './modal';\r\n\r\nexport default function ResolveConcern({\r\n  personnelConcern,\r\n  onClose,\r\n}: {\r\n  personnelConcern: PersonnelConcern | undefined;\r\n  onClose: (hasChange: boolean) => void;\r\n}) {\r\n  const [actionTaken, setActionTaken] = useState<string>('');\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  async function saveData() {\r\n    setBusy(true);\r\n    await resolvePersonnelConcern(personnelConcern?.id ?? 0, actionTaken)\r\n      .then((res) => {\r\n        if (res)\r\n          setMessage({\r\n            message: 'Success',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title='Resolve Concern'>\r\n      <div className='modal-content-body'>\r\n        <div>\r\n          <CustomTextArea\r\n            title='Action Taken'\r\n            lineCount={5}\r\n            onChange={(data) => {\r\n              setActionTaken(data.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          RESOLVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  HubConnectionState,\r\n} from '@microsoft/signalr';\r\nimport { createContext, useEffect, useState } from 'react';\r\nimport { API } from '../constant';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n  useUserProfile,\r\n} from '../custom-hooks/authorize-provider';\r\nimport { Hub } from '../endpoints';\r\nimport { PersonnelConcern } from '../entities/transaction/PersonnelConcern';\r\nimport { getDirectConcerns } from '../processors/personnel-concern-process';\r\nimport CustomCheckBox from './components/custom-check-box';\r\nimport Pagination from './components/pagination';\r\nimport DirectConcernItems from './components/tickets-components/direct-concern-items';\r\nimport ForwardConcern from './modals/forward-concern';\r\nimport ResolveConcern from './modals/resolve-concern';\r\n\r\nexport type CONCERNACTIONS =\r\n  | { action: 'Resolve'; payload: PersonnelConcern }\r\n  | { action: 'Forward'; payload: PersonnelConcern };\r\n\r\nexport const DirectConcernList = createContext<PersonnelConcern[]>([]);\r\nexport const DirectConcernActions = createContext<\r\n  (action: CONCERNACTIONS) => void\r\n>(() => {});\r\nexport default function TicketPage() {\r\n  const [directConcerns, setDirectConcerns] = useState<PersonnelConcern[]>([]);\r\n  const [selectedDirectConcern, setSelectedDirectConcern] = useState<\r\n    PersonnelConcern | undefined\r\n  >();\r\n  const [showResolveModal, setShowResolveModal] = useState(false);\r\n  const [showForwardModal, setShowForwardModal] = useState(false);\r\n  const [pending, setPending] = useState(true);\r\n  const [resolved, setResolved] = useState(false);\r\n  const [forwarded, setForwarded] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const profile = useUserProfile();\r\n  const setMessage = useSetMessage();\r\n  const setBusy = useSetBusy();\r\n  const [connection, setConnection] = useState<HubConnection>();\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!('Notification' in window)) {\r\n        console.log('This browser does not support desktop notification');\r\n      } else {\r\n        Notification.requestPermission();\r\n      }\r\n      connect();\r\n    },\r\n    //eslint-disable-next-line\r\n    []\r\n  );\r\n  async function connect() {\r\n    try {\r\n      if (connection === undefined) {\r\n        var conn = new HubConnectionBuilder()\r\n          .withUrl(API + Hub.Transaction)\r\n          .build();\r\n\r\n        conn.on('NewTicket', () => {\r\n          new Notification('New Ticket Assigned');\r\n          fetchDirectConcern({});\r\n        });\r\n\r\n        conn.on('ForwardTicket', (personnel) => {\r\n          new Notification(`New Ticket Forwarded by ${personnel}`);\r\n          fetchDirectConcern({});\r\n        });\r\n\r\n        await conn.start();\r\n        if (conn.state === HubConnectionState.Connected)\r\n          await conn.invoke('JoinTicket', profile?.personnel?.name);\r\n        setConnection(conn);\r\n      } else {\r\n        await reconnect();\r\n      }\r\n    } catch (ex) {\r\n      setMessage({ message: ex });\r\n    }\r\n  }\r\n  async function reconnect() {\r\n    if (connection?.state === HubConnectionState.Disconnected)\r\n      await connection?.start();\r\n  }\r\n  async function concernAction(action: CONCERNACTIONS) {\r\n    switch (action.action) {\r\n      case 'Resolve':\r\n        setSelectedDirectConcern(action.payload);\r\n        setShowResolveModal(true);\r\n        break;\r\n      case 'Forward':\r\n        setSelectedDirectConcern(action.payload);\r\n        setShowForwardModal(true);\r\n        break;\r\n      default:\r\n        setMessage({ message: 'Invalid Action' });\r\n        break;\r\n    }\r\n  }\r\n  useEffect(\r\n    () => {\r\n      fetchDirectConcern({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  async function fetchDirectConcern({\r\n    page,\r\n    isResolved,\r\n    isForwarded,\r\n    isPending,\r\n  }: {\r\n    page?: number | undefined;\r\n    isResolved?: boolean | undefined;\r\n    isForwarded?: boolean | undefined;\r\n    isPending?: boolean | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    await getDirectConcerns(\r\n      isResolved ?? resolved,\r\n      isForwarded ?? forwarded,\r\n      isPending ?? pending,\r\n      page ?? currentPage\r\n    )\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setDirectConcerns(res.results);\r\n          setPageCount(res.pageCount);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    setCurrentPage(page);\r\n    fetchDirectConcern({ page: page });\r\n  }\r\n\r\n  async function onCloseForward(hasChanges: boolean, personnel: string) {\r\n    setShowForwardModal(false);\r\n    if (hasChanges) {\r\n      fetchDirectConcern({});\r\n      await reconnect();\r\n      await connection?.invoke(\r\n        'ForwardTicket',\r\n        profile?.personnel?.name,\r\n        personnel\r\n      );\r\n    }\r\n  }\r\n  async function onCLoseResolve(hasChanges: boolean) {\r\n    setShowResolveModal(false);\r\n    if (hasChanges) {\r\n      await reconnect();\r\n      await connection?.invoke(\r\n        'Resolve',\r\n        selectedDirectConcern?.concern.number\r\n      );\r\n      fetchDirectConcern({});\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Tickets</div>\r\n        </div>\r\n      </section>\r\n      <section className='head-content'>\r\n        <div className='container'>\r\n          <CustomCheckBox\r\n            text='Pending'\r\n            id='pending'\r\n            checkChange={() => {\r\n              var x = !pending;\r\n              setPending(x);\r\n              fetchDirectConcern({ isPending: x });\r\n            }}\r\n            isCheck={pending}\r\n          />\r\n          <CustomCheckBox\r\n            text='Resolved'\r\n            id='resolved'\r\n            checkChange={() => {\r\n              var x = !resolved;\r\n              setResolved(x);\r\n              fetchDirectConcern({ isResolved: x });\r\n            }}\r\n            isCheck={resolved}\r\n          />\r\n          <CustomCheckBox\r\n            text='Forwarded'\r\n            id='forwarded'\r\n            checkChange={() => {\r\n              var x = !forwarded;\r\n              setForwarded(x);\r\n              fetchDirectConcern({ isForwarded: x });\r\n            }}\r\n            isCheck={forwarded}\r\n          />\r\n        </div>\r\n\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}></Pagination>\r\n      </section>\r\n      <section>\r\n        <DirectConcernList.Provider value={directConcerns}>\r\n          <DirectConcernActions.Provider value={concernAction}>\r\n            <DirectConcernItems />\r\n          </DirectConcernActions.Provider>\r\n        </DirectConcernList.Provider>\r\n      </section>\r\n      <>\r\n        {showResolveModal && (\r\n          <ResolveConcern\r\n            onClose={onCLoseResolve}\r\n            personnelConcern={selectedDirectConcern}\r\n          />\r\n        )}\r\n        {showForwardModal && (\r\n          <ForwardConcern\r\n            onClose={onCloseForward}\r\n            personnelConcern={selectedDirectConcern}\r\n          />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { Classification } from '../../../entities/transaction/Classification';\r\nimport { ClassificationActions } from '../../classification-page';\r\n\r\nexport default function ClassificationItem({\r\n  classification,\r\n}: {\r\n  classification: Classification;\r\n}) {\r\n  const action = useContext(ClassificationActions);\r\n  return (\r\n    <tr>\r\n      <td>{classification.description}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Edit', payload: classification })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() =>\r\n            action({ action: 'Delete', payload: classification.id })\r\n          }>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport {\r\n  ClassificationActions,\r\n  ClassificationList,\r\n} from '../../classification-page';\r\nimport ClassificationItem from './classification-item';\r\n\r\nexport default function ClassificationItems() {\r\n  const action = useContext(ClassificationActions);\r\n  const classifications = useContext(ClassificationList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Classification\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {classifications.map((classification) => (\r\n          <ClassificationItem\r\n            key={classification.id}\r\n            classification={classification}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Classification } from '../../entities/transaction/Classification';\r\nimport {\r\n  createClassification,\r\n  updateClassification,\r\n} from '../../processors/classification-process';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManageClassification({\r\n  selectedClassification,\r\n  onClose,\r\n}: {\r\n  selectedClassification: Classification | undefined;\r\n  onClose: (hasChanges: boolean) => void;\r\n}) {\r\n  const [classification, setClassification] = useState<Classification>(\r\n    () =>\r\n      selectedClassification ?? {\r\n        id: 0,\r\n        description: '',\r\n      }\r\n  );\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (classification.id === 0) {\r\n      await createClassification(classification)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Classification Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateClassification(classification)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Classification Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  function onChange(data: CustomReturn) {\r\n    setClassification((r) => {\r\n      return { ...r, [data.elementName]: data.value };\r\n    });\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title={\r\n        !!selectedClassification?.id\r\n          ? 'Update Classificaiton'\r\n          : 'Add New Classificaiton'\r\n      }>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <CustomTextBox\r\n          title='Description'\r\n          name='description'\r\n          value={classification.description}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Classification } from '../entities/transaction/Classification';\r\nimport { searchClassifications } from '../processors/classification-process';\r\nimport ClassificationItems from './components/classification-components/classification-items';\r\nimport Pagination from './components/pagination';\r\nimport SeachBar from './components/seachbar';\r\nimport ManageClassification from './modals/manage-classification';\r\n\r\ntype ACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'Edit'; payload: Classification }\r\n  | { action: 'Delete'; payload: number };\r\nexport const ClassificationList = createContext<Classification[]>([]);\r\nexport const ClassificationActions = createContext<(action: ACTIONS) => void>(\r\n  () => {}\r\n);\r\n\r\nexport default function ClassificationPage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [classifications, setClassifications] = useState<Classification[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedClassification, setSelectedClassification] = useState<\r\n    Classification | undefined\r\n  >();\r\n\r\n  useEffect(\r\n    () => {\r\n      searchClassification({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function classificationAction(action: ACTIONS) {\r\n    switch (action.action) {\r\n      case 'Add':\r\n        setShowModal(true);\r\n        setSelectedClassification(undefined);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedClassification(action.payload);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function searchClassification({\r\n    searchKey,\r\n    page,\r\n  }: {\r\n    searchKey?: string | undefined;\r\n    page?: number | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    searchClassifications(searchKey ?? key, page ?? currentPage)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setClassifications(res.results);\r\n          setPageCount(res.pageCount);\r\n          if (page !== undefined) setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchClassification({ page: page });\r\n  }\r\n\r\n  function search(key: string) {\r\n    setKey(key);\r\n    searchClassification({ searchKey: key, page: 1 });\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchClassification({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Classifications</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <Pagination\r\n        pages={pageCount}\r\n        currentPageNumber={currentPage}\r\n        goInPage={goToPage}></Pagination>\r\n      <section>\r\n        <ClassificationList.Provider value={classifications}>\r\n          <ClassificationActions.Provider value={classificationAction}>\r\n            <ClassificationItems />\r\n          </ClassificationActions.Provider>\r\n        </ClassificationList.Provider>\r\n      </section>\r\n      <>\r\n        {showModal && (\r\n          <ManageClassification\r\n            onClose={onClose}\r\n            selectedClassification={selectedClassification}\r\n          />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { Personnel } from '../../../entities/transaction/Personnel';\r\nimport { PersonnelActions } from '../../personnel-page';\r\n\r\nexport default function PersonnelItem({ personnel }: { personnel: Personnel }) {\r\n  const action = useContext(PersonnelActions);\r\n  return (\r\n    <tr>\r\n      <td>{personnel.name}</td>\r\n      <td>{personnel.office?.description}</td>\r\n      <td>{personnel.classification?.description}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Edit', payload: personnel })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Delete', payload: personnel.id })}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { PersonnelActions, PersonnelList } from '../../personnel-page';\r\nimport PersonnelItem from './personnel-item';\r\n\r\nexport default function PersonnelItems() {\r\n  const action = useContext(PersonnelActions);\r\n  const personnels = useContext(PersonnelList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Office</th>\r\n          <th>Classification</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Personnel\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {personnels.map((personnel) => (\r\n          <PersonnelItem key={personnel.id} personnel={personnel} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { OfficeEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { Office } from '../entities/transaction/Office';\r\nimport { httpGet, httpPost, httpPut } from './base';\r\n\r\nexport async function getOffices(): Promise<Office[] | undefined> {\r\n  return await httpGet<Office[]>(OfficeEnd.GetList);\r\n}\r\nexport async function searchOffices(\r\n  key: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<Office> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (key !== undefined) {\r\n    parameters += '&key=' + encodeURI(key);\r\n  }\r\n\r\n  return await httpGet<SearchResult<Office>>(OfficeEnd.Search + parameters);\r\n}\r\nexport async function createOffice(\r\n  office: Office\r\n): Promise<Office | undefined> {\r\n  return httpPost(OfficeEnd.Add, office);\r\n}\r\nexport async function updateOffice(office: Office): Promise<boolean> {\r\n  return httpPut(`${OfficeEnd.Update}/${office.id}`, office);\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Personnel } from '../../entities/transaction/Personnel';\r\nimport { getClassifications } from '../../processors/classification-process';\r\nimport { getOffices } from '../../processors/office-process';\r\nimport {\r\n  createPersonnel,\r\n  updatePersonnel,\r\n} from '../../processors/personnel-process';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManagePersonnel({\r\n  selectedPersonnel,\r\n  onClose,\r\n}: {\r\n  selectedPersonnel: Personnel | undefined;\r\n  onClose: (hasChanges: boolean) => void;\r\n}) {\r\n  const [personnel, setPersonnel] = useState<Personnel>(\r\n    () =>\r\n      selectedPersonnel ?? {\r\n        id: 0,\r\n        classificationId: undefined,\r\n        officeId: undefined,\r\n        name: '',\r\n      }\r\n  );\r\n  const [classificationItem, setClassificationItem] = useState<DropdownItem[]>(\r\n    []\r\n  );\r\n  const [officeItem, setOfficeItem] = useState<DropdownItem[]>([]);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    //eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  async function initializeComponents() {\r\n    await fetchClassifications();\r\n    await fetchOffices();\r\n  }\r\n  async function fetchClassifications() {\r\n    setBusy(true);\r\n    await getClassifications()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setClassificationItem(() =>\r\n            res.map((r) => {\r\n              return { key: r.id.toString(), value: r.description };\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchOffices() {\r\n    setBusy(true);\r\n    await getOffices()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setOfficeItem(() =>\r\n            res.map((r) => {\r\n              return { key: r.id.toString(), value: r.description };\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (personnel.id === 0) {\r\n      await createPersonnel(personnel)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Personnel Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updatePersonnel(personnel)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Personnel Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  function onChange({ value, elementName }: CustomReturn) {\r\n    setPersonnel((r) => {\r\n      return { ...r, [elementName]: value };\r\n    });\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title={\r\n        !!selectedPersonnel?.id ? 'Update Personnel' : 'Add New Personnel'\r\n      }>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <CustomTextBox\r\n          title='Name'\r\n          name='name'\r\n          value={personnel.name}\r\n          onChange={onChange}\r\n        />\r\n        <CustomDropdown\r\n          title='Classification'\r\n          name='classificationId'\r\n          hasDefault={true}\r\n          value={personnel?.classificationId}\r\n          onChange={onChange}\r\n          itemsList={classificationItem}\r\n        />\r\n        <CustomDropdown\r\n          title='Office'\r\n          name='officeId'\r\n          hasDefault={true}\r\n          value={personnel?.officeId}\r\n          onChange={onChange}\r\n          itemsList={officeItem}\r\n        />\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Personnel } from '../entities/transaction/Personnel';\r\nimport { searchPersonnels } from '../processors/personnel-process';\r\nimport Pagination from './components/pagination';\r\nimport PersonnelItems from './components/personnel-components/personnel-items';\r\nimport SeachBar from './components/seachbar';\r\nimport ManagePersonnel from './modals/manage-personnel';\r\n\r\ntype ACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'Edit'; payload: Personnel }\r\n  | { action: 'Delete'; payload: number };\r\nexport const PersonnelList = createContext<Personnel[]>([]);\r\nexport const PersonnelActions = createContext<(action: ACTIONS) => void>(\r\n  () => {}\r\n);\r\n\r\nexport default function OfficePage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [personnels, setPersonnels] = useState<Personnel[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedPersonnel, setSelectedPersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n\r\n  useEffect(\r\n    () => {\r\n      searchPersonnel({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function personnelAction(action: ACTIONS) {\r\n    switch (action.action) {\r\n      case 'Add':\r\n        setShowModal(true);\r\n        setSelectedPersonnel(undefined);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedPersonnel(action.payload);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function searchPersonnel({\r\n    searchKey,\r\n    page,\r\n  }: {\r\n    searchKey?: string | undefined;\r\n    page?: number | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    searchPersonnels(searchKey ?? key, page ?? currentPage)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnels(res.results);\r\n          setPageCount(res.pageCount);\r\n          if (page !== undefined) setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchPersonnel({ page: page });\r\n  }\r\n\r\n  function search(key: string) {\r\n    setKey(key);\r\n    searchPersonnel({ searchKey: key, page: 1 });\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchPersonnel({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Personnels</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <section>\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}></Pagination>\r\n      </section>\r\n      <section>\r\n        <PersonnelList.Provider value={personnels}>\r\n          <PersonnelActions.Provider value={personnelAction}>\r\n            <PersonnelItems />\r\n          </PersonnelActions.Provider>\r\n        </PersonnelList.Provider>\r\n      </section>\r\n      <>\r\n        {showModal && (\r\n          <ManagePersonnel\r\n            onClose={onClose}\r\n            selectedPersonnel={selectedPersonnel}\r\n          />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { Office } from '../../../entities/transaction/Office';\r\nimport { OfficeActions } from '../../office-page';\r\n\r\nexport default function OfficeItem({ office }: { office: Office }) {\r\n  const action = useContext(OfficeActions);\r\n  return (\r\n    <tr>\r\n      <td>{office.description}</td>\r\n      <td>{office.abbreviation}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Edit', payload: office })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Delete', payload: office.id })}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { OfficeActions, OfficeList } from '../../office-page';\r\nimport OfficeItem from './office-item';\r\n\r\nexport default function OfficeItems() {\r\n  const action = useContext(OfficeActions);\r\n  const offices = useContext(OfficeList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Description</th>\r\n          <th>Abbreviation</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Office\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {offices.map((office) => (\r\n          <OfficeItem key={office.id} office={office} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Office } from '../../entities/transaction/Office';\r\nimport { createOffice, updateOffice } from '../../processors/office-process';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManageOffice({\r\n  selectedOffice,\r\n  onClose,\r\n}: {\r\n  selectedOffice: Office | undefined;\r\n  onClose: (hasChanges: boolean) => void;\r\n}) {\r\n  const [office, setOffice] = useState<Office>(\r\n    () =>\r\n      selectedOffice ?? {\r\n        id: 0,\r\n        description: '',\r\n        abbreviation: '',\r\n      }\r\n  );\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (office.id === 0) {\r\n      await createOffice(office)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Office Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateOffice(office)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Office Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  function onChange(data: CustomReturn) {\r\n    setOffice((r) => {\r\n      return { ...r, [data.elementName]: data.value };\r\n    });\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title={!!selectedOffice?.id ? 'Update Office' : 'Add New Office'}>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <CustomTextBox\r\n          title='Description'\r\n          name='description'\r\n          value={office.description}\r\n          onChange={onChange}\r\n        />\r\n        <CustomTextBox\r\n          title='Abbreviation'\r\n          name='abbreviation'\r\n          value={office.abbreviation}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Office } from '../entities/transaction/Office';\r\nimport { searchOffices } from '../processors/office-process';\r\nimport OfficeItems from './components/office-components/office-items';\r\nimport Pagination from './components/pagination';\r\nimport SeachBar from './components/seachbar';\r\nimport ManageOffice from './modals/manage-office';\r\n\r\ntype ACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'Edit'; payload: Office }\r\n  | { action: 'Delete'; payload: number };\r\nexport const OfficeList = createContext<Office[]>([]);\r\nexport const OfficeActions = createContext<(action: ACTIONS) => void>(() => {});\r\n\r\nexport default function OfficePage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [offices, setOffices] = useState<Office[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedOffice, setSelectedOffice] = useState<Office | undefined>();\r\n\r\n  useEffect(\r\n    () => {\r\n      searchOffice({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function officeAction(action: ACTIONS) {\r\n    switch (action.action) {\r\n      case 'Add':\r\n        setShowModal(true);\r\n        setSelectedOffice(undefined);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedOffice(action.payload);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function searchOffice({\r\n    searchKey,\r\n    page,\r\n  }: {\r\n    searchKey?: string | undefined;\r\n    page?: number | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    searchOffices(searchKey ?? key, page ?? currentPage)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setOffices(res.results);\r\n          setPageCount(res.pageCount);\r\n          if (page !== undefined) setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchOffice({ page: page });\r\n  }\r\n\r\n  function search(key: string) {\r\n    setKey(key);\r\n    searchOffice({ searchKey: key, page: 1 });\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchOffice({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Offices</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <section>\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}></Pagination>\r\n      </section>\r\n      <section>\r\n        <OfficeList.Provider value={offices}>\r\n          <OfficeActions.Provider value={officeAction}>\r\n            <OfficeItems />\r\n          </OfficeActions.Provider>\r\n        </OfficeList.Provider>\r\n      </section>\r\n      <>\r\n        {showModal && (\r\n          <ManageOffice onClose={onClose} selectedOffice={selectedOffice} />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Dashboard() {\r\n  return <div></div>;\r\n}\r\n","import React from 'react';\r\nimport { PersonnelConcernStatus } from '../../../constant';\r\nimport { PersonnelConcern } from '../../../entities/transaction/PersonnelConcern';\r\nimport { dateToString } from '../../../helpers';\r\n\r\nexport default function ConcernDetail({\r\n  concern,\r\n}: {\r\n  concern: PersonnelConcern;\r\n}) {\r\n  return (\r\n    <div className='concern-action'>\r\n      <div>Received Date & Time</div>\r\n      <div>{concern.receivedDate && dateToString(concern.receivedDate)}</div>\r\n      <div>Concern</div>\r\n      <div>{concern.concern.description}</div>\r\n      {concern.prevPersonnelConcernId && (\r\n        <>\r\n          <div>Forwarded By</div>\r\n          <div>{concern.prevPersonnelConcern?.personnel?.name}</div>\r\n          <div>Forwarded Reason</div>\r\n          <div>{concern.prevPersonnelConcern?.action}</div>\r\n        </>\r\n      )}\r\n      <div>Status</div>\r\n      <div>\r\n        {concern.status}\r\n        {concern.closedDate && (\r\n          <span> ({dateToString(concern.closedDate)})</span>\r\n        )}\r\n      </div>\r\n      {concern.statusId !== PersonnelConcernStatus.Pending && (\r\n        <>\r\n          <div>\r\n            {concern.statusId === PersonnelConcernStatus.Forwarded\r\n              ? 'Reason'\r\n              : 'Action Taken'}\r\n            :\r\n          </div>\r\n          <div>{concern.action}</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { PersonnelConcern } from '../../entities/transaction/PersonnelConcern';\r\nimport { getDetailedSummary } from '../../processors/personnel-concern-process';\r\nimport ConcernDetail from '../components/concerns-components/concern-detail';\r\nimport Modal from './modal';\r\n\r\nexport default function DetailedSummary({\r\n  date,\r\n  onClose,\r\n}: {\r\n  date: Date | undefined;\r\n  onClose: () => void;\r\n}) {\r\n  const [personnelConcern, setPersonnelConcern] = useState<PersonnelConcern[]>(\r\n    []\r\n  );\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchDetailedSummary();\r\n  }\r\n  async function fetchDetailedSummary() {\r\n    setBusy(true);\r\n    await getDetailedSummary(\r\n      date?.getFullYear() ?? 0,\r\n      (date?.getMonth() ?? 0) + 1,\r\n      date?.getDate() ?? 0\r\n    )\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnelConcern(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  return (\r\n    <Modal title='Closed Concerns' className='concern-detail' onClose={onClose}>\r\n      <div className='modal-content-body'>\r\n        <div className='concern-actions'>\r\n          {personnelConcern.map((x) => (\r\n            <ConcernDetail key={x.id} concern={x} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { TicketSummary } from '../entities/transaction/PersonnelConcern';\r\nimport {\r\n  addDays,\r\n  addMonths,\r\n  getFirstDateOfMonth,\r\n  getLastDateOfMonth,\r\n  getMonthName,\r\n} from '../helpers';\r\nimport { getTicketSummary } from '../processors/personnel-concern-process';\r\nimport DetailedSummary from './modals/detailed-summary';\r\ninterface SummaryDate {\r\n  date: Date;\r\n  summary?: TicketSummary | undefined;\r\n}\r\nexport default function SummaryPage() {\r\n  const setMessage = useSetMessage();\r\n  const setBusy = useSetBusy();\r\n  const [currentDate, setCurrentDate] = useState<Date>(() => new Date());\r\n  const [dates, setDates] = useState<SummaryDate[]>(() => []);\r\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(undefined);\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    //eslint-disable-next-line\r\n    [currentDate]\r\n  );\r\n\r\n  async function initializeComponents() {\r\n    setBusy(true);\r\n    await getTicketSummary(\r\n      currentDate.getMonth() + 1,\r\n      currentDate.getFullYear()\r\n    )\r\n      .then((res) => {\r\n        const firstDate = getFirstDateOfMonth(currentDate);\r\n        const lastDate = getLastDateOfMonth(currentDate);\r\n        let firstDay = firstDate.getDay();\r\n\r\n        let date = firstDate;\r\n        const last =\r\n          (lastDate.getDate() ?? 0) + firstDay + (6 - lastDate.getDay());\r\n        var _dates: SummaryDate[] = [];\r\n        if (firstDay > 0) {\r\n          date = addDays(firstDate, -firstDay);\r\n        }\r\n        for (let i = 0; i < last; i++) {\r\n          var sum = res?.filter(\r\n            // eslint-disable-next-line\r\n            (x) => new Date(x.date).toDateString() === date.toDateString()\r\n          )?.[0];\r\n          _dates = [..._dates, { date: date, summary: sum }];\r\n          date = addDays(date, 1);\r\n        }\r\n        setDates(() => _dates);\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Ticket Summary</div>\r\n          <div className='date-action'>\r\n            <FontAwesomeIcon\r\n              icon={faAngleLeft as IconProp}\r\n              onClick={() => setCurrentDate(() => addMonths(currentDate, -1))}\r\n            />\r\n            <div className='month-year'>\r\n              <div>{getMonthName(currentDate)}</div>\r\n              <div>{currentDate.getFullYear()}</div>\r\n            </div>\r\n            <FontAwesomeIcon\r\n              icon={faAngleRight as IconProp}\r\n              onClick={() => setCurrentDate(() => addMonths(currentDate, 1))}\r\n              className={\r\n                currentDate.getMonth() === new Date().getMonth() &&\r\n                currentDate.getFullYear() === new Date().getFullYear()\r\n                  ? 'stop'\r\n                  : ''\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <div className='calendar'>\r\n          <div className='day-header'>Su</div>\r\n          <div className='day-header'>Mo</div>\r\n          <div className='day-header'>Tu</div>\r\n          <div className='day-header'>We</div>\r\n          <div className='day-header'>Th</div>\r\n          <div className='day-header'>Fr</div>\r\n          <div className='day-header'>Sa</div>\r\n          {dates.map((x, i) => (\r\n            <div\r\n              className={`date ${\r\n                x.date.getMonth() === currentDate.getMonth()\r\n                  ? 'current-month'\r\n                  : 'non'\r\n              } ${\r\n                x.date.toDateString() === new Date().toDateString()\r\n                  ? 'current'\r\n                  : ''\r\n              } ${\r\n                !!x.summary?.noOfResolved || !!x.summary?.noOfForwarded\r\n                  ? 'has-data'\r\n                  : ''\r\n              }`}\r\n              key={i}\r\n              onClick={() => {\r\n                if (!!x.summary?.noOfResolved || !!x.summary?.noOfForwarded) {\r\n                  setSelectedDate(x.date);\r\n                  setShowModal(true);\r\n                  return;\r\n                }\r\n                if (\r\n                  x.date.getMonth() < currentDate.getMonth() ||\r\n                  x.date.getFullYear() < currentDate.getFullYear()\r\n                ) {\r\n                  setCurrentDate(x.date);\r\n                  return;\r\n                }\r\n                if (\r\n                  currentDate.getMonth() !== new Date().getMonth() &&\r\n                  currentDate.getFullYear() === new Date().getFullYear()\r\n                ) {\r\n                  if (\r\n                    x.date.getMonth() > currentDate.getMonth() ||\r\n                    x.date.getFullYear() > currentDate.getFullYear()\r\n                  ) {\r\n                    setCurrentDate(x.date);\r\n                  }\r\n                  return;\r\n                }\r\n              }}>\r\n              <div className='day'>{x.date.getDate()}</div>\r\n              <div className='remarks'>\r\n                {!!x.summary?.noOfResolved && (\r\n                  <div>RESOLVED: {x.summary?.noOfResolved}</div>\r\n                )}\r\n                {!!x.summary?.noOfForwarded && (\r\n                  <div>FORWARDED: {x.summary?.noOfForwarded}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n      <>\r\n        {showModal && (\r\n          <DetailedSummary\r\n            date={selectedDate}\r\n            onClose={() => {\r\n              setShowModal(false);\r\n              setSelectedDate(undefined);\r\n            }}\r\n          />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { ConcernStatus } from '../../../constant';\r\nimport { Concern } from '../../../entities/transaction/Concern';\r\nimport { dateToString } from '../../../helpers';\r\nimport { ConcernMonitoringActions } from '../../concern-monitoring-page';\r\n\r\nexport default function ConcernMonitoringItem({\r\n  concern,\r\n}: {\r\n  concern: Concern;\r\n}) {\r\n  const action = useContext(ConcernMonitoringActions);\r\n  return (\r\n    <tr>\r\n      <td>{concern.entryDate && dateToString(concern.entryDate)}</td>\r\n      <td>{concern.number}</td>\r\n      <td>{concern.description}</td>\r\n      <td>{concern.classification?.description}</td>\r\n      <td>{concern.office?.description}</td>\r\n      <td>{concern.caller}</td>\r\n      <td>\r\n        <div>{concern.status}</div>\r\n        <div>{concern.closedDate && dateToString(concern.closedDate)}</div>\r\n      </td>\r\n      <td className='table-actions'>\r\n        {concern.statusId !== ConcernStatus.Open && (\r\n          <button\r\n            className='btn'\r\n            onClick={() => action({ action: 'ViewAction', payload: concern })}>\r\n            View Actions\r\n          </button>\r\n        )}\r\n        {concern.statusId === ConcernStatus.Open && (\r\n          <>\r\n            <button\r\n              className='btn'\r\n              onClick={() => action({ action: 'Assign', payload: concern })}>\r\n              Assign To Concerned Personnel\r\n            </button>\r\n\r\n            <button\r\n              className='btn'\r\n              onClick={() => action({ action: 'Edit', payload: concern })}>\r\n              Edit\r\n            </button>\r\n            <button\r\n              className='btn'\r\n              onClick={() => action({ action: 'Delete', payload: concern.id })}>\r\n              Delete\r\n            </button>\r\n          </>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport {\r\n  ConcernMonitoringActions,\r\n  ConcernMonitoringList,\r\n} from '../../concern-monitoring-page';\r\nimport ConcernItem from './concern-monitoring-item';\r\n\r\nexport default function ConcernMonitoringItems() {\r\n  const action = useContext(ConcernMonitoringActions);\r\n  const concerns = useContext(ConcernMonitoringList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th style={{ width: '8%' }}>Time Entry</th>\r\n          <th style={{ width: '10%' }}>Ticket Number</th>\r\n          <th>Description</th>\r\n          <th style={{ width: '10%' }}>Classification</th>\r\n          <th style={{ width: '20%' }}>Concern Office</th>\r\n          <th style={{ width: '15%' }}>Caller</th>\r\n          <th style={{ width: '8%' }}>Status</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Concern\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {concerns.map((concern) => (\r\n          <ConcernItem key={concern.id} concern={concern} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Concern } from '../../entities/transaction/Concern';\r\nimport { getClassifications } from '../../processors/classification-process';\r\nimport { createConcern, updateConcern } from '../../processors/concern-process';\r\nimport { getOffices } from '../../processors/office-process';\r\nimport {\r\n  getAvailablePersonnelsByClassification,\r\n  getPersonnels,\r\n} from '../../processors/personnel-process';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport CustomTextArea from '../components/custom-textarea';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManageConcernMonitoring({\r\n  selectedConcern,\r\n  onClose,\r\n}: {\r\n  selectedConcern: Concern | undefined;\r\n  onClose: (hasChange: boolean, personnel: string) => void;\r\n}) {\r\n  const [concern, setConcern] = useState<Concern>(\r\n    () =>\r\n      selectedConcern ?? {\r\n        id: 0,\r\n        caller: '',\r\n        description: '',\r\n        classificationId: undefined,\r\n        officeId: undefined,\r\n      }\r\n  );\r\n  const [classificationItem, setClassificationItem] = useState<DropdownItem[]>(\r\n    () => []\r\n  );\r\n  const [officeItem, setOfficeItem] = useState<DropdownItem[]>(() => []);\r\n  const [personnelItem, setPersonnelItem] = useState<DropdownItem[]>([]);\r\n  const [availabelPersonnelItem, setAvailabelPersonnelItem] = useState<\r\n    DropdownItem[]\r\n  >([]);\r\n  const [selectedPersonnel, setSelectedPersonnel] = useState<\r\n    number | undefined\r\n  >();\r\n  const [selectedAvailablePersonnel, setSelectedAvailablePersonnel] = useState<\r\n    number | undefined\r\n  >();\r\n  const [selectedPersonnelName, setSelectedPersonnelName] = useState<\r\n    string | undefined\r\n  >();\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchClassifications();\r\n    await fetchOffices();\r\n    await fetchAvailablePersonnels();\r\n    await fetchPersonnels();\r\n  }\r\n  async function fetchPersonnels() {\r\n    setBusy(true);\r\n    await getPersonnels()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnelItem(() =>\r\n            res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.name,\r\n              };\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchAvailablePersonnels(\r\n    classificationId?: number | undefined\r\n  ) {\r\n    console.log(classificationId);\r\n    setBusy(true);\r\n    await getAvailablePersonnelsByClassification(\r\n      classificationId ?? concern?.classificationId ?? 0\r\n    )\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setSelectedAvailablePersonnel(undefined);\r\n          setAvailabelPersonnelItem(() =>\r\n            res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.name,\r\n              };\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchClassifications() {\r\n    setBusy(true);\r\n    await getClassifications()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setClassificationItem(() =>\r\n            res.map((r) => {\r\n              return { key: r.id.toString(), value: r.description };\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchOffices() {\r\n    setBusy(true);\r\n    await getOffices()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setOfficeItem(() =>\r\n            res.map((r) => {\r\n              return { key: r.id.toString(), value: r.description };\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (concern.id === 0) {\r\n      await createConcern(\r\n        concern,\r\n        selectedPersonnel ?? selectedAvailablePersonnel\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'New Concern Added',\r\n            onOk: () => {\r\n              onClose(true, selectedPersonnelName ?? '');\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateConcern(concern)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Concern Updated',\r\n            onOk: () => {\r\n              onClose(true, selectedPersonnelName ?? '');\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n\r\n  async function onChange({ elementName, value, text }: CustomReturn) {\r\n    if (elementName === 'personnel') {\r\n      setSelectedPersonnel(+value);\r\n      setSelectedAvailablePersonnel(undefined);\r\n      setSelectedPersonnelName(text);\r\n      return;\r\n    }\r\n    if (elementName === 'available-personnel') {\r\n      setSelectedAvailablePersonnel(+value);\r\n      setSelectedPersonnel(undefined);\r\n      setSelectedPersonnelName(text);\r\n      return;\r\n    }\r\n    if (elementName === 'classificationId') {\r\n      if (value === undefined) {\r\n        setAvailabelPersonnelItem(() => []);\r\n      }\r\n      await fetchAvailablePersonnels(+value);\r\n    }\r\n    setConcern((prevConcern) => {\r\n      return { ...prevConcern, [elementName]: value };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => onClose(false, '')}\r\n      title={\r\n        (concern?.id ?? 0) > 0\r\n          ? `Update Concern ${concern.number}`\r\n          : 'New Concern'\r\n      }\r\n      className='management-modal'>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <div>\r\n          <div>\r\n            <CustomDropdown\r\n              title='Office'\r\n              name='officeId'\r\n              hasDefault={true}\r\n              value={concern?.officeId}\r\n              onChange={onChange}\r\n              itemsList={officeItem}\r\n            />\r\n          </div>\r\n          <div>\r\n            <CustomDropdown\r\n              title='Classification'\r\n              name='classificationId'\r\n              hasDefault={true}\r\n              value={concern?.classificationId}\r\n              onChange={onChange}\r\n              itemsList={classificationItem}\r\n            />\r\n          </div>\r\n          <div>\r\n            <CustomTextBox\r\n              title='Caller'\r\n              name='caller'\r\n              value={concern?.caller}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <CustomTextArea\r\n            title='Description'\r\n            name='description'\r\n            lineCount={7}\r\n            value={concern?.description}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        {!concern.id && (\r\n          <div>\r\n            <div>\r\n              <CustomDropdown\r\n                title='Available Personnel'\r\n                name='available-personnel'\r\n                hasDefault={true}\r\n                value={selectedAvailablePersonnel}\r\n                onChange={onChange}\r\n                itemsList={availabelPersonnelItem}\r\n              />\r\n              <CustomDropdown\r\n                title='All Personnel'\r\n                name='personnel'\r\n                hasDefault={true}\r\n                value={selectedPersonnel}\r\n                onChange={onChange}\r\n                itemsList={personnelItem}\r\n              />\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  HubConnectionState,\r\n  LogLevel,\r\n} from '@microsoft/signalr';\r\nimport { createContext, useEffect, useRef, useState } from 'react';\r\nimport { API } from '../constant';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Hub } from '../endpoints';\r\nimport { Concern } from '../entities/transaction/Concern';\r\nimport { getClassifications } from '../processors/classification-process';\r\nimport { deleteConcern, searchConcerns } from '../processors/concern-process';\r\nimport { getOffices } from '../processors/office-process';\r\nimport ConcernMonitoringItems from './components/concerns-monitoring-components/concern-monitoring-items';\r\nimport CustomCheckBox from './components/custom-check-box';\r\nimport CustomDatePicker from './components/custom-datepicker';\r\nimport CustomDropdown, { DropdownItem } from './components/custom-dropdown';\r\nimport { CustomReturn } from './components/CustomReturn';\r\nimport Pagination from './components/pagination';\r\nimport SeachBar from './components/seachbar';\r\nimport AssignConcern from './modals/assign-concern';\r\nimport ConcernActionsViewer from './modals/concern-actions-viewer';\r\nimport ManageConcernMonitoring from './modals/manage-concern-monitoring';\r\ninterface Filtering {\r\n  classification?: number | undefined;\r\n  office?: number | undefined;\r\n  startDate?: Date | undefined;\r\n  endDate?: Date | undefined;\r\n}\r\nexport type CONCERNMONITORINGACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'Assign'; payload: Concern }\r\n  | { action: 'ViewAction'; payload: Concern }\r\n  | { action: 'Edit'; payload: Concern }\r\n  | { action: 'Delete'; payload: number };\r\n\r\nexport const ConcernMonitoringList = createContext<Concern[]>([]);\r\nexport const ConcernMonitoringActions = createContext<\r\n  (action: CONCERNMONITORINGACTIONS) => void\r\n>(() => {});\r\nexport default function ConcernMonitoringPage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [concerns, setConcerns] = useState<Concern[]>(() => []);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showAssignmentModal, setShowAssignmentModal] = useState(false);\r\n  const [showActionsModal, setShowActionsModal] = useState(false);\r\n  const [selectedConcern, setSelectedConcern] = useState<Concern | undefined>();\r\n  const assigned = useRef(true);\r\n  const closed = useRef(false);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [connection, setConnection] = useState<HubConnection>();\r\n  const [classificationItem, setClassificationItem] = useState<DropdownItem[]>(\r\n    () => []\r\n  );\r\n  const [officeItem, setOfficeItem] = useState<DropdownItem[]>(() => []);\r\n  const [filtering, setFiltering] = useState<Filtering>(() => {\r\n    return {\r\n      classification: undefined,\r\n      office: undefined,\r\n      startDate: undefined,\r\n      endDate: undefined,\r\n    };\r\n  });\r\n  async function onClose(hasChanges: boolean, personnel: string | undefined) {\r\n    setShowModal(false);\r\n    setShowAssignmentModal(false);\r\n    if (hasChanges) {\r\n      console.log(connection?.state);\r\n      await reconnect();\r\n      await connection?.invoke('NewConcern');\r\n      if ((personnel ?? '') !== '')\r\n        await connection?.invoke('NewTicket', personnel);\r\n      searchConcern();\r\n    }\r\n  }\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  async function initializeComponents() {\r\n    if (!('Notification' in window)) {\r\n      console.log('This browser does not support desktop notification');\r\n    } else {\r\n      Notification.requestPermission();\r\n    }\r\n    await fetchClassifications();\r\n    await fetchOffices();\r\n    await connect();\r\n    await searchConcern();\r\n  }\r\n\r\n  async function connect() {\r\n    try {\r\n      if (connection === undefined) {\r\n        var conn = new HubConnectionBuilder()\r\n          .withUrl(API + Hub.Transaction)\r\n          .configureLogging(LogLevel.Information)\r\n          .build();\r\n\r\n        conn.on('NewConcern', () => {\r\n          new Notification('New Concern Added');\r\n          searchConcern();\r\n        });\r\n        conn.on('ResolveConcern', (ticketnumber) => {\r\n          new Notification(`Ticket ${ticketnumber} Resolved`);\r\n          searchConcern();\r\n        });\r\n        await conn.start();\r\n        if (conn.state === HubConnectionState.Connected) {\r\n          await conn.invoke('JoinConcernCreators');\r\n          console.log(conn.state);\r\n        }\r\n        setConnection(conn);\r\n      } else {\r\n        await reconnect();\r\n      }\r\n    } catch (ex) {\r\n      setMessage({ message: ex });\r\n    }\r\n  }\r\n\r\n  async function reconnect() {\r\n    if (connection?.state === HubConnectionState.Disconnected)\r\n      await connection?.start();\r\n  }\r\n  async function searchConcern() {\r\n    setBusy(true);\r\n    searchConcerns(\r\n      key,\r\n      currentPage,\r\n      assigned.current,\r\n      closed.current,\r\n      filtering.startDate,\r\n      filtering.endDate,\r\n      filtering.office,\r\n      filtering.classification\r\n    )\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setConcerns(res.results);\r\n          setPageCount(res.pageCount);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function search(key: string) {\r\n    setKey(() => key);\r\n    setCurrentPage(() => 1);\r\n    searchConcern();\r\n  }\r\n  function goToPage(page: number) {\r\n    setCurrentPage(() => page);\r\n    searchConcern();\r\n  }\r\n  function concernAction(action: CONCERNMONITORINGACTIONS) {\r\n    switch (action.action) {\r\n      case 'Add':\r\n        setSelectedConcern(() => undefined);\r\n        setShowModal(() => true);\r\n        break;\r\n      case 'ViewAction':\r\n        setSelectedConcern(action.payload);\r\n        setShowActionsModal(true);\r\n        break;\r\n      case 'Assign':\r\n        setSelectedConcern(action.payload);\r\n        setShowAssignmentModal(true);\r\n        break;\r\n      case 'Edit':\r\n        setSelectedConcern(action.payload);\r\n        setShowModal(true);\r\n        break;\r\n      case 'Delete':\r\n        setMessage({\r\n          message: 'Are you sure you want to delete this?',\r\n          action: 'YESNO',\r\n          onOk: () => {\r\n            deleteSelectedConcern(action.payload);\r\n          },\r\n        });\r\n        break;\r\n      default:\r\n        setMessage({ message: 'Invalid Action' });\r\n        break;\r\n    }\r\n  }\r\n\r\n  async function deleteSelectedConcern(id: number) {\r\n    setBusy(true);\r\n    await deleteConcern(id)\r\n      .then(() => {\r\n        setMessage({\r\n          message: 'User Deleted',\r\n          onOk: () => {\r\n            searchConcern();\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchClassifications() {\r\n    setBusy(true);\r\n    await getClassifications()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setClassificationItem(() => [\r\n            { key: '', value: '' },\r\n            ...res.map((r) => {\r\n              return { key: r.id.toString(), value: r.description };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchOffices() {\r\n    setBusy(true);\r\n    await getOffices()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setOfficeItem(() => [\r\n            { key: '', value: '' },\r\n            ...res.map((r) => {\r\n              return { key: r.id.toString(), value: r.description };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  async function onChange({ elementName, value }: CustomReturn) {\r\n    setFiltering((r) => {\r\n      return { ...r, [elementName]: value };\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className='header'>\r\n          <div className='header-text'>Concerns Monitoring</div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <SeachBar search={search} />\r\n      </section>\r\n      <section>\r\n        <div className='filter-container'>\r\n          <CustomDatePicker\r\n            title='Start Date'\r\n            name='startDate'\r\n            value={filtering.startDate}\r\n            onChange={onChange}\r\n          />\r\n          <CustomDatePicker\r\n            title='End Date'\r\n            name='endDate'\r\n            value={filtering.endDate}\r\n            onChange={onChange}\r\n          />\r\n          <CustomDropdown\r\n            title='Office'\r\n            name='office'\r\n            value={filtering.office}\r\n            onChange={onChange}\r\n            itemsList={officeItem}\r\n          />\r\n          <CustomDropdown\r\n            title='Classification'\r\n            name='classification'\r\n            value={filtering.classification}\r\n            onChange={onChange}\r\n            itemsList={classificationItem}\r\n          />\r\n        </div>\r\n      </section>\r\n      <section className='head-content'>\r\n        <div className='container'>\r\n          <CustomCheckBox\r\n            text='Assigned'\r\n            id='assigned'\r\n            checkChange={() => {\r\n              assigned.current = !assigned.current;\r\n              searchConcern();\r\n            }}\r\n            isCheck={assigned.current}\r\n          />\r\n          <CustomCheckBox\r\n            text='Closed'\r\n            id='closed'\r\n            checkChange={() => {\r\n              closed.current = !closed.current;\r\n              searchConcern();\r\n            }}\r\n            isCheck={closed.current}\r\n          />\r\n        </div>\r\n        <Pagination\r\n          pages={pageCount}\r\n          currentPageNumber={currentPage}\r\n          goInPage={goToPage}></Pagination>\r\n      </section>\r\n      <section>\r\n        <ConcernMonitoringList.Provider value={concerns}>\r\n          <ConcernMonitoringActions.Provider value={concernAction}>\r\n            <ConcernMonitoringItems />\r\n          </ConcernMonitoringActions.Provider>\r\n        </ConcernMonitoringList.Provider>\r\n      </section>\r\n      <>\r\n        {showModal && (\r\n          <ManageConcernMonitoring\r\n            onClose={onClose}\r\n            selectedConcern={selectedConcern}\r\n          />\r\n        )}\r\n        {showAssignmentModal && (\r\n          <AssignConcern onClose={onClose} concern={selectedConcern} />\r\n        )}\r\n        {showActionsModal && (\r\n          <ConcernActionsViewer\r\n            concern={selectedConcern}\r\n            onClose={() => setShowActionsModal(false)}\r\n          />\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n","import { BrowserRouter, NavLink, Route, Switch } from 'react-router-dom';\r\nimport {\r\n  useAuthorize,\r\n  useSetMessage,\r\n  useUpdateAuthorize,\r\n  useUserProfile,\r\n} from '../custom-hooks/authorize-provider';\r\nimport LoginPage from './login-page';\r\nimport UserPage from './user-page';\r\n\r\nimport { useMemo, useState } from 'react';\r\nimport { ICON } from '../constant';\r\nimport { Routes } from '../routes';\r\nimport ConcernPage from './concern-page';\r\nimport ManageProfile from './modals/manage-profile';\r\nimport RolePage from './role-page';\r\nimport TicketPage from './ticket-page';\r\nimport ClassificationPage from './classification-page';\r\nimport PersonnelPage from './personnel-page';\r\nimport OfficePage from './office-page';\r\nimport Dashboard from './dashboard';\r\nimport SummaryPage from './summary-page';\r\nimport ConcernMonitoringPage from './concern-monitoring-page';\r\n\r\nexport default function HomePage() {\r\n  const [showProfile, setShowProfile] = useState(false);\r\n  const authorize = useAuthorize();\r\n  const profile = useUserProfile();\r\n  const updateAuthorize = useUpdateAuthorize();\r\n  const setMessage = useSetMessage();\r\n  const menus: {\r\n    head: string;\r\n    navs: { route: string | undefined; name: string | undefined }[];\r\n  }[] = useMemo(\r\n    () => [\r\n      ...(profile?.admin\r\n        ? [\r\n            {\r\n              head: 'Transactions',\r\n              navs: [\r\n                {\r\n                  route: Routes.ConcernMonitoring,\r\n                  name: 'Concerns Monitoring',\r\n                },\r\n                {\r\n                  route: Routes.Concern,\r\n                  name: 'Concerns',\r\n                },\r\n                {\r\n                  route: Routes.Ticket,\r\n                  name: 'Tickets',\r\n                },\r\n                {\r\n                  route: Routes.Summary,\r\n                  name: 'Summary',\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              head: 'Maintenances',\r\n              navs: [\r\n                {\r\n                  route: Routes.User,\r\n                  name: 'Users',\r\n                },\r\n                {\r\n                  route: Routes.Personnel,\r\n                  name: 'Personnels',\r\n                },\r\n                {\r\n                  route: Routes.Role,\r\n                  name: 'Roles',\r\n                },\r\n                {\r\n                  route: Routes.Classification,\r\n                  name: 'Classifications',\r\n                },\r\n                {\r\n                  route: Routes.Office,\r\n                  name: 'Offices',\r\n                },\r\n              ],\r\n            },\r\n          ]\r\n        : [\r\n            {\r\n              head: 'Transactions',\r\n              navs: [\r\n                ...(profile?.distinctModules\r\n                  ?.filter((x) => x.header === 'Transaction')\r\n                  .map((x) => {\r\n                    return { route: x.route, name: x.description };\r\n                  }) ?? []),\r\n              ],\r\n            },\r\n            {\r\n              head: 'Maintenances',\r\n              navs: [\r\n                ...(profile?.distinctModules\r\n                  ?.filter((x) => x.header === 'Maintenance')\r\n                  .map((x) => {\r\n                    return { route: x.route, name: x.description };\r\n                  }) ?? []),\r\n              ],\r\n            },\r\n          ]),\r\n    ],\r\n    [profile?.distinctModules, profile?.admin]\r\n  );\r\n\r\n  function logoutUser() {\r\n    setMessage({\r\n      message: 'Continue to logout?',\r\n      action: 'YESNO',\r\n      onOk: () => {\r\n        updateAuthorize(false);\r\n        setShowProfile(false);\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {authorize ? (\r\n        <BrowserRouter>\r\n          <header>\r\n            <nav>\r\n              <div className='menu-container'>\r\n                <NavLink to={Routes.Home} exact className='nav-icon'>\r\n                  {ICON}\r\n                </NavLink>\r\n                {(profile?.distinctModules?.length ?? 0) <= 3 &&\r\n                (profile?.distinctModules?.length ?? 0) > 0 ? (\r\n                  <>\r\n                    {profile?.distinctModules?.map((x) => (\r\n                      <NavLink\r\n                        to={x.route ?? ''}\r\n                        exact\r\n                        className='nav-menu'\r\n                        key={x.accessId}>\r\n                        {x.description}\r\n                      </NavLink>\r\n                    ))}\r\n                  </>\r\n                ) : (\r\n                  <div className='nav-menu-container'>\r\n                    <button className='nav-menu'>Menus</button>\r\n                    <div className='menus'>\r\n                      {menus\r\n                        .filter((x) => x.navs.length > 0)\r\n                        .map((menu) => (\r\n                          <div className='menu-items' key={menu.head}>\r\n                            <div className='head'>{menu.head}</div>\r\n                            <div className='navs'>\r\n                              {menu.navs.map((nav) => (\r\n                                <div key={nav.route}>\r\n                                  <NavLink\r\n                                    to={nav.route ?? ''}\r\n                                    exact\r\n                                    className='nav-menu'>\r\n                                    {nav.name}\r\n                                  </NavLink>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className='menu-container'>\r\n                <label\r\n                  className='user-name nav-menu'\r\n                  onClick={() => setShowProfile(true)}>\r\n                  <span className='title-name'>{profile?.personnel?.name}</span>\r\n                  <span className='sub-name'>\r\n                    <span>\r\n                      {profile?.personnel?.office?.abbreviation ??\r\n                        profile?.personnel?.office?.description}\r\n                    </span>\r\n                    <span className='classification-text'>\r\n                      {profile?.personnel?.classification &&\r\n                        `(${profile?.personnel?.classification?.description})`}\r\n                    </span>\r\n                  </span>\r\n                </label>\r\n                <label onClick={logoutUser} className='nav-menu'>\r\n                  Logout\r\n                </label>\r\n              </div>\r\n            </nav>\r\n          </header>\r\n          <Switch>\r\n            <Route path={Routes.Home} exact component={Dashboard} />\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.User\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.User} exact component={UserPage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Role\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Role} exact component={RolePage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Concern\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Concern} exact component={ConcernPage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.ConcernMonitoring\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route\r\n                path={Routes.ConcernMonitoring}\r\n                exact\r\n                component={ConcernMonitoringPage}\r\n              />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Ticket\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Ticket} exact component={TicketPage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Classification\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route\r\n                path={Routes.Classification}\r\n                exact\r\n                component={ClassificationPage}\r\n              />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Personnel\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Personnel} exact component={PersonnelPage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Office\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Office} exact component={OfficePage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Summary\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Summary} exact component={SummaryPage} />\r\n            )}\r\n          </Switch>\r\n          <div>\r\n            {showProfile && (\r\n              <ManageProfile onClose={() => setShowProfile(false)} />\r\n            )}\r\n          </div>\r\n        </BrowserRouter>\r\n      ) : (\r\n        <LoginPage />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { AuthorizeProvider } from './custom-hooks/authorize-provider';\nimport Dashboard from './pages/home-page';\nimport './styles/style.css';\nfunction App() {\n  return (\n    <AuthorizeProvider>\n      <Dashboard />\n    </AuthorizeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
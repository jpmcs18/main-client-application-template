{"version":3,"sources":["pages/modals/modal.tsx","pages/modals/message-dialog.tsx","custom-hooks/authorize-provider.tsx","constant.ts","processors/session-manager.tsx","endpoints.ts","processors/base.ts","processors/security-process.ts","processors/user-process.ts","pages/components/custom-textbox.tsx","pages/login-page.tsx","pages/components/pagination.tsx","pages/components/seachbar.tsx","pages/components/users-components/user-item.tsx","processors/personnel-process.ts","processors/role-process.ts","pages/components/custom-check-box-button.tsx","pages/components/custom-dropdown.tsx","processors/module-process.ts","pages/components/custom-check-box.tsx","pages/components/role-components/module-item-selection.tsx","pages/components/role-components/module-selection.tsx","pages/modals/manage-role.tsx","pages/modals/manage-user.tsx","pages/user-page.tsx","routes.ts","processors/concern-process.ts","pages/components/concerns-components/concern-item.tsx","pages/components/concerns-components/concern-items.tsx","pages/modals/assign-concern.tsx","processors/personnel-concern-process.tsx","pages/components/concerns-components/concern-action.tsx","pages/modals/concern-actions-viewer.tsx","processors/classification-process.ts","processors/office-process.ts","pages/components/custom-textarea.tsx","pages/modals/manage-concern.tsx","pages/concern-page.tsx","pages/modals/manage-profile.tsx","pages/components/role-components/role-item.tsx","pages/components/role-components/role-items.tsx","pages/role-page.tsx","pages/components/tickets-components/direct-concern-item.tsx","pages/components/tickets-components/direct-concern-items.tsx","pages/modals/forward-concern.tsx","pages/modals/resolve-concern.tsx","pages/ticket-page.tsx","pages/components/classification-components/classification-item.tsx","pages/components/classification-components/classification-items.tsx","pages/modals/manage-classification.tsx","pages/classification-page.tsx","pages/components/personnel-components/personnel-item.tsx","pages/components/personnel-components/personnel-items.tsx","pages/modals/manage-personnel.tsx","pages/personnel-page.tsx","pages/components/office-components/office-item.tsx","pages/components/office-components/office-items.tsx","pages/modals/manage-office.tsx","pages/office-page.tsx","pages/home-page.tsx","App.tsx","index.tsx"],"names":["Modal","title","className","onClose","children","useEffect","document","body","classList","add","remove","ReactDOM","createPortal","undefined","icon","faTimes","onClick","getElementById","MessageDialog","closeDialog","useContext","SetCloseMessageDialogContext","Message","MessageContext","updateAuthorize","useUpdateAuthorize","handleClose","ok","message","onOk","action","API","window","location","protocol","process","APP_SECRET","ConcernStatus","PersonnelConcernStatus","CryptoJS","require","token_add","profile_add","encrypt","data","AES","toString","decrypt","enc","Utf8","saveToken","auth","token","refreshToken","sessionStorage","setItem","JSON","stringify","clearToken","removeItem","getToken","parse","getItem","saveProfile","profile","trimmed","username","admin","personnel","distinctModules","AuthorizeContext","React","createContext","UserProfileContext","SetMessageContext","OpenMessageDialogContext","UpdateAuthorizeContext","SetBusyContext","UpdateUserProfileContext","useUserProfile","useSetMessage","useSetBusy","useUpdateUserProfile","AuthorizeProvider","useState","authorize","setAuthorize","getProfile","userProfile","setUserProfile","openMessageDialog","setOpenMessageDialog","setMessage","showLoading","setShowLoading","Provider","value","isBusy","b","clear","SecurityEnd","UserEnd","ModuleEnd","RoleEnd","ConcernEnd","ClassificationEnd","OfficeEnd","PersonnelEnd","PersonnelConcernEnd","httpGet","url","a","Error","axios","get","headers","Authorization","baseURL","then","res","status","catch","err","response","refreshTokenAuthentication","httpPost","param","post","httpPut","put","httpDelete","delete","httpAuthenticatingPost","request","authenticate","params","getUserData","name","page","parameters","encodeURI","activateUsers","id","resetUserPassword","deleteUser","createUser","user","roleIds","updateUser","newRoleIds","accessToDelete","updateProfile","CustomTextBox","type","readonly","onChange","onKeyPress","toggle","setToggle","htmlFor","e","elementName","target","faEye","faEyeSlash","prev","LoginPage","password","setUser","setBusy","signIn","finally","onTextChange","key","focus","Pagination","pages","currentPageNumber","goInPage","currentPage","setCurrentPage","canGoFirst","setGoFirst","canGoBefore","setGoBefore","canGoAfter","setGoAfter","canGoLast","setGoLast","pageList","setPageList","pl","i","push","faAngleDoubleLeft","faAngleLeft","cp","map","faAngleRight","faAngleDoubleRight","SeachBar","search","searchKey","setSearchKey","placeholder","val","faSearch","UserItem","classification","description","userRoles","length","x","role","join","active","faUserLock","faUserShield","faPen","faTrash","getPersonnels","getAvailablePersonnelsByClassification","classificationId","createPersonnel","updatePersonnel","getRoles","createRole","moduleIds","updateRole","newModuleIds","CustomCheckBoxButton","isCheck","CustomDropdown","itemsList","find","item","selected","getModules","CustomCheckBox","checkChange","text","checked","ModuleItemSelection","module","RoleManagementActions","viewOnly","payload","ModuleSelection","modules","Modules","ManageRole","selectedRole","accesses","setRole","setModules","fetchModules","filter","accessId","resMod","mod","acc","moduleId","initializeComponents","r","ManageUser","usersInfo","personnelItem","setPersonnelItem","personnels","setPersonnels","personnelId","roles","setRoles","roleItems","setRoleItems","setUserRoles","showModal","setShowModal","setSelectedRole","fetchPersonnels","fetchRoles","roleId","deleted","userId","prevUser","u","faUndo","undoDeleteRole","deleteRole","viewRole","UserPage","setName","users","setUsers","pageCount","setPageCount","selectedUser","setSelectedUser","userAction","resetPassword","deleteSelectedUser","userid","searchUser","searchUsers","results","colSpan","needToReload","Routes","searchConcerns","createConcern","concern","updateConcern","deleteConcern","assignConcern","ConcernItem","ConcernActions","entryDate","Date","toLocaleString","office","caller","closedDate","statusId","ConcernItems","concerns","ConcernList","AssignConcern","availabelPersonnelItem","setAvailabelPersonnelItem","selectedPersonnel","setSelectedPersonnel","selectedAvailablePersonnel","setSelectedAvailablePersonnel","fetchAvailablePersonnels","getDirectConcerns","isResolve","isForwarded","getActions","concernId","resolvePersonnelConcern","actionTaken","forwardPersonnelConcern","reason","ConcernAction","prevPersonnelConcernId","receivedDate","forwardDate","ConcernActionsViewer","personnelConcern","setPersonnelConcern","fetchActions","getClassifications","createClassification","updateClassification","getOffices","createOffice","updateOffice","CustomTextArea","lineCount","rows","ManageConcern","selectedConcern","officeId","setConcern","classifications","setClassifications","offices","setOffices","classificationItem","setClassificationItem","officeItem","setOfficeItem","fetchClassifications","fetchOffices","prevConcern","ConcernPage","setKey","setConcerns","showAssignmentModal","setShowAssignmentModal","showActionsModal","setShowActionsModal","setSelectedConcern","hasChanges","searchConcern","deleteSelectedConcern","ManageProfile","updateProfileInfo","newPassword","confirmNewPassword","RoleItem","RoleActions","RoleItems","RoleList","RolePage","setViewOnly","searchRole","searchRoles","DirectConcernItem","DirectConcernActions","prevPersonnelConcern","DirectConcernItems","DirectConcernList","ForwardConcern","setReason","ResolveConcern","setActionTaken","TicketPage","directConcerns","setDirectConcerns","selectedDirectConcern","setSelectedDirectConcern","showResolveModal","setShowResolveModal","showForwardModal","setShowForwardModal","resolved","setResolved","forwarded","setForwarded","fetchDirectConcern","isResolved","ClassificationItem","ClassificationActions","ClassificationItems","ClassificationList","ManageClassification","selectedClassification","setClassification","ClassificationPage","setSelectedClassification","searchClassification","searchClassifications","PersonnelItem","PersonnelActions","PersonnelItems","PersonnelList","ManagePersonnel","setPersonnel","OfficePage","searchPersonnel","searchPersonnels","OfficeItem","OfficeActions","abbreviation","OfficeItems","OfficeList","ManageOffice","selectedOffice","setOffice","setSelectedOffice","searchOffice","searchOffices","HomePage","showProfile","setShowProfile","menus","useMemo","head","navs","route","header","to","menu","nav","path","exact","component","PersonnelPage","App","render","StrictMode"],"mappings":"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","file":"static/js/main.596a3704.chunk.js","sourcesContent":["import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { ReactNode, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nexport default function Modal({\r\n  title,\r\n  className,\r\n  onClose,\r\n  children,\r\n}: {\r\n  title?: String | undefined;\r\n  className?: String | undefined;\r\n  onClose?: (() => void) | undefined;\r\n  children: ReactNode;\r\n}) {\r\n  useEffect(() => {\r\n    document.body.classList.add('body-modal');\r\n\r\n    return () => {\r\n      document.body.classList.remove('body-modal');\r\n    };\r\n  });\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <div className='modal-container'>\r\n        <div className='modal-blocker'></div>\r\n        <div className={'modal-content ' + className}>\r\n          <div className='modal-content-header'>\r\n            <div className='header-text'>{title}</div>\r\n            {onClose !== undefined && (\r\n              <FontAwesomeIcon\r\n                className='close-icon'\r\n                icon={faTimes as IconProp}\r\n                onClick={onClose}\r\n              />\r\n            )}\r\n          </div>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </>,\r\n    document.getElementById('modal') as HTMLElement\r\n  );\r\n}\r\n","import {\r\n  useMessage,\r\n  useSetCloseMessageDialog,\r\n  useUpdateAuthorize,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport Modal from './modal';\r\n\r\nexport default function MessageDialog() {\r\n  const closeDialog = useSetCloseMessageDialog();\r\n  const Message = useMessage();\r\n  const updateAuthorize = useUpdateAuthorize();\r\n\r\n  function handleClose() {\r\n    closeDialog();\r\n  }\r\n\r\n  function ok() {\r\n    if (Message?.message === 'Unauthorized') updateAuthorize(false);\r\n    closeDialog();\r\n    Message?.onOk?.();\r\n  }\r\n  return (\r\n    <Modal>\r\n      <div className='modal-content-body'>\r\n        <p>{Message?.message}</p>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        {(Message?.action === undefined || Message?.action === 'OKCANCEL') && (\r\n          <button onClick={ok} className='btn-modal btn-primary'>\r\n            OK\r\n          </button>\r\n        )}\r\n        {Message?.action === 'OKCANCEL' && (\r\n          <button onClick={handleClose} className='btn-modal btn-secondary '>\r\n            CANCEL\r\n          </button>\r\n        )}\r\n        {Message?.action === 'YESNO' && (\r\n          <button onClick={ok} className='btn-modal btn-primary'>\r\n            YES\r\n          </button>\r\n        )}\r\n        {Message?.action === 'YESNO' && (\r\n          <button onClick={handleClose} className='btn-modal btn-secondary'>\r\n            NO\r\n          </button>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useContext, ReactNode, useState } from 'react';\r\nimport { Profile } from '../entities/user/Profile';\r\nimport MessageDialog from '../pages/modals/message-dialog';\r\nimport {\r\n  clearSession,\r\n  getProfile,\r\n  getToken,\r\n} from '../processors/session-manager';\r\n\r\nconst AuthorizeContext = React.createContext<boolean>(false);\r\nconst UserProfileContext = React.createContext<Profile | undefined>(undefined);\r\nconst SetMessageContext = React.createContext<(message: Message) => void>(\r\n  () => {}\r\n);\r\nconst SetCloseMessageDialogContext = React.createContext<() => void>(() => {});\r\nconst MessageContext = React.createContext<Message | undefined>(undefined);\r\nconst OpenMessageDialogContext = React.createContext<boolean>(false);\r\nconst UpdateAuthorizeContext = React.createContext<\r\n  (authorize: boolean) => void\r\n>(() => {});\r\nconst SetBusyContext = React.createContext<(args: boolean) => void>(() => {});\r\nconst UpdateUserProfileContext = React.createContext<\r\n  (args: Profile | undefined) => void\r\n>(() => {});\r\nexport interface Message {\r\n  message: string;\r\n  type?: MESSAGETYPE | undefined;\r\n  action?: MESSAGEACTION | undefined;\r\n  onOk?: () => void;\r\n}\r\nexport type MESSAGETYPE = 'MESSAGE' | 'ALERT';\r\nexport type MESSAGEACTION = 'YESNO' | 'OKCANCEL';\r\nexport function useSetCloseMessageDialog() {\r\n  return useContext(SetCloseMessageDialogContext);\r\n}\r\nexport function useAuthorize() {\r\n  return useContext(AuthorizeContext);\r\n}\r\nexport function useUserProfile() {\r\n  return useContext(UserProfileContext);\r\n}\r\nexport function useUpdateAuthorize() {\r\n  return useContext(UpdateAuthorizeContext);\r\n}\r\nexport function useSetMessage() {\r\n  return useContext(SetMessageContext);\r\n}\r\nexport function useMessage() {\r\n  return useContext(MessageContext);\r\n}\r\nexport function useOpenMessageDialog() {\r\n  return useContext(OpenMessageDialogContext);\r\n}\r\nexport function useSetBusy() {\r\n  return useContext(SetBusyContext);\r\n}\r\nexport function useUpdateUserProfile() {\r\n  return useContext(UpdateUserProfileContext);\r\n}\r\nexport function AuthorizeProvider({ children }: { children: ReactNode }) {\r\n  const [authorize, setAuthorize] = useState(() => {\r\n    const token = getToken();\r\n    return token?.token !== undefined;\r\n  });\r\n  const [userProfile, setUserProfile] = useState<Profile | undefined>(() => {\r\n    return getProfile();\r\n  });\r\n  const [openMessageDialog, setOpenMessageDialog] = useState<boolean>(false);\r\n  const [message, setMessage] = useState<Message>();\r\n  const [showLoading, setShowLoading] = useState<number>(() => 0);\r\n  function updateProfile(profile: Profile | undefined) {\r\n    setUserProfile(profile);\r\n  }\r\n  function updateAuthorize(authorize: boolean) {\r\n    if (!authorize) {\r\n      clearSession();\r\n      setUserProfile(undefined);\r\n    }\r\n    setAuthorize(authorize);\r\n  }\r\n  function showMessage(message: Message) {\r\n    setMessage(message);\r\n    setOpenMessageDialog(true);\r\n  }\r\n  function closeMessageDilaog() {\r\n    setOpenMessageDialog(false);\r\n  }\r\n  function setBusy(isBusy: boolean) {\r\n    setShowLoading((b) => b + (isBusy ? 1 : -1));\r\n    if (showLoading + (isBusy ? 1 : -1) === 1) {\r\n      document.body.classList.add('body-modal');\r\n    } else {\r\n      document.body.classList.remove('body-modal');\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className={\r\n          'loading-screen' + (showLoading > 0 ? ' loading-block' : '')\r\n        }>\r\n        <div className='loading-blocker'></div>\r\n        <div className='loading'>\r\n          <label> Please Wait</label>\r\n        </div>\r\n      </div>\r\n      <SetBusyContext.Provider value={setBusy}>\r\n        <OpenMessageDialogContext.Provider value={openMessageDialog}>\r\n          <SetCloseMessageDialogContext.Provider value={closeMessageDilaog}>\r\n            <MessageContext.Provider value={message}>\r\n              <SetMessageContext.Provider value={showMessage}>\r\n                <AuthorizeContext.Provider value={authorize}>\r\n                  <UpdateAuthorizeContext.Provider value={updateAuthorize}>\r\n                    <UserProfileContext.Provider value={userProfile}>\r\n                      <UpdateUserProfileContext.Provider value={updateProfile}>\r\n                        {children}\r\n                        {openMessageDialog && <MessageDialog />}\r\n                      </UpdateUserProfileContext.Provider>\r\n                    </UserProfileContext.Provider>\r\n                  </UpdateAuthorizeContext.Provider>\r\n                </AuthorizeContext.Provider>\r\n              </SetMessageContext.Provider>\r\n            </MessageContext.Provider>\r\n          </SetCloseMessageDialogContext.Provider>\r\n        </OpenMessageDialogContext.Provider>\r\n      </SetBusyContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n","export const API =\r\n  process.env.NODE_ENV === 'development'\r\n    ? process.env.REACT_APP_DEV\r\n    : window.location.protocol === 'http:'\r\n    ? process.env.REACT_APP_PROD\r\n    : process.env.REACT_APP_SECURED_PROD;\r\nexport const ICON = 'TICKETING SYSTEM';\r\nexport const APP_SECRET = process.env.REACT_APP_SECRET_KEY;\r\nexport const ConcernStatus = {\r\n  Open: 1,\r\n  Assign: 2,\r\n  Close: 3,\r\n};\r\nexport const PersonnelConcernStatus = {\r\n  Pending: 1,\r\n  Resolved: 2,\r\n  Forwarded: 3,\r\n};\r\n","import { Profile } from '../entities/user/Profile';\r\nimport { Authentication } from '../entities/Authentication';\r\nimport { APP_SECRET } from '../constant';\r\n\r\nvar CryptoJS = require('crypto-js');\r\nconst token_add = '--pxx--';\r\nconst profile_add = '--pxx-xdx--';\r\nconst current_voter = '--pxx-xvx--';\r\n\r\nfunction encrypt(data: string): string {\r\n  return CryptoJS.AES.encrypt(data, APP_SECRET).toString();\r\n}\r\nfunction decrypt(data: string): string {\r\n  return CryptoJS.AES.decrypt(data, APP_SECRET).toString(CryptoJS.enc.Utf8);\r\n}\r\n\r\nexport function saveToken(auth: Authentication) {\r\n  if (auth.token !== undefined && auth.refreshToken !== undefined) {\r\n    sessionStorage.setItem(token_add, encrypt(JSON.stringify(auth)));\r\n  }\r\n}\r\n\r\nexport function clearToken() {\r\n  sessionStorage.removeItem(token_add);\r\n}\r\n\r\nexport function getToken(): Authentication | undefined {\r\n  try {\r\n    return JSON.parse(decrypt(sessionStorage.getItem(token_add) ?? ''));\r\n  } catch {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function getProfile(): Profile | undefined {\r\n  try {\r\n    return JSON.parse(decrypt(sessionStorage.getItem(profile_add) ?? ''));\r\n  } catch {\r\n    return undefined;\r\n  }\r\n}\r\nexport function saveProfile(profile: Profile) {\r\n  if (profile !== undefined) {\r\n    let trimmed: Profile = {\r\n      username: profile.username,\r\n      admin: profile.admin,\r\n      personnel: profile.personnel,\r\n      distinctModules: profile.distinctModules,\r\n    };\r\n    sessionStorage.setItem(profile_add, encrypt(JSON.stringify(trimmed)));\r\n  }\r\n}\r\n\r\nexport function clearProfile() {\r\n  sessionStorage.removeItem(profile_add);\r\n}\r\n\r\nexport function getCurrentVoter(): number | undefined {\r\n  try {\r\n    return parseInt(decrypt(sessionStorage.getItem(current_voter) ?? ''));\r\n  } catch {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function saveCurrentVoter(voterId: number) {\r\n  if (voterId !== undefined) {\r\n    sessionStorage.setItem(current_voter, encrypt(voterId.toString()));\r\n  }\r\n}\r\n\r\nexport function clearVoterId() {\r\n  sessionStorage.removeItem(current_voter);\r\n}\r\n\r\nexport function clearSession() {\r\n  sessionStorage.clear();\r\n}\r\n","export const SecurityEnd = {\r\n  Refresh: 'securities/refresh',\r\n  Login: 'securities/log',\r\n};\r\n\r\nexport const UserEnd = {\r\n  GetData: 'users/profile',\r\n  Search: 'users/search',\r\n  Activate: 'users/activate',\r\n  ResetPassword: 'users/reset-password',\r\n  Delete: 'users',\r\n  Create: 'users',\r\n  Update: 'users',\r\n  UpdateProfile: 'users/profile',\r\n};\r\nexport const ModuleEnd = {\r\n  GetList: 'modules',\r\n};\r\nexport const RoleEnd = {\r\n  Search: 'roles/search',\r\n  GetList: 'roles',\r\n  Delete: 'roles',\r\n  Create: 'roles',\r\n  Update: 'roles',\r\n};\r\n\r\nexport const ConcernEnd = {\r\n  Search: 'concerns/search',\r\n  Create: 'concerns',\r\n  Update: 'concerns',\r\n  Delete: 'concerns',\r\n  Assign: 'concerns/assign',\r\n};\r\n\r\nexport const ClassificationEnd = {\r\n  GetList: 'classifications',\r\n  Get: 'classifications',\r\n  Search: 'classifications/search',\r\n  Add: 'classifications',\r\n  Update: 'classifications',\r\n};\r\n\r\nexport const OfficeEnd = {\r\n  GetList: 'offices',\r\n  Get: 'offices',\r\n  Search: 'offices/search',\r\n  Add: 'offices',\r\n  Update: 'offices',\r\n};\r\n\r\nexport const PersonnelEnd = {\r\n  GetList: 'personnels',\r\n  GetListByClassification: 'personnels/classification',\r\n  GetAvailableListByClassification: 'personnels/classification/available',\r\n  Get: 'personnels',\r\n  Search: 'personnels/search',\r\n  Add: 'personnels',\r\n  Update: 'personnels',\r\n};\r\n\r\nexport const PersonnelConcernEnd = {\r\n  GetList: 'personnel-concerns',\r\n  GetActions: 'personnel-concerns/actions',\r\n  Resolve: 'personnel-concerns/resolve',\r\n  Forward: 'personnel-concerns/forward',\r\n};\r\n","import axios, { AxiosRequestConfig } from 'axios';\r\nimport { Authentication } from '../entities/Authentication';\r\nimport { SecurityEnd } from '../endpoints';\r\nimport { API } from '../constant';\r\nimport { clearToken, getToken, saveToken } from './session-manager';\r\n\r\nexport async function httpGet<Return>(\r\n  url: string\r\n): Promise<Return | undefined> {\r\n  const token = getToken();\r\n  if (token?.token === null) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .get(url, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 200:\r\n          return res.data;\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpGet<Return>(url);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('Not Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpPost<Return>(\r\n  url: string,\r\n  param: any\r\n): Promise<Return | undefined> {\r\n  const token = getToken();\r\n  if (token?.token === undefined) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .post(url, param, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 200:\r\n          return res.data;\r\n        case 201:\r\n          return res.data;\r\n        case 204:\r\n          return true;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpPost<Return>(url, param);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpPut(url: string, param: any): Promise<boolean> {\r\n  const token = getToken();\r\n  if (token?.token === undefined) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .put(url, param, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 204:\r\n          return true;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpPut(url, param);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpDelete(url: string): Promise<boolean> {\r\n  const token = getToken();\r\n  if (token?.token === undefined) {\r\n    throw new Error('Unauthorized');\r\n  }\r\n  return await axios\r\n    .delete(url, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token?.token,\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then(async (res) => {\r\n      switch (res.status) {\r\n        case 204:\r\n          return true;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 403:\r\n            throw new Error('Access denied');\r\n          case 401:\r\n            if (await refreshTokenAuthentication()) {\r\n              return await httpDelete(url);\r\n            }\r\n            throw new Error('Unauthorized');\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function httpAuthenticatingPost<Return>(\r\n  url: string,\r\n  param: any\r\n): Promise<Return | undefined> {\r\n  return await axios\r\n    .post(url, JSON.stringify(param), {\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      baseURL: API,\r\n    } as AxiosRequestConfig)\r\n    .then((res) => {\r\n      switch (res.status) {\r\n        case 200:\r\n          return res.data;\r\n        default:\r\n          throw new Error('Unknown Error');\r\n      }\r\n    })\r\n    .catch(async (err) => {\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 400:\r\n            throw new Error(err.response.data);\r\n          case 404:\r\n            throw new Error('No Data Found');\r\n          default:\r\n            throw new Error(err.response.data);\r\n        }\r\n      }\r\n      throw new Error(err);\r\n    });\r\n}\r\n\r\nexport async function refreshTokenAuthentication(): Promise<\r\n  boolean | undefined\r\n> {\r\n  const request = getToken();\r\n  return await httpAuthenticatingPost<Authentication>(\r\n    SecurityEnd.Refresh,\r\n    request\r\n  )\r\n    .then((res) => {\r\n      if (res !== undefined) {\r\n        saveToken(res);\r\n        return true;\r\n      }\r\n      throw new Error('Unauthorized');\r\n    })\r\n    .catch(() => {\r\n      clearToken();\r\n      throw new Error('Unauthorized');\r\n    });\r\n}\r\n","import { SecurityEnd } from '../endpoints';\r\nimport { Authentication } from '../entities/Authentication';\r\nimport { httpAuthenticatingPost } from './base';\r\nimport { LoginUser } from '../entities/user/LoginUser';\r\nimport { saveToken } from './session-manager';\r\n\r\nexport async function authenticate(params: LoginUser): Promise<boolean> {\r\n  return await httpAuthenticatingPost(SecurityEnd.Login, params).then((res) => {\r\n    saveToken(res as Authentication);\r\n    return true;\r\n  });\r\n}\r\n","import { UserEnd } from '../endpoints';\r\nimport { httpDelete, httpGet, httpPost, httpPut } from './base';\r\nimport { Profile } from '../entities/user/Profile';\r\nimport { UpdateUserProfile } from '../entities/user/UpdateUserProfile';\r\nimport { User } from '../entities/user/User';\r\nimport { SearchResult } from '../entities/SearchResult';\r\n\r\nexport async function getUserData(): Promise<Profile | undefined> {\r\n  return await httpGet<Profile>(UserEnd.GetData);\r\n}\r\n\r\nexport async function searchUsers(\r\n  name: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<User> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (name !== undefined) {\r\n    parameters += '&key=' + encodeURI(name);\r\n  }\r\n\r\n  return await httpGet<SearchResult<User>>(UserEnd.Search + parameters);\r\n}\r\n\r\nexport async function activateUsers(id: number): Promise<boolean | undefined> {\r\n  return await httpPost(UserEnd.Activate + '/' + id, null);\r\n}\r\n\r\nexport async function resetUserPassword(\r\n  id: number\r\n): Promise<boolean | undefined> {\r\n  return await httpPost(UserEnd.ResetPassword + '/' + id, null);\r\n}\r\n\r\nexport async function deleteUser(id: number): Promise<boolean> {\r\n  return await httpDelete(UserEnd.Delete + '/' + id);\r\n}\r\n\r\nexport async function createUser(\r\n  user: User,\r\n  roleIds: number[] | undefined\r\n): Promise<User | undefined> {\r\n  return await httpPost<User>(UserEnd.Create, { ...user, roleIds });\r\n}\r\n\r\nexport async function updateUser(\r\n  user: User,\r\n  newRoleIds: number[] | undefined,\r\n  accessToDelete: number[] | undefined\r\n): Promise<boolean> {\r\n  return await httpPut(UserEnd.Update + '/' + user.id, {\r\n    ...user,\r\n    newRoleIds,\r\n    accessToDelete,\r\n  });\r\n}\r\n\r\nexport async function updateProfile(user: UpdateUserProfile): Promise<boolean> {\r\n  return await httpPut(UserEnd.UpdateProfile, user);\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\nimport { CustomReturn } from './CustomReturn';\r\nexport default function CustomTextBox({\r\n  title,\r\n  name,\r\n  type,\r\n  id,\r\n  className,\r\n  value,\r\n  readonly,\r\n  onChange,\r\n  onKeyPress,\r\n}: {\r\n  title: string;\r\n  value?: string;\r\n  name?: string;\r\n  type?: string;\r\n  id?: string;\r\n  className?: string;\r\n  readonly?: boolean | false;\r\n  onChange?: (data: CustomReturn) => void;\r\n  onKeyPress?: (key: React.KeyboardEvent<HTMLDivElement>) => void;\r\n}) {\r\n  const [toggle, setToggle] = useState(true);\r\n  return (\r\n    <div className='custom-input '>\r\n      <label htmlFor={name}>{title}</label>\r\n      <div className='input-container'>\r\n        {readonly ? (\r\n          <span>{value}</span>\r\n        ) : (\r\n          <>\r\n            <input\r\n              type={\r\n                type === 'password'\r\n                  ? toggle\r\n                    ? 'password'\r\n                    : 'text'\r\n                  : type ?? 'text'\r\n              }\r\n              name={name}\r\n              id={id}\r\n              value={value}\r\n              className={className}\r\n              onChange={(e) =>\r\n                onChange?.({ elementName: name ?? '', value: e.target.value })\r\n              }\r\n              onKeyPress={onKeyPress}\r\n            />\r\n            {type === 'password' && (\r\n              <div className='eye-container'>\r\n                <FontAwesomeIcon\r\n                  icon={(toggle ? faEye : faEyeSlash) as IconProp}\r\n                  className='eye-icon'\r\n                  onClick={() => {\r\n                    setToggle((prev) => !prev);\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n  useUpdateAuthorize,\r\n  useUpdateUserProfile,\r\n} from '../custom-hooks/authorize-provider';\r\nimport { LoginUser } from '../entities/user/LoginUser';\r\nimport { authenticate } from '../processors/security-process';\r\nimport { saveProfile } from '../processors/session-manager';\r\nimport { getUserData } from '../processors/user-process';\r\nimport CustomTextBox from './components/custom-textbox';\r\nimport { CustomReturn } from './components/CustomReturn';\r\n\r\nexport default function LoginPage() {\r\n  const [user, setUser] = useState<LoginUser>({\r\n    username: '',\r\n    password: '',\r\n  });\r\n  const setMessage = useSetMessage();\r\n  const updateProfile = useUpdateUserProfile();\r\n  const updateAuthorize = useUpdateAuthorize();\r\n  const setBusy = useSetBusy();\r\n  async function signIn() {\r\n    setBusy(true);\r\n    await authenticate(user)\r\n      .then(async (res) => {\r\n        if (res) {\r\n          await getProfile();\r\n          updateAuthorize(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  async function getProfile() {\r\n    setBusy(true);\r\n    await getUserData()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          saveProfile(res);\r\n          updateProfile(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function onTextChange({ elementName, value }: CustomReturn) {\r\n    setUser({ ...user, [elementName]: value });\r\n  }\r\n  function onKeyPress(key: React.KeyboardEvent<HTMLDivElement>) {\r\n    if (key.key === 'Enter') {\r\n      if (user.username === '') {\r\n        document.getElementById('username')?.focus();\r\n        return;\r\n      }\r\n      if (user.password === '') {\r\n        document.getElementById('password')?.focus();\r\n        return;\r\n      }\r\n\r\n      signIn();\r\n    }\r\n  }\r\n  return (\r\n    <div className='login-container'>\r\n      <div className='login-header'>\r\n        <h1>Authentication</h1>\r\n      </div>\r\n      <div className='login-content'>\r\n        <CustomTextBox\r\n          title='Username'\r\n          name='username'\r\n          id='username'\r\n          className='username'\r\n          onChange={onTextChange}\r\n          onKeyPress={onKeyPress}\r\n        />\r\n        <CustomTextBox\r\n          title='Password'\r\n          name='password'\r\n          id='password'\r\n          type='password'\r\n          className='password'\r\n          onChange={onTextChange}\r\n          onKeyPress={onKeyPress}\r\n        />\r\n        <button onClick={signIn} className='btn'>\r\n          Login\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faAngleDoubleLeft,\r\n  faAngleDoubleRight,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function Pagination({\r\n  pages,\r\n  currentPageNumber,\r\n  goInPage,\r\n}: {\r\n  pages: number;\r\n  currentPageNumber: number;\r\n  goInPage: (page: number) => void;\r\n}) {\r\n  const [currentPage, setCurrentPage] = useState<number>(currentPageNumber);\r\n  const [canGoFirst, setGoFirst] = useState<boolean>(false);\r\n  const [canGoBefore, setGoBefore] = useState<boolean>(false);\r\n  const [canGoAfter, setGoAfter] = useState<boolean>(false);\r\n  const [canGoLast, setGoLast] = useState<boolean>(false);\r\n  const [pageList, setPageList] = useState<number[]>([]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(currentPageNumber);\r\n    let pl: number[] = [];\r\n    for (let i = 1; i <= pages; i++) {\r\n      pl.push(i);\r\n    }\r\n    setPageList(pl);\r\n\r\n    setGoAfter(false);\r\n    setGoLast(false);\r\n    setGoFirst(false);\r\n    setGoBefore(false);\r\n\r\n    if (pages > 1) {\r\n      if (currentPageNumber !== pages) {\r\n        setGoAfter(true);\r\n        setGoLast(true);\r\n      }\r\n      if (currentPageNumber !== 1) {\r\n        setGoFirst(true);\r\n        setGoBefore(true);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      pl = [];\r\n    };\r\n  }, [pages, currentPageNumber]);\r\n\r\n  function goToFirst() {\r\n    if (!canGoFirst) return;\r\n\r\n    goInPage(1);\r\n\r\n    setGoFirst(false);\r\n    setGoBefore(false);\r\n    setGoAfter(true);\r\n    setGoLast(true);\r\n  }\r\n\r\n  function goToBefore() {\r\n    if (!canGoBefore) return;\r\n    setCurrentPage((cp) => {\r\n      cp = cp - 1;\r\n      if (cp === 1) {\r\n        setGoFirst(false);\r\n        setGoBefore(false);\r\n      }\r\n\r\n      goInPage(cp);\r\n\r\n      return cp;\r\n    });\r\n\r\n    setGoAfter(true);\r\n    setGoLast(true);\r\n  }\r\n\r\n  function goToAfter() {\r\n    if (!canGoAfter) return;\r\n    setCurrentPage((cp) => {\r\n      cp = cp + 1;\r\n      if (cp === pages) {\r\n        setGoAfter(false);\r\n        setGoLast(false);\r\n      }\r\n\r\n      goInPage(cp);\r\n      return cp;\r\n    });\r\n\r\n    setGoFirst(true);\r\n    setGoBefore(true);\r\n  }\r\n\r\n  function goToLast() {\r\n    if (!canGoLast) return;\r\n    setCurrentPage(pages);\r\n    setGoAfter(false);\r\n    setGoLast(false);\r\n\r\n    setGoFirst(true);\r\n    setGoBefore(true);\r\n\r\n    goInPage(pages);\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    setCurrentPage(page);\r\n    setGoFirst(true);\r\n    setGoBefore(true);\r\n    setGoAfter(true);\r\n    setGoLast(true);\r\n\r\n    if (page === 1) {\r\n      setGoFirst(false);\r\n      setGoBefore(false);\r\n    }\r\n\r\n    if (page === pages) {\r\n      setGoAfter(false);\r\n      setGoLast(false);\r\n    }\r\n\r\n    goInPage(page);\r\n  }\r\n\r\n  return (\r\n    <div className='pagination'>\r\n      <FontAwesomeIcon\r\n        icon={faAngleDoubleLeft as IconProp}\r\n        className={!canGoFirst ? 'disabled' : ''}\r\n        onClick={goToFirst}\r\n      />\r\n      <FontAwesomeIcon\r\n        icon={faAngleLeft as IconProp}\r\n        onClick={goToBefore}\r\n        className={!canGoBefore ? 'disabled' : ''}\r\n      />\r\n      <div className='pages-container'>\r\n        <button className='current-page'>{currentPage}</button>\r\n        <div className='pages'>\r\n          {pageList.map((pl) => (\r\n            <div\r\n              key={pl}\r\n              className={pl === currentPage ? 'active' : ''}\r\n              onClick={() => {\r\n                goToPage(pl);\r\n              }}>\r\n              {pl}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <FontAwesomeIcon\r\n        icon={faAngleRight as IconProp}\r\n        onClick={goToAfter}\r\n        className={!canGoAfter ? 'disabled' : ''}\r\n      />\r\n      <FontAwesomeIcon\r\n        icon={faAngleDoubleRight as IconProp}\r\n        onClick={goToLast}\r\n        className={!canGoLast ? 'disabled' : ''}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function SeachBar({\r\n  search,\r\n}: {\r\n  search: (key: string) => void;\r\n}) {\r\n  const [searchKey, setSearchKey] = useState<string>('');\r\n\r\n  function onKeyPress(key: React.KeyboardEvent<HTMLDivElement>) {\r\n    if (key.key === 'Enter') {\r\n      search(searchKey);\r\n    }\r\n  }\r\n\r\n  function searchKeyChange(val: {\r\n    target: { value: React.SetStateAction<string> };\r\n  }) {\r\n    setSearchKey(val.target.value);\r\n  }\r\n\r\n  function searchClick() {\r\n    search(searchKey);\r\n  }\r\n  return (\r\n    <div className='search-container'>\r\n      <input\r\n        type='text'\r\n        className='name'\r\n        placeholder='Search...'\r\n        value={searchKey}\r\n        onChange={searchKeyChange}\r\n        onKeyPress={onKeyPress}\r\n      />\r\n      <FontAwesomeIcon\r\n        className='search-icon'\r\n        icon={faSearch as IconProp}\r\n        onClick={searchClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faPen,\r\n  faTrash,\r\n  faUserLock,\r\n  faUserShield,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { User } from '../../../entities/user/User';\r\nimport { USERACTIONS } from '../../user-page';\r\n\r\nexport default function UserItem({\r\n  user,\r\n  action,\r\n}: {\r\n  user: User;\r\n  action: (action: USERACTIONS) => void;\r\n}) {\r\n  return (\r\n    <tr>\r\n      <td>{user.personnel?.name}</td>\r\n      <td>{user.personnel?.classification?.description}</td>\r\n      <td>{user.username}</td>\r\n      <td className='elipsis'>\r\n        {user.admin ? 'Admin' : 'User'}\r\n        {(user.userRoles?.length ?? 0) > 0 && ' | '}\r\n        {user.userRoles?.map((x) => x.role.description).join(' | ')}\r\n      </td>\r\n      <td>{user.active ? 'Active' : 'Inactive'}</td>\r\n      <td className='table-actions'>\r\n        <FontAwesomeIcon\r\n          className='action-icon table-icon-button'\r\n          icon={faUserLock as IconProp}\r\n          onClick={() => {\r\n            action({ type: 'Activate', id: user.id, active: user.active });\r\n          }}\r\n          title='Activate/Deactivate User'\r\n        />\r\n        <FontAwesomeIcon\r\n          icon={faUserShield as IconProp}\r\n          className='action-icon table-icon-button'\r\n          onClick={() => {\r\n            action({ type: 'ResetPassword', id: user.id });\r\n          }}\r\n          title='Reset Users Password'\r\n        />\r\n        <FontAwesomeIcon\r\n          icon={faPen as IconProp}\r\n          className='action-icon table-icon-button'\r\n          onClick={() => {\r\n            action({ type: 'Edit', user: user });\r\n          }}\r\n          title='Edit User'\r\n        />\r\n        <FontAwesomeIcon\r\n          icon={faTrash as IconProp}\r\n          className='action-icon table-icon-button'\r\n          onClick={() => {\r\n            action({ type: 'Delete', id: user.id });\r\n          }}\r\n          title='Delete User'\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { PersonnelEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { Personnel } from '../entities/transaction/Personnel';\r\nimport { httpGet, httpPost, httpPut } from './base';\r\n\r\nexport async function getPersonnels(): Promise<Personnel[] | undefined> {\r\n  return httpGet<Personnel[]>(PersonnelEnd.GetList);\r\n}\r\n\r\nexport async function getPersonnelsByClassification(\r\n  classificationId: number\r\n): Promise<Personnel[] | undefined> {\r\n  return httpGet<Personnel[]>(\r\n    `${PersonnelEnd.GetListByClassification}?classificationId=${classificationId}`\r\n  );\r\n}\r\n\r\nexport async function getAvailablePersonnelsByClassification(\r\n  classificationId: number\r\n): Promise<Personnel[] | undefined> {\r\n  return httpGet<Personnel[]>(\r\n    `${PersonnelEnd.GetAvailableListByClassification}?classificationId=${classificationId}`\r\n  );\r\n}\r\nexport async function searchPersonnels(\r\n  key: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<Personnel> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (key !== undefined) {\r\n    parameters += '&key=' + encodeURI(key);\r\n  }\r\n\r\n  return await httpGet<SearchResult<Personnel>>(\r\n    PersonnelEnd.Search + parameters\r\n  );\r\n}\r\nexport async function createPersonnel(\r\n  personnel: Personnel\r\n): Promise<Personnel | undefined> {\r\n  return httpPost(PersonnelEnd.Add, personnel);\r\n}\r\nexport async function updatePersonnel(personnel: Personnel): Promise<boolean> {\r\n  return httpPut(`${PersonnelEnd.Update}/${personnel.id}`, personnel);\r\n}\r\n","import { RoleEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { Role } from '../entities/user/Role';\r\nimport { httpDelete, httpGet, httpPost, httpPut } from './base';\r\nexport async function getRoles(): Promise<Role[] | undefined> {\r\n  return httpGet<Role[]>(RoleEnd.GetList);\r\n}\r\nexport async function searchRoles(\r\n  key: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<Role> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (key !== undefined) {\r\n    parameters += '&key=' + encodeURI(key);\r\n  }\r\n\r\n  return await httpGet<SearchResult<Role>>(RoleEnd.Search + parameters);\r\n}\r\nexport async function deleteRole(id: number): Promise<boolean> {\r\n  return await httpDelete(RoleEnd.Delete + '/' + id);\r\n}\r\n\r\nexport async function createRole(\r\n  description: string,\r\n  moduleIds: number[] | undefined\r\n): Promise<Role | undefined> {\r\n  return await httpPost<Role>(RoleEnd.Create, {\r\n    description,\r\n    moduleIds,\r\n  });\r\n}\r\n\r\nexport async function updateRole(\r\n  id: number,\r\n  description: string,\r\n  newModuleIds: number[] | undefined,\r\n  accessToDelete: number[] | undefined\r\n): Promise<boolean> {\r\n  return await httpPut(RoleEnd.Update + '/' + id, {\r\n    description,\r\n    newModuleIds,\r\n    accessToDelete,\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { CustomReturn } from './CustomReturn';\r\n\r\nexport default function CustomCheckBoxButton({\r\n  title,\r\n  name,\r\n  id,\r\n  className,\r\n  isCheck,\r\n  onChange,\r\n}: {\r\n  title: string;\r\n  name?: string;\r\n  id?: string;\r\n  className?: string;\r\n  isCheck: boolean;\r\n  onChange?: (data: CustomReturn) => void;\r\n}) {\r\n  return (\r\n    <div className={'custom-input ' + className}>\r\n      <button\r\n        className={'checkbox' + (isCheck ? ' checked' : '')}\r\n        value={isCheck ? 'true' : 'false'}\r\n        id={id}\r\n        onClick={() => {\r\n          onChange?.({ elementName: name ?? '', value: !isCheck });\r\n        }}>\r\n        {title}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { CustomReturn } from './CustomReturn';\r\n\r\nexport interface DropdownItem {\r\n  key: string;\r\n  value: string;\r\n}\r\nexport default function CustomDropdown({\r\n  title,\r\n  name,\r\n  id,\r\n  className,\r\n  value,\r\n  itemsList,\r\n  readonly,\r\n  onChange,\r\n}: {\r\n  title: string;\r\n  name?: string;\r\n  id?: string;\r\n  className?: string;\r\n  value?: string;\r\n  itemsList: DropdownItem[];\r\n  readonly?: boolean | false;\r\n  onChange?: (data: CustomReturn) => void;\r\n}) {\r\n  return (\r\n    <div className='custom-input'>\r\n      <label>{title}</label>\r\n      <div className='select-container'>\r\n        {readonly ? (\r\n          <span>{itemsList.find((x) => x.key === value)?.value}</span>\r\n        ) : (\r\n          <select\r\n            id={id}\r\n            className={className}\r\n            onChange={(e) => {\r\n              onChange?.({ elementName: name ?? '', value: e.target.value });\r\n            }}>\r\n            {itemsList?.map((item) => (\r\n              <option\r\n                key={item.key}\r\n                value={item.key}\r\n                selected={item.value === value}>\r\n                {item.value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n        {/* <button\r\n          className='current-selection'\r\n          value={currentValue?.value}\r\n          id={id}>\r\n          {currentValue?.value}\r\n        </button>\r\n        <FontAwesomeIcon\r\n          className='current-selection-icon'\r\n          icon={faChevronDown}\r\n        />\r\n        <div className='selection' id='selection'>\r\n          {itemsList.map((item) => (\r\n            <div\r\n              key={item.key}\r\n              className={\r\n                (item.key === currentValue?.key ? 'active' : '') +\r\n                ' selection-options'\r\n              }\r\n              onClick={() => {\r\n                setCurrentValue(item);\r\n                onChange?.({ name: name, value: item });\r\n              }}>\r\n              {item.value}\r\n            </div>\r\n          ))}\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { ModuleEnd } from '../endpoints';\r\nimport { Module } from '../entities/user/Module';\r\nimport { httpGet } from './base';\r\n\r\nexport async function getModules(): Promise<Module[] | undefined> {\r\n  return await httpGet<Module[]>(ModuleEnd.GetList);\r\n}\r\n","import React from 'react';\r\n\r\nexport default function CustomCheckBox({\r\n  isCheck,\r\n  checkChange,\r\n  id,\r\n  text,\r\n}: {\r\n  checkChange: () => void;\r\n  isCheck: boolean;\r\n  id?: string;\r\n  text?: string;\r\n}) {\r\n  return (\r\n    <div className='check'>\r\n      <label className='check-container'>\r\n        <input\r\n          type='checkbox'\r\n          id={id ?? 'check'}\r\n          onChange={checkChange}\r\n          checked={isCheck}\r\n        />\r\n        <span className='checkmark'></span>\r\n      </label>\r\n      {text && (\r\n        <label className='check-label' htmlFor={id ?? 'check'}>\r\n          {text}\r\n        </label>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { Module } from '../../../entities/user/Module';\r\nimport { RoleManagementActions } from '../../modals/manage-role';\r\nimport CustomCheckBox from '../custom-check-box';\r\n\r\nexport default function ModuleItemSelection({ module }: { module: Module }) {\r\n  const action = useContext(RoleManagementActions);\r\n  return (\r\n    <tr>\r\n      <td className='left-content'>\r\n        {module.viewOnly ? (\r\n          <div>{module.description}</div>\r\n        ) : (\r\n          <CustomCheckBox\r\n            checkChange={() => {\r\n              action({ action: 'Check', payload: module });\r\n            }}\r\n            id={module.id.toString()}\r\n            text={module.description}\r\n            isCheck={module?.checked ?? false}\r\n          />\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Modules } from '../../modals/manage-role';\r\nimport ModuleItemSelection from './module-item-selection';\r\n\r\nexport default function ModuleSelection() {\r\n  const modules = useContext(Modules);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Module Access</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {modules.map((module) => (\r\n          <ModuleItemSelection key={module.id} module={module} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Module } from '../../entities/user/Module';\r\nimport { Role } from '../../entities/user/Role';\r\nimport { getModules } from '../../processors/module-process';\r\nimport { createRole, updateRole } from '../../processors/role-process';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport ModuleSelection from '../components/role-components/module-selection';\r\nimport Modal from './modal';\r\n\r\ntype RoleManagementAction = { action: 'Check'; payload: Module };\r\nexport const RoleManagementActions = createContext<\r\n  (action: RoleManagementAction) => void\r\n>(() => {});\r\nexport const Modules = createContext<Module[]>([]);\r\nexport default function ManageRole({\r\n  selectedRole,\r\n  onClose,\r\n  viewOnly,\r\n}: {\r\n  selectedRole: Role | undefined;\r\n  onClose: (hasChanges: boolean) => void;\r\n  viewOnly: boolean;\r\n}) {\r\n  const [role, setRole] = useState<Role>(\r\n    () =>\r\n      selectedRole ?? {\r\n        id: 0,\r\n        description: '',\r\n        accesses: [],\r\n      }\r\n  );\r\n  const [modules, setModules] = useState<Module[]>([]);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    //eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchModules();\r\n  }\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (role.id === 0) {\r\n      await createRole(\r\n        role.description,\r\n        modules.filter((x) => x.checked).map((x) => x.id)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Role Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateRole(\r\n        role.id,\r\n        role.description,\r\n        modules\r\n          .filter((x) => x.checked && x.accessId === undefined)\r\n          .map((x) => x.id),\r\n        modules\r\n          .filter((x) => !x.checked && x.accessId !== undefined)\r\n          .map((x) => x.accessId ?? 0)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Role Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  function onChange(data: CustomReturn) {\r\n    setRole((r) => {\r\n      return { ...r, [data.elementName]: data.value };\r\n    });\r\n  }\r\n  async function roleManagement(action: RoleManagementAction) {\r\n    switch (action.action) {\r\n      case 'Check':\r\n        setModules(\r\n          modules.map((x) => {\r\n            if (x.id === action.payload.id) {\r\n              x.checked = !x.checked;\r\n            }\r\n            return x;\r\n          })\r\n        );\r\n        break;\r\n    }\r\n  }\r\n  async function fetchModules() {\r\n    setBusy(true);\r\n    await getModules()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          let resMod = res.map((module) => {\r\n            const mod = role.accesses?.filter(\r\n              (acc) => acc.moduleId === module.id\r\n            )?.[0];\r\n            if (mod !== undefined) {\r\n              module.checked = true;\r\n              module.accessId = mod.id;\r\n            }\r\n            return module;\r\n          });\r\n\r\n          if (viewOnly) {\r\n            resMod = resMod\r\n              .filter((x) => x.accessId !== undefined)\r\n              .map((x) => {\r\n                x.viewOnly = true;\r\n                return x;\r\n              });\r\n          }\r\n          setModules(resMod);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title={\r\n        viewOnly ? 'Role' : !!selectedRole?.id ? 'Update Role' : 'Add New Role'\r\n      }>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <CustomTextBox\r\n          title='Description'\r\n          name='description'\r\n          value={role.description}\r\n          onChange={onChange}\r\n          readonly={viewOnly}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Modules.Provider value={modules}>\r\n          <RoleManagementActions.Provider value={roleManagement}>\r\n            <ModuleSelection />\r\n          </RoleManagementActions.Provider>\r\n        </Modules.Provider>\r\n      </div>\r\n      {!viewOnly && (\r\n        <div className='modal-footer'>\r\n          <button onClick={saveData} className='btn-modal btn-primary'>\r\n            SAVE\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Modal>\r\n  );\r\n}\r\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faEye, faTrash, faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Personnel } from '../../entities/transaction/Personnel';\r\nimport { Role } from '../../entities/user/Role';\r\nimport { User, UserRole } from '../../entities/user/User';\r\nimport { getPersonnels } from '../../processors/personnel-process';\r\nimport { getRoles } from '../../processors/role-process';\r\nimport { createUser, updateUser } from '../../processors/user-process';\r\nimport CustomCheckBoxButton from '../components/custom-check-box-button';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport ManageRole from './manage-role';\r\nimport Modal from './modal';\r\nexport default function ManageUser({\r\n  usersInfo,\r\n  onClose,\r\n}: {\r\n  usersInfo: User | undefined;\r\n  onClose: (needToReLoad: boolean) => void;\r\n}) {\r\n  const [personnelItem, setPersonnelItem] = useState<DropdownItem[]>([]);\r\n  const [personnels, setPersonnels] = useState<Personnel[]>([]);\r\n  const [user, setUser] = useState<User>(\r\n    () =>\r\n      usersInfo ?? {\r\n        id: 0,\r\n        username: '',\r\n        name: '',\r\n        active: false,\r\n        admin: false,\r\n        personnel: undefined,\r\n        personnelId: undefined,\r\n      }\r\n  );\r\n  const [roles, setRoles] = useState<Role[]>([]);\r\n  const [roleItems, setRoleItems] = useState<DropdownItem[]>([]);\r\n  const [userRoles, setUserRoles] = useState<UserRole[]>(\r\n    () => usersInfo?.userRoles ?? []\r\n  );\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedRole, setSelectedRole] = useState<Role | undefined>();\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchPersonnels();\r\n    await fetchRoles();\r\n  }\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (user.id === 0) {\r\n      await createUser(\r\n        user,\r\n        userRoles.map((x) => x.roleId)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'New User Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateUser(\r\n        user,\r\n        userRoles.filter((x) => x.id === 0).map((x) => x.roleId),\r\n        userRoles.filter((x) => x.deleted).map((x) => x.id)\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'User Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  async function fetchPersonnels() {\r\n    setBusy(true);\r\n    await getPersonnels()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnels(res);\r\n          setPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.name,\r\n              };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function onChange({ elementName, value }: CustomReturn) {\r\n    if (elementName === 'role') {\r\n      let role = roles.filter((x) => x.id === +value)?.[0];\r\n      setUserRoles((r) => [\r\n        ...r,\r\n        { id: 0, roleId: role.id, role: role, userId: user.id },\r\n      ]);\r\n      setRoleItems((r) => r.filter((x) => x.key !== value));\r\n    }\r\n    if (elementName === 'personnel') {\r\n      let personnel = personnels.filter((x) => x.id === +value)?.[0];\r\n      setUser((prev) => {\r\n        return { ...prev, personnel: personnel, personnelId: personnel.id };\r\n      });\r\n      return;\r\n    }\r\n\r\n    setUser((prevUser) => {\r\n      if (prevUser === undefined) return { [elementName]: value } as User;\r\n      return { ...prevUser, [elementName]: value };\r\n    });\r\n  }\r\n  async function fetchRoles() {\r\n    setBusy(true);\r\n    await getRoles()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setRoles(res);\r\n          setRoleItems([\r\n            { key: '', value: '' },\r\n            ...res\r\n              .filter(\r\n                (x) =>\r\n                  !user.userRoles?.filter((u) => u.roleId === x.id)?.[0]?.id\r\n              )\r\n              .map((x) => {\r\n                return { key: x.id.toString(), value: x.description };\r\n              }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => {\r\n        setBusy(false);\r\n      });\r\n  }\r\n  function undoDeleteRole(role: UserRole) {\r\n    setUserRoles((res) =>\r\n      res.map((x) => {\r\n        if (x.roleId === role.roleId) x.deleted = false;\r\n        return x;\r\n      })\r\n    );\r\n  }\r\n  function deleteRole(role: UserRole) {\r\n    setUserRoles((res) => {\r\n      if (role.id === 0) {\r\n        return res.filter((x) => x.roleId !== role.roleId);\r\n      }\r\n      return res.map((x) => {\r\n        if (x.roleId === role.roleId) x.deleted = true;\r\n        return x;\r\n      });\r\n    });\r\n    if (role.id === 0) {\r\n      setRoleItems([\r\n        ...roleItems,\r\n        {\r\n          key: role.roleId?.toString() ?? '',\r\n          value: role.role?.description ?? '',\r\n        },\r\n      ]);\r\n    }\r\n  }\r\n  function viewRole(role: UserRole) {\r\n    setSelectedRole(role.role);\r\n    setShowModal(true);\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => onClose(false)}\r\n      title={(user?.id ?? 0) > 0 ? 'Update Users Information' : 'Add New User'}>\r\n      <div className='user-management-modal-body modal-content-body'>\r\n        <div>\r\n          <CustomDropdown\r\n            title='Personnel'\r\n            name='personnel'\r\n            value={user?.personnel?.name}\r\n            onChange={onChange}\r\n            itemsList={personnelItem}\r\n          />\r\n          <CustomTextBox\r\n            title='Username'\r\n            name='username'\r\n            value={user?.username}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <CustomCheckBoxButton\r\n            title='Is Admin'\r\n            name='admin'\r\n            isCheck={user?.admin ?? false}\r\n            onChange={onChange}\r\n          />\r\n          <CustomCheckBoxButton\r\n            title='Is Active'\r\n            name='active'\r\n            isCheck={user?.active ?? false}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <CustomDropdown\r\n            title='Role'\r\n            name='role'\r\n            value={user?.personnel?.name}\r\n            onChange={onChange}\r\n            itemsList={roleItems}\r\n          />\r\n        </div>\r\n        <div className='table-container'>\r\n          <table className='item-table'>\r\n            <thead>\r\n              <tr>\r\n                <th>User Roles</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {userRoles?.map((role) => (\r\n                <tr key={role.roleId} className={role.deleted ? 'deleted' : ''}>\r\n                  <td>{role.role?.description}</td>\r\n                  <td className='table-actions'>\r\n                    {role.deleted && (\r\n                      <FontAwesomeIcon\r\n                        icon={faUndo as IconProp}\r\n                        className='action-icon table-icon-button'\r\n                        onClick={() => {\r\n                          undoDeleteRole(role);\r\n                        }}\r\n                        title='Undo'\r\n                      />\r\n                    )}\r\n                    {!role.deleted && (\r\n                      <FontAwesomeIcon\r\n                        icon={faTrash as IconProp}\r\n                        className='action-icon table-icon-button'\r\n                        onClick={() => {\r\n                          deleteRole(role);\r\n                        }}\r\n                        title='Delete'\r\n                      />\r\n                    )}\r\n                    <FontAwesomeIcon\r\n                      icon={faEye as IconProp}\r\n                      className='action-icon table-icon-button'\r\n                      onClick={() => {\r\n                        viewRole(role);\r\n                      }}\r\n                      title='View'\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n      <div>\r\n        {showModal && (\r\n          <ManageRole\r\n            onClose={() => {\r\n              setShowModal(false);\r\n            }}\r\n            selectedRole={selectedRole}\r\n            viewOnly={true}\r\n          />\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { User } from '../entities/user/User';\r\nimport {\r\n  activateUsers,\r\n  deleteUser,\r\n  resetUserPassword,\r\n  searchUsers,\r\n} from '../processors/user-process';\r\nimport Pagination from './components/pagination';\r\nimport SeachBar from './components/seachbar';\r\nimport UserItem from './components/users-components/user-item';\r\nimport ManageUser from './modals/manage-user';\r\n\r\nexport type USERACTIONS =\r\n  | { type: 'Activate'; id: number; active: boolean }\r\n  | { type: 'ResetPassword'; id: number }\r\n  | { type: 'Edit'; user: User }\r\n  | { type: 'Delete'; id: number };\r\n\r\nexport default function UserPage() {\r\n  const [name, setName] = useState<string | undefined>();\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState<User | undefined>();\r\n\r\n  useEffect(\r\n    () => {\r\n      searchUser(name, currentPage);\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function userAction(action: USERACTIONS) {\r\n    switch (action.type) {\r\n      case 'Activate':\r\n        activateUser(action.id, action.active);\r\n        break;\r\n      case 'ResetPassword':\r\n        resetPassword(action.id);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedUser(action.user);\r\n        break;\r\n      case 'Delete':\r\n        setMessage({\r\n          message: 'Are you sure you want to delete this?',\r\n          action: 'YESNO',\r\n          onOk: () => {\r\n            deleteSelectedUser(action.id);\r\n          },\r\n        });\r\n        break;\r\n      default:\r\n        setMessage({ message: 'Invalid Action' });\r\n        break;\r\n    }\r\n  }\r\n\r\n  async function deleteSelectedUser(userid: number) {\r\n    setMessage({\r\n      message: 'Delete this user',\r\n      onOk: async () => {\r\n        setBusy(true);\r\n        await deleteUser(userid)\r\n          .then(() => {\r\n            setMessage({\r\n              message: 'User Deleted',\r\n              onOk: () => {\r\n                searchUser(name, currentPage);\r\n              },\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            setMessage({ message: err.message });\r\n          })\r\n          .finally(() => setBusy(false));\r\n      },\r\n    });\r\n  }\r\n\r\n  function activateUser(id: number, active: boolean) {\r\n    setMessage({\r\n      message: 'Active this user?',\r\n      onOk: async () => {\r\n        setBusy(true);\r\n        await activateUsers(id)\r\n          .then((res) => {\r\n            setUsers((users) =>\r\n              users.map((user) => {\r\n                if (user.id === id && active !== null) {\r\n                  user.active = !active;\r\n                }\r\n                return user;\r\n              })\r\n            );\r\n\r\n            setMessage({ message: active ? 'Deactivated' : 'Activated' });\r\n          })\r\n          .catch((err) => {\r\n            setMessage({ message: err.message });\r\n          })\r\n          .finally(() => setBusy(false));\r\n      },\r\n    });\r\n  }\r\n\r\n  function resetPassword(id: number) {\r\n    setMessage({\r\n      message: 'Reset Password?',\r\n      onOk: async () => {\r\n        setBusy(true);\r\n        await resetUserPassword(id)\r\n          .then(() => {\r\n            setMessage({ message: 'Password reset to default password' });\r\n          })\r\n          .catch((err) => {\r\n            setMessage({ message: err.message });\r\n          })\r\n          .finally(() => setBusy(false));\r\n      },\r\n    });\r\n  }\r\n\r\n  function searchUser(name: undefined | string, page: number) {\r\n    setBusy(true);\r\n    searchUsers(name, page)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setUsers(res.results);\r\n          setPageCount(res.pageCount);\r\n          setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchUser(name, page);\r\n  }\r\n\r\n  function search(key: string) {\r\n    setName(key);\r\n    searchUser(key, 1);\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchUser(name, currentPage);\r\n    }\r\n  }\r\n  function addUser() {\r\n    setSelectedUser(undefined);\r\n    setShowModal(true);\r\n  }\r\n\r\n  return (\r\n    <div className='main-container'>\r\n      <div className='item-container'>\r\n        <SeachBar search={search} />\r\n        <div>\r\n          <Pagination\r\n            pages={pageCount}\r\n            currentPageNumber={currentPage}\r\n            goInPage={goToPage}></Pagination>\r\n        </div>\r\n        <div className='content'>\r\n          <table className='users-content item-table'>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Classification</th>\r\n                <th>Username</th>\r\n                <th>Role</th>\r\n                <th>Status</th>\r\n              </tr>\r\n              <tr>\r\n                <th colSpan={6}>\r\n                  <button className='btn' onClick={addUser}>\r\n                    Add New User\r\n                  </button>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <UserItem key={user.id} user={user} action={userAction} />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {showModal && <ManageUser onClose={onClose} usersInfo={selectedUser} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const Routes = {\r\n  Home: '/',\r\n  User: '/users',\r\n  Role: '/roles',\r\n  Office: '/office',\r\n  Personnel: '/personnel',\r\n  Classification: '/classification',\r\n  Concern: '/concerns',\r\n  Ticket: '/tickets',\r\n};\r\n","import { ConcernEnd } from '../endpoints';\r\nimport { Concern } from '../entities/transaction/Concern';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { httpDelete, httpGet, httpPost, httpPut } from './base';\r\n\r\nexport async function searchConcerns(\r\n  name: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<Concern> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (name !== undefined) {\r\n    parameters += '&key=' + encodeURI(name);\r\n  }\r\n  return await httpGet<SearchResult<Concern>>(ConcernEnd.Search + parameters);\r\n}\r\nexport async function createConcern(\r\n  concern: Concern,\r\n  personnelId: number | undefined\r\n): Promise<Concern | undefined> {\r\n  return await httpPost<Concern>(ConcernEnd.Create, {\r\n    ...concern,\r\n    personnelId,\r\n  });\r\n}\r\n\r\nexport async function updateConcern(concern: Concern): Promise<boolean> {\r\n  return await httpPut(`${ConcernEnd.Update}/${concern.id}`, concern);\r\n}\r\n\r\nexport async function deleteConcern(id: number): Promise<boolean> {\r\n  return await httpDelete(`${ConcernEnd.Delete}/${id}`);\r\n}\r\n\r\nexport async function assignConcern(\r\n  id: number,\r\n  personnelId: number\r\n): Promise<boolean | undefined> {\r\n  return await httpPost<boolean>(ConcernEnd.Assign, { id, personnelId });\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { ConcernStatus } from '../../../constant';\r\nimport { Concern } from '../../../entities/transaction/Concern';\r\nimport { ConcernActions } from '../../concern-page';\r\n\r\nexport default function ConcernItem({ concern }: { concern: Concern }) {\r\n  const action = useContext(ConcernActions);\r\n  return (\r\n    <tr>\r\n      <td>\r\n        {concern.entryDate && new Date(concern.entryDate).toLocaleString()}\r\n      </td>\r\n      <td className='elipsis'>{concern.description}</td>\r\n      <td>{concern.classification?.description}</td>\r\n      <td>{concern.office?.description}</td>\r\n      <td>{concern.caller}</td>\r\n      <td>\r\n        <div>{concern.status}</div>\r\n        <div>\r\n          {concern.closedDate && new Date(concern.closedDate).toLocaleString()}\r\n        </div>\r\n      </td>\r\n      <td className='table-actions'>\r\n        {concern.statusId !== ConcernStatus.Open && (\r\n          <button\r\n            className='btn'\r\n            onClick={() => action({ action: 'ViewAction', payload: concern })}>\r\n            View Actions\r\n          </button>\r\n        )}\r\n        {concern.statusId === ConcernStatus.Open && (\r\n          <>\r\n            <button\r\n              className='btn'\r\n              onClick={() => action({ action: 'Assign', payload: concern })}>\r\n              Assign To Concerned Personnel\r\n            </button>\r\n\r\n            <button\r\n              className='btn'\r\n              onClick={() => action({ action: 'Edit', payload: concern })}>\r\n              Edit\r\n            </button>\r\n            <button\r\n              className='btn'\r\n              onClick={() => action({ action: 'Delete', payload: concern.id })}>\r\n              Delete\r\n            </button>\r\n          </>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { ConcernActions, ConcernList } from '../../concern-page';\r\nimport ConcernItem from './concern-item';\r\n\r\nexport default function ConcernItems() {\r\n  const action = useContext(ConcernActions);\r\n  const concerns = useContext(ConcernList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Time Entry</th>\r\n          <th>Description</th>\r\n          <th>Classification</th>\r\n          <th>Concern Office</th>\r\n          <th>Caller</th>\r\n          <th>Status</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Concern\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {concerns.map((concern) => (\r\n          <ConcernItem key={concern.id} concern={concern} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Concern } from '../../entities/transaction/Concern';\r\nimport { Personnel } from '../../entities/transaction/Personnel';\r\nimport { assignConcern } from '../../processors/concern-process';\r\nimport {\r\n  getAvailablePersonnelsByClassification,\r\n  getPersonnels,\r\n} from '../../processors/personnel-process';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function AssignConcern({\r\n  title,\r\n  onClose,\r\n  concern,\r\n}: {\r\n  title?: string;\r\n  onClose: (hasChanges: boolean) => void;\r\n  concern: Concern | undefined;\r\n}) {\r\n  const [personnelItem, setPersonnelItem] = useState<DropdownItem[]>([]);\r\n  const [availabelPersonnelItem, setAvailabelPersonnelItem] = useState<\r\n    DropdownItem[]\r\n  >([]);\r\n  const [personnels, setPersonnels] = useState<Personnel[]>([]);\r\n  const [selectedPersonnel, setSelectedPersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n  const [selectedAvailablePersonnel, setSelectedAvailablePersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchAvailablePersonnels();\r\n    await fetchPersonnels();\r\n  }\r\n  async function fetchPersonnels() {\r\n    setBusy(true);\r\n    await getPersonnels()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnels(res);\r\n          setPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.name,\r\n              };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchAvailablePersonnels() {\r\n    setBusy(true);\r\n    await getAvailablePersonnelsByClassification(concern?.classificationId ?? 0)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setAvailabelPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.name,\r\n              };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function onChange({ elementName, value }: CustomReturn) {\r\n    if (elementName === 'personnel') {\r\n      setSelectedPersonnel(personnels.filter((x) => x.id === +value)?.[0]);\r\n      setSelectedAvailablePersonnel(undefined);\r\n      return;\r\n    }\r\n    if (elementName === 'available-personnel') {\r\n      setSelectedAvailablePersonnel(\r\n        personnels.filter((x) => x.id === +value)?.[0]\r\n      );\r\n      setSelectedPersonnel(undefined);\r\n      return;\r\n    }\r\n  }\r\n\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if ((selectedPersonnel?.id ?? selectedAvailablePersonnel?.id ?? 0) === 0) {\r\n      setMessage({ message: 'Select Personnel' });\r\n      return;\r\n    }\r\n    await assignConcern(\r\n      concern?.id ?? 0,\r\n      selectedPersonnel?.id ?? selectedAvailablePersonnel?.id ?? 0\r\n    )\r\n      .then((res) => {\r\n        if (res)\r\n          setMessage({\r\n            message: 'Success',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <Modal onClose={() => onClose(false)} title={title ?? 'Assign Concern'}>\r\n      <div className='concern-management-modal-body modal-content-body'>\r\n        <div>\r\n          <CustomDropdown\r\n            title='Available Personnel'\r\n            name='available-personnel'\r\n            value={selectedAvailablePersonnel?.name}\r\n            onChange={onChange}\r\n            itemsList={availabelPersonnelItem}\r\n          />\r\n          <CustomDropdown\r\n            title='All Personnel'\r\n            name='personnel'\r\n            value={selectedPersonnel?.name}\r\n            onChange={onChange}\r\n            itemsList={personnelItem}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          ASSIGN\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { PersonnelConcernEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { PersonnelConcern } from '../entities/transaction/PersonnelConcern';\r\nimport { httpGet, httpPost } from './base';\r\n\r\nexport async function getDirectConcerns(\r\n  isResolve: boolean,\r\n  isForwarded: boolean,\r\n  page: number\r\n): Promise<SearchResult<PersonnelConcern> | undefined> {\r\n  let params = `?isResolved=${isResolve}&isForwarded=${isForwarded}&page=${page}`;\r\n  return httpGet<SearchResult<PersonnelConcern>>(\r\n    `${PersonnelConcernEnd.GetList}${params}`\r\n  );\r\n}\r\nexport async function getActions(\r\n  concernId: number\r\n): Promise<PersonnelConcern[] | undefined> {\r\n  return httpGet<PersonnelConcern[]>(\r\n    `${PersonnelConcernEnd.GetActions}?concernId=${concernId}`\r\n  );\r\n}\r\nexport async function resolvePersonnelConcern(\r\n  id: number,\r\n  actionTaken: string\r\n): Promise<boolean | undefined> {\r\n  return httpPost<boolean>(PersonnelConcernEnd.Resolve, { id, actionTaken });\r\n}\r\nexport async function forwardPersonnelConcern(\r\n  id: number,\r\n  personnelId: number,\r\n  reason: string\r\n): Promise<boolean | undefined> {\r\n  return httpPost<boolean>(PersonnelConcernEnd.Forward, {\r\n    id,\r\n    personnelId,\r\n    reason,\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { PersonnelConcernStatus } from '../../../constant';\r\nimport { PersonnelConcern } from '../../../entities/transaction/PersonnelConcern';\r\n\r\nexport default function ConcernAction({\r\n  action,\r\n}: {\r\n  action: PersonnelConcern;\r\n}) {\r\n  return (\r\n    <div className='concern-action'>\r\n      <div>\r\n        <span>\r\n          {action.prevPersonnelConcernId ? 'Forwarded' : 'Assigned'} to\r\n        </span>\r\n        &nbsp;\r\n        <span>\r\n          (\r\n          {action.receivedDate &&\r\n            new Date(action.receivedDate).toLocaleString()}\r\n          )\r\n        </span>\r\n      </div>\r\n      <div>{action.personnel?.name}</div>\r\n      <div>Status</div>\r\n      <div>\r\n        {action.status}\r\n        {action.closedDate && (\r\n          <span> ({new Date(action.closedDate).toLocaleString()})</span>\r\n        )}\r\n        {action.forwardDate && (\r\n          <span> ({new Date(action.forwardDate).toLocaleString()})</span>\r\n        )}\r\n      </div>\r\n      {action.statusId !== PersonnelConcernStatus.Pending && (\r\n        <>\r\n          <div>\r\n            {action.statusId === PersonnelConcernStatus.Forwarded\r\n              ? 'Reason'\r\n              : 'Action Taken'}\r\n            :\r\n          </div>\r\n          <div>{action.action}</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Concern } from '../../entities/transaction/Concern';\r\nimport { PersonnelConcern } from '../../entities/transaction/PersonnelConcern';\r\nimport { getActions } from '../../processors/personnel-concern-process';\r\nimport ConcernAction from '../components/concerns-components/concern-action';\r\nimport Modal from './modal';\r\n\r\nexport default function ConcernActionsViewer({\r\n  concern,\r\n  onClose,\r\n}: {\r\n  concern: Concern | undefined;\r\n  onClose: () => void;\r\n}) {\r\n  const [personnelConcern, setPersonnelConcern] = useState<PersonnelConcern[]>(\r\n    []\r\n  );\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchActions();\r\n  }\r\n  async function fetchActions() {\r\n    setBusy(true);\r\n    await getActions(concern?.id ?? 0)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnelConcern(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  return (\r\n    <Modal title='Concern Actions' onClose={onClose}>\r\n      <div className='modal-content-body'>\r\n        <div className='concern-actions'>\r\n          {personnelConcern.map((x) => (\r\n            <ConcernAction key={x.id} action={x} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { ClassificationEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { Classification } from '../entities/transaction/Classification';\r\nimport { httpGet, httpPost, httpPut } from './base';\r\n\r\nexport async function getClassifications(): Promise<\r\n  Classification[] | undefined\r\n> {\r\n  return await httpGet<Classification[]>(ClassificationEnd.GetList);\r\n}\r\nexport async function searchClassifications(\r\n  key: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<Classification> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (key !== undefined) {\r\n    parameters += '&key=' + encodeURI(key);\r\n  }\r\n\r\n  return await httpGet<SearchResult<Classification>>(\r\n    ClassificationEnd.Search + parameters\r\n  );\r\n}\r\nexport async function createClassification(\r\n  classification: Classification\r\n): Promise<Classification | undefined> {\r\n  return httpPost(ClassificationEnd.Add, classification);\r\n}\r\nexport async function updateClassification(\r\n  classification: Classification\r\n): Promise<boolean> {\r\n  return httpPut(\r\n    `${ClassificationEnd.Update}/${classification.id}`,\r\n    classification\r\n  );\r\n}\r\n","import { OfficeEnd } from '../endpoints';\r\nimport { SearchResult } from '../entities/SearchResult';\r\nimport { Office } from '../entities/transaction/Office';\r\nimport { httpGet, httpPost, httpPut } from './base';\r\n\r\nexport async function getOffices(): Promise<Office[] | undefined> {\r\n  return await httpGet<Office[]>(OfficeEnd.GetList);\r\n}\r\nexport async function searchOffices(\r\n  key: string | undefined,\r\n  page: number\r\n): Promise<SearchResult<Office> | undefined> {\r\n  let parameters: string = '?page=' + page;\r\n  if (key !== undefined) {\r\n    parameters += '&key=' + encodeURI(key);\r\n  }\r\n\r\n  return await httpGet<SearchResult<Office>>(OfficeEnd.Search + parameters);\r\n}\r\nexport async function createOffice(\r\n  office: Office\r\n): Promise<Office | undefined> {\r\n  return httpPost(OfficeEnd.Add, office);\r\n}\r\nexport async function updateOffice(office: Office): Promise<boolean> {\r\n  return httpPut(`${OfficeEnd.Update}/${office.id}`, office);\r\n}\r\n","import React from 'react';\r\nimport { CustomReturn } from './CustomReturn';\r\nexport default function CustomTextArea({\r\n  title,\r\n  name,\r\n  id,\r\n  className,\r\n  value,\r\n  readonly,\r\n  onChange,\r\n  lineCount,\r\n}: {\r\n  title: string;\r\n  value?: string;\r\n  name?: string;\r\n  id?: string;\r\n  className?: string;\r\n  readonly?: boolean | false;\r\n  lineCount?: number | undefined;\r\n  onChange?: (data: CustomReturn) => void;\r\n}) {\r\n  return (\r\n    <div className='custom-input no-height'>\r\n      <label htmlFor={name}>{title}</label>\r\n      <div className='input-container'>\r\n        {readonly ? (\r\n          <span>{value}</span>\r\n        ) : (\r\n          <>\r\n            <textarea\r\n              rows={lineCount}\r\n              name={name}\r\n              id={id}\r\n              value={value}\r\n              className={className}\r\n              onChange={(e) =>\r\n                onChange?.({ elementName: name ?? '', value: e.target.value })\r\n              }\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Classification } from '../../entities/transaction/Classification';\r\nimport { Concern } from '../../entities/transaction/Concern';\r\nimport { Office } from '../../entities/transaction/Office';\r\nimport { Personnel } from '../../entities/transaction/Personnel';\r\nimport { getClassifications } from '../../processors/classification-process';\r\nimport { createConcern, updateConcern } from '../../processors/concern-process';\r\nimport { getOffices } from '../../processors/office-process';\r\nimport {\r\n  getAvailablePersonnelsByClassification,\r\n  getPersonnels,\r\n} from '../../processors/personnel-process';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport CustomTextArea from '../components/custom-textarea';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManageConcern({\r\n  selectedConcern,\r\n  onClose,\r\n}: {\r\n  selectedConcern: Concern | undefined;\r\n  onClose: (hasChange: boolean) => void;\r\n}) {\r\n  const [concern, setConcern] = useState<Concern>(\r\n    () =>\r\n      selectedConcern ?? {\r\n        id: 0,\r\n        entryDate: undefined,\r\n        caller: '',\r\n        description: '',\r\n        classification: undefined,\r\n        classificationId: undefined,\r\n        closedDate: undefined,\r\n        officeId: undefined,\r\n        office: undefined,\r\n        personnel: undefined,\r\n        personnelId: undefined,\r\n      }\r\n  );\r\n  const [classifications, setClassifications] = useState<Classification[]>([]);\r\n  const [offices, setOffices] = useState<Office[]>([]);\r\n  const [classificationItem, setClassificationItem] = useState<DropdownItem[]>(\r\n    () => []\r\n  );\r\n  const [officeItem, setOfficeItem] = useState<DropdownItem[]>(() => []);\r\n  const [personnelItem, setPersonnelItem] = useState<DropdownItem[]>([]);\r\n  const [availabelPersonnelItem, setAvailabelPersonnelItem] = useState<\r\n    DropdownItem[]\r\n  >([]);\r\n  const [personnels, setPersonnels] = useState<Personnel[]>([]);\r\n  const [selectedPersonnel, setSelectedPersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n  const [selectedAvailablePersonnel, setSelectedAvailablePersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchClassifications();\r\n    await fetchOffices();\r\n    await fetchAvailablePersonnels();\r\n    await fetchPersonnels();\r\n  }\r\n  async function fetchPersonnels() {\r\n    setBusy(true);\r\n    await getPersonnels()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnels(res);\r\n          setPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.name,\r\n              };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchAvailablePersonnels(\r\n    classificationId?: number | undefined\r\n  ) {\r\n    setBusy(true);\r\n    await getAvailablePersonnelsByClassification(\r\n      classificationId ?? concern?.classificationId ?? 0\r\n    )\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setSelectedAvailablePersonnel(undefined);\r\n          setAvailabelPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res.map((x) => {\r\n              return {\r\n                key: x.id.toString(),\r\n                value: x.name,\r\n              };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchClassifications() {\r\n    setBusy(true);\r\n    await getClassifications()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setClassifications(() => res);\r\n          setClassificationItem(() => [\r\n            { key: '', value: '' },\r\n            ...res.map((r) => {\r\n              return { key: r.id.toString(), value: r.description };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchOffices() {\r\n    setBusy(true);\r\n    await getOffices()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setOffices(() => res);\r\n          setOfficeItem(() => [\r\n            { key: '', value: '' },\r\n            ...res.map((r) => {\r\n              return { key: r.id.toString(), value: r.description };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (concern.id === 0) {\r\n      await createConcern(\r\n        concern!,\r\n        selectedPersonnel?.id ?? selectedAvailablePersonnel?.id\r\n      )\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'New Concern Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateConcern(concern)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Concern Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n\r\n  async function onChange({ elementName, value }: CustomReturn) {\r\n    if (elementName === 'personnel') {\r\n      setSelectedPersonnel(personnels.filter((x) => x.id === +value)?.[0]);\r\n      setSelectedAvailablePersonnel(undefined);\r\n      return;\r\n    }\r\n    if (elementName === 'available-personnel') {\r\n      setSelectedAvailablePersonnel(\r\n        personnels.filter((x) => x.id === +value)?.[0]\r\n      );\r\n      setSelectedPersonnel(undefined);\r\n      return;\r\n    }\r\n    if (elementName === 'office') {\r\n      let office = offices.filter((x) => x.id === +value)?.[0];\r\n      setConcern((prev) => {\r\n        if (prev === undefined)\r\n          return { office: office, officeId: office.id } as Concern;\r\n        return { ...prev, office: office, officeId: office.id };\r\n      });\r\n      return;\r\n    }\r\n    if (elementName === 'classification') {\r\n      let classification = classifications.filter((x) => x.id === +value)?.[0];\r\n      setConcern((prev) => {\r\n        if (prev === undefined)\r\n          return {\r\n            classification: classification,\r\n            classificationId: classification.id,\r\n          } as Concern;\r\n        return {\r\n          ...prev,\r\n          classification: classification,\r\n          classificationId: classification.id,\r\n        };\r\n      });\r\n\r\n      await fetchAvailablePersonnels(classification?.id);\r\n      return;\r\n    }\r\n    setConcern((prevConcern) => {\r\n      if (prevConcern === undefined) return { [elementName]: value } as Concern;\r\n      return { ...prevConcern, [elementName]: value };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => onClose(false)}\r\n      title={(concern?.id ?? 0) > 0 ? 'Update Concern' : 'New Concern'}\r\n      className='management-modal'>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <div>\r\n          <div>\r\n            <CustomDropdown\r\n              title='Office'\r\n              name='office'\r\n              value={concern?.office?.description}\r\n              onChange={onChange}\r\n              itemsList={officeItem}\r\n            />\r\n          </div>\r\n          <div>\r\n            <CustomDropdown\r\n              title='Classification'\r\n              name='classification'\r\n              value={concern?.classification?.description}\r\n              onChange={onChange}\r\n              itemsList={classificationItem}\r\n            />\r\n          </div>\r\n          <div>\r\n            <CustomTextBox\r\n              title='Caller'\r\n              name='caller'\r\n              value={concern?.caller}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <CustomTextArea\r\n            title='Description'\r\n            name='description'\r\n            lineCount={7}\r\n            value={concern?.description}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        {!concern.id && (\r\n          <div>\r\n            <div>\r\n              <CustomDropdown\r\n                title='Available Personnel'\r\n                name='available-personnel'\r\n                value={selectedAvailablePersonnel?.name}\r\n                onChange={onChange}\r\n                itemsList={availabelPersonnelItem}\r\n              />\r\n              <CustomDropdown\r\n                title='All Personnel'\r\n                name='personnel'\r\n                value={selectedPersonnel?.name}\r\n                onChange={onChange}\r\n                itemsList={personnelItem}\r\n              />\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Concern } from '../entities/transaction/Concern';\r\nimport { deleteConcern, searchConcerns } from '../processors/concern-process';\r\nimport ConcernItems from './components/concerns-components/concern-items';\r\nimport Pagination from './components/pagination';\r\nimport SeachBar from './components/seachbar';\r\nimport AssignConcern from './modals/assign-concern';\r\nimport ConcernActionsViewer from './modals/concern-actions-viewer';\r\nimport ManageConcern from './modals/manage-concern';\r\n\r\nexport type CONCERNACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'Assign'; payload: Concern }\r\n  | { action: 'ViewAction'; payload: Concern }\r\n  | { action: 'Edit'; payload: Concern }\r\n  | { action: 'Delete'; payload: number };\r\n\r\nexport const ConcernList = createContext<Concern[]>([]);\r\nexport const ConcernActions = createContext<(action: CONCERNACTIONS) => void>(\r\n  () => {}\r\n);\r\nexport default function ConcernPage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [concerns, setConcerns] = useState<Concern[]>(() => []);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showAssignmentModal, setShowAssignmentModal] = useState(false);\r\n  const [showActionsModal, setShowActionsModal] = useState(false);\r\n  const [selectedConcern, setSelectedConcern] = useState<Concern | undefined>();\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  function onClose(hasChanges: boolean) {\r\n    setShowModal(false);\r\n    setShowAssignmentModal(false);\r\n    if (hasChanges) {\r\n      searchConcern(key, currentPage);\r\n    }\r\n  }\r\n  useEffect(\r\n    () => {\r\n      searchConcern(key, currentPage);\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function searchConcern(key: string | undefined, page: number) {\r\n    setBusy(true);\r\n    searchConcerns(key, page)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setConcerns(res.results);\r\n          setPageCount(res.pageCount);\r\n          setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function search(key: string) {\r\n    setKey(key);\r\n    searchConcern(key, 1);\r\n  }\r\n  function goToPage(page: number) {\r\n    searchConcern(key, page);\r\n  }\r\n  function concernAction(action: CONCERNACTIONS) {\r\n    switch (action.action) {\r\n      case 'Add':\r\n        setSelectedConcern(() => undefined);\r\n        setShowModal(() => true);\r\n        break;\r\n      case 'ViewAction':\r\n        setSelectedConcern(action.payload);\r\n        setShowActionsModal(true);\r\n        break;\r\n      case 'Assign':\r\n        setSelectedConcern(action.payload);\r\n        setShowAssignmentModal(true);\r\n        break;\r\n      case 'Edit':\r\n        setSelectedConcern(action.payload);\r\n        setShowModal(true);\r\n        break;\r\n      case 'Delete':\r\n        setMessage({\r\n          message: 'Are you sure you want to delete this?',\r\n          action: 'YESNO',\r\n          onOk: () => {\r\n            deleteSelectedConcern(action.payload);\r\n          },\r\n        });\r\n        break;\r\n      default:\r\n        setMessage({ message: 'Invalid Action' });\r\n        break;\r\n    }\r\n  }\r\n\r\n  async function deleteSelectedConcern(id: number) {\r\n    setBusy(true);\r\n    await deleteConcern(id)\r\n      .then(() => {\r\n        setMessage({\r\n          message: 'User Deleted',\r\n          onOk: () => {\r\n            searchConcern(key, currentPage);\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <div className='main-container'>\r\n      <div className='content'>\r\n        <SeachBar search={search} />\r\n        <div>\r\n          <Pagination\r\n            pages={pageCount}\r\n            currentPageNumber={currentPage}\r\n            goInPage={goToPage}></Pagination>\r\n        </div>\r\n        <ConcernList.Provider value={concerns}>\r\n          <ConcernActions.Provider value={concernAction}>\r\n            <ConcernItems />\r\n          </ConcernActions.Provider>\r\n        </ConcernList.Provider>\r\n      </div>\r\n      <div>\r\n        {showModal && (\r\n          <ManageConcern onClose={onClose} selectedConcern={selectedConcern} />\r\n        )}\r\n        {showAssignmentModal && (\r\n          <AssignConcern onClose={onClose} concern={selectedConcern} />\r\n        )}\r\n        {showActionsModal && (\r\n          <ConcernActionsViewer\r\n            concern={selectedConcern}\r\n            onClose={() => setShowActionsModal(false)}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n  useUpdateUserProfile,\r\n  useUserProfile,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { UpdateUserProfile } from '../../entities/user/UpdateUserProfile';\r\nimport { saveProfile } from '../../processors/session-manager';\r\nimport { updateProfile } from '../../processors/user-process';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManageProfile({ onClose }: { onClose: () => void }) {\r\n  const profile = useUserProfile();\r\n  const updateProfileInfo = useUpdateUserProfile();\r\n  const [user, setUser] = useState<UpdateUserProfile>(() => {\r\n    return {\r\n      username: profile?.username ?? '',\r\n      personnel: profile?.personnel,\r\n    };\r\n  });\r\n\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  async function saveData() {\r\n    if ((user.password ?? '') !== '') {\r\n      if (\r\n        (user.newPassword ?? '') !== '' &&\r\n        (user.confirmNewPassword ?? '') !== ''\r\n      ) {\r\n        if (user.newPassword !== user.confirmNewPassword) {\r\n          setMessage({ message: 'Password not match' });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    setBusy(true);\r\n    await updateProfile(user)\r\n      .then(() => {\r\n        setMessage({\r\n          message: 'Profile Updated',\r\n          onOk: () => {\r\n            saveProfile({\r\n              ...profile,\r\n              username: user.username,\r\n            });\r\n            updateProfileInfo({\r\n              ...profile,\r\n              username: user.username,\r\n            });\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function onChange({ elementName, value }: CustomReturn) {\r\n    setUser((prevUser) => {\r\n      return { ...prevUser, [elementName]: value };\r\n    });\r\n  }\r\n  return (\r\n    <Modal className='profile-modal' onClose={onClose} title='Users Profile'>\r\n      <div className='modal-content-body'>\r\n        <div>\r\n          <CustomTextBox\r\n            title='Name'\r\n            readonly={true}\r\n            value={user?.personnel?.name}\r\n          />\r\n          <CustomTextBox\r\n            title='Username'\r\n            name='username'\r\n            value={user?.username}\r\n            onChange={onChange}\r\n          />\r\n          <CustomTextBox\r\n            title='Old Password'\r\n            name='password'\r\n            value={user?.password}\r\n            type='password'\r\n            onChange={onChange}\r\n          />\r\n          <CustomTextBox\r\n            title='New Password'\r\n            name='newPassword'\r\n            type='password'\r\n            value={user?.newPassword}\r\n            onChange={onChange}\r\n          />\r\n          <CustomTextBox\r\n            title='Confirm New Password'\r\n            name='confirmNewPassword'\r\n            type='password'\r\n            value={user?.confirmNewPassword}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Role } from '../../../entities/user/Role';\r\nimport { RoleActions } from '../../role-page';\r\n\r\nexport default function RoleItem({ role }: { role: Role }) {\r\n  const action = useContext(RoleActions);\r\n  return (\r\n    <tr>\r\n      <td>{role.description}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'View', payload: role })}>\r\n          View\r\n        </button>\r\n\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Edit', payload: role })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Delete', payload: role.id })}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { RoleActions, RoleList } from '../../role-page';\r\nimport RoleItem from './role-item';\r\n\r\nexport default function RoleItems() {\r\n  const action = useContext(RoleActions);\r\n  const concerns = useContext(RoleList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Role\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {concerns.map((concern) => (\r\n          <RoleItem key={concern.id} role={concern} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Module } from '../entities/user/Module';\r\nimport { Role } from '../entities/user/Role';\r\nimport { searchRoles } from '../processors/role-process';\r\nimport Pagination from './components/pagination';\r\nimport RoleItems from './components/role-components/role-items';\r\nimport SeachBar from './components/seachbar';\r\nimport ManageRole from './modals/manage-role';\r\n\r\ntype ACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'View'; payload: Role }\r\n  | { action: 'Edit'; payload: Role }\r\n  | { action: 'Delete'; payload: number }\r\n  | { action: 'Check'; payload: Module };\r\nexport const RoleList = createContext<Role[]>([]);\r\nexport const RoleActions = createContext<(action: ACTIONS) => void>(() => {});\r\n\r\nexport default function RolePage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [roles, setRoles] = useState<Role[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedRole, setSelectedRole] = useState<Role | undefined>();\r\n  const [viewOnly, setViewOnly] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      searchRole({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function roleAction(action: ACTIONS) {\r\n    switch (action.action) {\r\n      case 'View':\r\n        setShowModal(true);\r\n        setSelectedRole(action.payload);\r\n        setViewOnly(true);\r\n        break;\r\n      case 'Add':\r\n        setShowModal(true);\r\n        setSelectedRole(undefined);\r\n        setViewOnly(false);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedRole(action.payload);\r\n        setViewOnly(false);\r\n        break;\r\n      // case 'Delete':\r\n      //   setMessage({\r\n      //     message: 'Are you sure you want to delete this?',\r\n      //     action: 'YESNO',\r\n      //     onOk: () => {\r\n      //       deleteSelectedUser(action.payload);\r\n      //     },\r\n      //   });\r\n      //   break;\r\n      // default:\r\n      //   setMessage({ message: 'Invalid Action' });\r\n      //   break;\r\n    }\r\n  }\r\n\r\n  function searchRole({\r\n    searchKey,\r\n    page,\r\n  }: {\r\n    searchKey?: string | undefined;\r\n    page?: number | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    searchRoles(searchKey ?? key, page ?? currentPage)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setRoles(res.results);\r\n          setPageCount(res.pageCount);\r\n          if (page !== undefined) setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchRole({ page: page });\r\n  }\r\n\r\n  function search(key: string) {\r\n    setKey(key);\r\n    searchRole({ searchKey: key, page: 1 });\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchRole({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='main-container'>\r\n      <div className='item-container'>\r\n        <SeachBar search={search} />\r\n        <div>\r\n          <Pagination\r\n            pages={pageCount}\r\n            currentPageNumber={currentPage}\r\n            goInPage={goToPage}></Pagination>\r\n        </div>\r\n        <RoleList.Provider value={roles}>\r\n          <RoleActions.Provider value={roleAction}>\r\n            <RoleItems />\r\n          </RoleActions.Provider>\r\n        </RoleList.Provider>\r\n      </div>\r\n      <div>\r\n        {showModal && (\r\n          <ManageRole\r\n            onClose={onClose}\r\n            selectedRole={selectedRole}\r\n            viewOnly={viewOnly}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { PersonnelConcernStatus } from '../../../constant';\r\nimport { PersonnelConcern } from '../../../entities/transaction/PersonnelConcern';\r\nimport { DirectConcernActions } from '../../ticket-page';\r\n\r\nexport default function DirectConcernItem({\r\n  concern,\r\n}: {\r\n  concern: PersonnelConcern;\r\n}) {\r\n  const action = useContext(DirectConcernActions);\r\n  return (\r\n    <tr>\r\n      <td>\r\n        {concern.receivedDate &&\r\n          new Date(concern.receivedDate).toLocaleString()}\r\n      </td>\r\n      <td>\r\n        <div className='elipsis'>{concern.concern.description}</div>\r\n        {concern.prevPersonnelConcernId && (\r\n          <div className='elipsis'>\r\n            <span>Forward Reason: </span>\r\n            {concern.prevPersonnelConcern?.action}\r\n          </div>\r\n        )}\r\n      </td>\r\n      <td>{concern.concern.classification?.description}</td>\r\n      <td>{concern.concern.office?.description}</td>\r\n      <td>{concern.concern.caller}</td>\r\n      <td>\r\n        {concern.status}\r\n        {concern.closedDate && (\r\n          <span> ({new Date(concern.closedDate).toLocaleString()})</span>\r\n        )}\r\n        {concern.forwardDate && (\r\n          <span> ({new Date(concern.forwardDate).toLocaleString()})</span>\r\n        )}\r\n        {concern.statusId !== PersonnelConcernStatus.Pending && (\r\n          <div className='elipsis'>{concern?.action}</div>\r\n        )}\r\n      </td>\r\n      <td className='table-actions'>\r\n        {concern.statusId === PersonnelConcernStatus.Pending && (\r\n          <>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Resolve', payload: concern });\r\n              }}>\r\n              Resolve\r\n            </button>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Forward', payload: concern });\r\n              }}>\r\n              Forward\r\n            </button>\r\n          </>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { DirectConcernList } from '../../ticket-page';\r\nimport DirectConcernItem from './direct-concern-item';\r\n\r\nexport default function DirectConcernItems() {\r\n  const concerns = useContext(DirectConcernList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Received Date</th>\r\n          <th>Description</th>\r\n          <th>Classification</th>\r\n          <th>Concern Office</th>\r\n          <th>Caller</th>\r\n          <th>Status</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {concerns.map((concern) => (\r\n          <DirectConcernItem key={concern.id} concern={concern} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n  useUserProfile,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Personnel } from '../../entities/transaction/Personnel';\r\nimport { PersonnelConcern } from '../../entities/transaction/PersonnelConcern';\r\nimport { forwardPersonnelConcern } from '../../processors/personnel-concern-process';\r\nimport {\r\n  getAvailablePersonnelsByClassification,\r\n  getPersonnels,\r\n} from '../../processors/personnel-process';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport CustomTextArea from '../components/custom-textarea';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ForwardConcern({\r\n  onClose,\r\n  personnelConcern,\r\n}: {\r\n  onClose: (hasChanges: boolean) => void;\r\n  personnelConcern: PersonnelConcern | undefined;\r\n}) {\r\n  const [reason, setReason] = useState<string>('');\r\n  const [personnelItem, setPersonnelItem] = useState<DropdownItem[]>([]);\r\n  const [availabelPersonnelItem, setAvailabelPersonnelItem] = useState<\r\n    DropdownItem[]\r\n  >([]);\r\n  const [personnels, setPersonnels] = useState<Personnel[]>([]);\r\n  const [selectedPersonnel, setSelectedPersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n  const [selectedAvailablePersonnel, setSelectedAvailablePersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const profile = useUserProfile();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  async function initializeComponents() {\r\n    await fetchAvailablePersonnels();\r\n    await fetchPersonnels();\r\n  }\r\n  async function fetchPersonnels() {\r\n    setBusy(true);\r\n    await getPersonnels()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnels(res);\r\n          setPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res\r\n              .filter((x) => x.id !== profile?.personnel?.id)\r\n              .map((x) => {\r\n                return {\r\n                  key: x.id.toString(),\r\n                  value: x.name,\r\n                };\r\n              }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function fetchAvailablePersonnels() {\r\n    setBusy(true);\r\n    await getAvailablePersonnelsByClassification(\r\n      personnelConcern?.concern?.classificationId ?? 0\r\n    )\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setAvailabelPersonnelItem([\r\n            {\r\n              key: '',\r\n              value: '',\r\n            },\r\n            ...res\r\n              .filter((x) => x.id !== profile?.personnel?.id)\r\n              .map((x) => {\r\n                return {\r\n                  key: x.id.toString(),\r\n                  value: x.name,\r\n                };\r\n              }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  function onChange({ elementName, value }: CustomReturn) {\r\n    if (elementName === 'personnel') {\r\n      setSelectedPersonnel(personnels.filter((x) => x.id === +value)?.[0]);\r\n      setSelectedAvailablePersonnel(undefined);\r\n      return;\r\n    }\r\n    if (elementName === 'available-personnel') {\r\n      setSelectedAvailablePersonnel(\r\n        personnels.filter((x) => x.id === +value)?.[0]\r\n      );\r\n      setSelectedPersonnel(undefined);\r\n      return;\r\n    }\r\n  }\r\n\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if ((selectedPersonnel?.id ?? selectedAvailablePersonnel?.id ?? 0) === 0) {\r\n      setMessage({ message: 'Select Personnel' });\r\n      return;\r\n    }\r\n    await forwardPersonnelConcern(\r\n      personnelConcern?.id ?? 0,\r\n      selectedPersonnel?.id ?? selectedAvailablePersonnel?.id ?? 0,\r\n      reason\r\n    )\r\n      .then((res) => {\r\n        if (res)\r\n          setMessage({\r\n            message: 'Success',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title='Forward Concern'>\r\n      <div className='concern-management-modal-body modal-content-body'>\r\n        <div>\r\n          <CustomTextArea\r\n            title='Reason'\r\n            lineCount={5}\r\n            onChange={(data) => {\r\n              setReason(data.value);\r\n            }}\r\n          />\r\n          <CustomDropdown\r\n            title='Available Personnel'\r\n            name='available-personnel'\r\n            value={selectedAvailablePersonnel?.name}\r\n            onChange={onChange}\r\n            itemsList={availabelPersonnelItem}\r\n          />\r\n          <CustomDropdown\r\n            title='All Personnel'\r\n            name='personnel'\r\n            value={selectedPersonnel?.name}\r\n            onChange={onChange}\r\n            itemsList={personnelItem}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          FORWARD\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { PersonnelConcern } from '../../entities/transaction/PersonnelConcern';\r\nimport { resolvePersonnelConcern } from '../../processors/personnel-concern-process';\r\nimport CustomTextArea from '../components/custom-textarea';\r\nimport Modal from './modal';\r\n\r\nexport default function ResolveConcern({\r\n  personnelConcern,\r\n  onClose,\r\n}: {\r\n  personnelConcern: PersonnelConcern | undefined;\r\n  onClose: (hasChange: boolean) => void;\r\n}) {\r\n  const [actionTaken, setActionTaken] = useState<string>('');\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  async function saveData() {\r\n    setBusy(true);\r\n    await resolvePersonnelConcern(personnelConcern?.id ?? 0, actionTaken)\r\n      .then((res) => {\r\n        if (res)\r\n          setMessage({\r\n            message: 'Success',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title='Resolve Concern'>\r\n      <div className='modal-content-body'>\r\n        <div>\r\n          <CustomTextArea\r\n            title='Action Taken'\r\n            lineCount={5}\r\n            onChange={(data) => {\r\n              setActionTaken(data.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          RESOLVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { PersonnelConcern } from '../entities/transaction/PersonnelConcern';\r\nimport { getDirectConcerns } from '../processors/personnel-concern-process';\r\nimport CustomCheckBox from './components/custom-check-box';\r\nimport Pagination from './components/pagination';\r\nimport DirectConcernItems from './components/tickets-components/direct-concern-items';\r\nimport ForwardConcern from './modals/forward-concern';\r\nimport ResolveConcern from './modals/resolve-concern';\r\n\r\nexport type CONCERNACTIONS =\r\n  | { action: 'Resolve'; payload: PersonnelConcern }\r\n  | { action: 'Forward'; payload: PersonnelConcern };\r\n\r\nexport const DirectConcernList = createContext<PersonnelConcern[]>([]);\r\nexport const DirectConcernActions = createContext<\r\n  (action: CONCERNACTIONS) => void\r\n>(() => {});\r\nexport default function TicketPage() {\r\n  const [directConcerns, setDirectConcerns] = useState<PersonnelConcern[]>([]);\r\n  const [selectedDirectConcern, setSelectedDirectConcern] = useState<\r\n    PersonnelConcern | undefined\r\n  >();\r\n  const [showResolveModal, setShowResolveModal] = useState(false);\r\n  const [showForwardModal, setShowForwardModal] = useState(false);\r\n  const [resolved, setResolved] = useState(false);\r\n  const [forwarded, setForwarded] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const setMessage = useSetMessage();\r\n  const setBusy = useSetBusy();\r\n  function concernAction(action: CONCERNACTIONS) {\r\n    switch (action.action) {\r\n      case 'Resolve':\r\n        setSelectedDirectConcern(action.payload);\r\n        setShowResolveModal(true);\r\n        break;\r\n      case 'Forward':\r\n        setSelectedDirectConcern(action.payload);\r\n        setShowForwardModal(true);\r\n        break;\r\n      default:\r\n        setMessage({ message: 'Invalid Action' });\r\n        break;\r\n    }\r\n  }\r\n  useEffect(\r\n    () => {\r\n      fetchDirectConcern({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  async function fetchDirectConcern({\r\n    page,\r\n    isResolved,\r\n    isForwarded,\r\n  }: {\r\n    page?: number | undefined;\r\n    isResolved?: boolean | undefined;\r\n    isForwarded?: boolean | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    await getDirectConcerns(\r\n      isResolved ?? resolved,\r\n      isForwarded ?? forwarded,\r\n      page ?? currentPage\r\n    )\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setDirectConcerns(res.results);\r\n          setPageCount(res.pageCount);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    setCurrentPage(page);\r\n    fetchDirectConcern({ page: page });\r\n  }\r\n\r\n  function onClose(hasChanges: boolean) {\r\n    setShowResolveModal(false);\r\n    setShowForwardModal(false);\r\n    if (hasChanges) {\r\n      fetchDirectConcern({});\r\n    }\r\n  }\r\n  return (\r\n    <div className='main-container'>\r\n      <div className='container'>\r\n        <div className='content'>\r\n          <div className='head-content'>\r\n            <div className='checkbox-container'>\r\n              <CustomCheckBox\r\n                text='Resolved'\r\n                id='resolved'\r\n                checkChange={() => {\r\n                  var x = !resolved;\r\n                  setResolved(x);\r\n                  fetchDirectConcern({ isResolved: x });\r\n                }}\r\n                isCheck={resolved}\r\n              />\r\n              <CustomCheckBox\r\n                text='Forwarded'\r\n                id='forwarded'\r\n                checkChange={() => {\r\n                  var x = !forwarded;\r\n                  setForwarded(x);\r\n                  fetchDirectConcern({ isForwarded: x });\r\n                }}\r\n                isCheck={forwarded}\r\n              />\r\n            </div>\r\n\r\n            <Pagination\r\n              pages={pageCount}\r\n              currentPageNumber={currentPage}\r\n              goInPage={goToPage}></Pagination>\r\n          </div>\r\n          <DirectConcernList.Provider value={directConcerns}>\r\n            <DirectConcernActions.Provider value={concernAction}>\r\n              <DirectConcernItems />\r\n            </DirectConcernActions.Provider>\r\n          </DirectConcernList.Provider>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {showResolveModal && (\r\n          <ResolveConcern\r\n            onClose={onClose}\r\n            personnelConcern={selectedDirectConcern}\r\n          />\r\n        )}\r\n        {showForwardModal && (\r\n          <ForwardConcern\r\n            onClose={onClose}\r\n            personnelConcern={selectedDirectConcern}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { Classification } from '../../../entities/transaction/Classification';\r\nimport { ClassificationActions } from '../../classification-page';\r\n\r\nexport default function ClassificationItem({\r\n  classification,\r\n}: {\r\n  classification: Classification;\r\n}) {\r\n  const action = useContext(ClassificationActions);\r\n  return (\r\n    <tr>\r\n      <td>{classification.description}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Edit', payload: classification })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() =>\r\n            action({ action: 'Delete', payload: classification.id })\r\n          }>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport {\r\n  ClassificationActions,\r\n  ClassificationList,\r\n} from '../../classification-page';\r\nimport ClassificationItem from './classification-item';\r\n\r\nexport default function ClassificationItems() {\r\n  const action = useContext(ClassificationActions);\r\n  const classifications = useContext(ClassificationList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Classification\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {classifications.map((classification) => (\r\n          <ClassificationItem\r\n            key={classification.id}\r\n            classification={classification}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Classification } from '../../entities/transaction/Classification';\r\nimport {\r\n  createClassification,\r\n  updateClassification,\r\n} from '../../processors/classification-process';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManageClassification({\r\n  selectedClassification,\r\n  onClose,\r\n}: {\r\n  selectedClassification: Classification | undefined;\r\n  onClose: (hasChanges: boolean) => void;\r\n}) {\r\n  const [classification, setClassification] = useState<Classification>(\r\n    () =>\r\n      selectedClassification ?? {\r\n        id: 0,\r\n        description: '',\r\n      }\r\n  );\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (classification.id === 0) {\r\n      await createClassification(classification)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Classification Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateClassification(classification)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Classification Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  function onChange(data: CustomReturn) {\r\n    setClassification((r) => {\r\n      return { ...r, [data.elementName]: data.value };\r\n    });\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title={\r\n        !!selectedClassification?.id\r\n          ? 'Update Classificaiton'\r\n          : 'Add New Classificaiton'\r\n      }>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <CustomTextBox\r\n          title='Description'\r\n          name='description'\r\n          value={classification.description}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Classification } from '../entities/transaction/Classification';\r\nimport { searchClassifications } from '../processors/classification-process';\r\nimport ClassificationItems from './components/classification-components/classification-items';\r\nimport Pagination from './components/pagination';\r\nimport SeachBar from './components/seachbar';\r\nimport ManageClassification from './modals/manage-classification';\r\n\r\ntype ACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'Edit'; payload: Classification }\r\n  | { action: 'Delete'; payload: number };\r\nexport const ClassificationList = createContext<Classification[]>([]);\r\nexport const ClassificationActions = createContext<(action: ACTIONS) => void>(\r\n  () => {}\r\n);\r\n\r\nexport default function ClassificationPage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [classifications, setClassifications] = useState<Classification[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedClassification, setSelectedClassification] = useState<\r\n    Classification | undefined\r\n  >();\r\n\r\n  useEffect(\r\n    () => {\r\n      searchClassification({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function classificationAction(action: ACTIONS) {\r\n    switch (action.action) {\r\n      case 'Add':\r\n        setShowModal(true);\r\n        setSelectedClassification(undefined);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedClassification(action.payload);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function searchClassification({\r\n    searchKey,\r\n    page,\r\n  }: {\r\n    searchKey?: string | undefined;\r\n    page?: number | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    searchClassifications(searchKey ?? key, page ?? currentPage)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setClassifications(res.results);\r\n          setPageCount(res.pageCount);\r\n          if (page !== undefined) setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchClassification({ page: page });\r\n  }\r\n\r\n  function search(key: string) {\r\n    setKey(key);\r\n    searchClassification({ searchKey: key, page: 1 });\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchClassification({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='main-container'>\r\n      <div className='item-container'>\r\n        <SeachBar search={search} />\r\n        <div>\r\n          <Pagination\r\n            pages={pageCount}\r\n            currentPageNumber={currentPage}\r\n            goInPage={goToPage}></Pagination>\r\n        </div>\r\n        <ClassificationList.Provider value={classifications}>\r\n          <ClassificationActions.Provider value={classificationAction}>\r\n            <ClassificationItems />\r\n          </ClassificationActions.Provider>\r\n        </ClassificationList.Provider>\r\n      </div>\r\n      <div>\r\n        {showModal && (\r\n          <ManageClassification\r\n            onClose={onClose}\r\n            selectedClassification={selectedClassification}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { Personnel } from '../../../entities/transaction/Personnel';\r\nimport { PersonnelActions } from '../../personnel-page';\r\n\r\nexport default function PersonnelItem({ personnel }: { personnel: Personnel }) {\r\n  const action = useContext(PersonnelActions);\r\n  return (\r\n    <tr>\r\n      <td>{personnel.name}</td>\r\n      <td>{personnel.classification?.description}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Edit', payload: personnel })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Delete', payload: personnel.id })}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { PersonnelActions, PersonnelList } from '../../personnel-page';\r\nimport PersonnelItem from './personnel-item';\r\n\r\nexport default function PersonnelItems() {\r\n  const action = useContext(PersonnelActions);\r\n  const personnels = useContext(PersonnelList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Classification</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Personnel\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {personnels.map((personnel) => (\r\n          <PersonnelItem key={personnel.id} personnel={personnel} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Classification } from '../../entities/transaction/Classification';\r\nimport { Personnel } from '../../entities/transaction/Personnel';\r\nimport { getClassifications } from '../../processors/classification-process';\r\nimport {\r\n  createPersonnel,\r\n  updatePersonnel,\r\n} from '../../processors/personnel-process';\r\nimport CustomDropdown, { DropdownItem } from '../components/custom-dropdown';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManagePersonnel({\r\n  selectedPersonnel,\r\n  onClose,\r\n}: {\r\n  selectedPersonnel: Personnel | undefined;\r\n  onClose: (hasChanges: boolean) => void;\r\n}) {\r\n  const [personnel, setPersonnel] = useState<Personnel>(\r\n    () =>\r\n      selectedPersonnel ?? {\r\n        id: 0,\r\n        classification: undefined,\r\n        classificationId: undefined,\r\n        name: '',\r\n      }\r\n  );\r\n  const [classifications, setClassifications] = useState<Classification[]>([]);\r\n  const [classificationItem, setClassificationItem] = useState<DropdownItem[]>(\r\n    []\r\n  );\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  useEffect(\r\n    () => {\r\n      initializeComponents();\r\n    },\r\n    //eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  async function initializeComponents() {\r\n    await fetchClassifications();\r\n  }\r\n  async function fetchClassifications() {\r\n    setBusy(true);\r\n    await getClassifications()\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setClassifications(() => res);\r\n          setClassificationItem(() => [\r\n            { key: '', value: '' },\r\n            ...res.map((r) => {\r\n              return { key: r.id.toString(), value: r.description };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (personnel.id === 0) {\r\n      await createPersonnel(personnel)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Personnel Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updatePersonnel(personnel)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Personnel Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  function onChange({ value, elementName }: CustomReturn) {\r\n    if (elementName === 'classification') {\r\n      let classification = classifications.filter((x) => x.id === +value)?.[0];\r\n      setPersonnel((prev) => {\r\n        if (prev === undefined)\r\n          return {\r\n            classification: classification,\r\n            classificationId: classification.id,\r\n          } as Personnel;\r\n        return {\r\n          ...prev,\r\n          classification: classification,\r\n          classificationId: classification.id,\r\n        };\r\n      });\r\n      return;\r\n    }\r\n    setPersonnel((r) => {\r\n      return { ...r, [elementName]: value };\r\n    });\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title={\r\n        !!selectedPersonnel?.id ? 'Update Personnel' : 'Add New Personnel'\r\n      }>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <CustomTextBox\r\n          title='Name'\r\n          name='name'\r\n          value={personnel.name}\r\n          onChange={onChange}\r\n        />\r\n        <CustomDropdown\r\n          title='Classification'\r\n          name='classification'\r\n          value={personnel?.classification?.description}\r\n          onChange={onChange}\r\n          itemsList={classificationItem}\r\n        />\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Personnel } from '../entities/transaction/Personnel';\r\nimport { searchPersonnels } from '../processors/personnel-process';\r\nimport Pagination from './components/pagination';\r\nimport PersonnelItems from './components/personnel-components/personnel-items';\r\nimport SeachBar from './components/seachbar';\r\nimport ManagePersonnel from './modals/manage-personnel';\r\n\r\ntype ACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'Edit'; payload: Personnel }\r\n  | { action: 'Delete'; payload: number };\r\nexport const PersonnelList = createContext<Personnel[]>([]);\r\nexport const PersonnelActions = createContext<(action: ACTIONS) => void>(\r\n  () => {}\r\n);\r\n\r\nexport default function OfficePage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [personnels, setPersonnels] = useState<Personnel[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedPersonnel, setSelectedPersonnel] = useState<\r\n    Personnel | undefined\r\n  >();\r\n\r\n  useEffect(\r\n    () => {\r\n      searchPersonnel({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function personnelAction(action: ACTIONS) {\r\n    switch (action.action) {\r\n      case 'Add':\r\n        setShowModal(true);\r\n        setSelectedPersonnel(undefined);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedPersonnel(action.payload);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function searchPersonnel({\r\n    searchKey,\r\n    page,\r\n  }: {\r\n    searchKey?: string | undefined;\r\n    page?: number | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    searchPersonnels(searchKey ?? key, page ?? currentPage)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setPersonnels(res.results);\r\n          setPageCount(res.pageCount);\r\n          if (page !== undefined) setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchPersonnel({ page: page });\r\n  }\r\n\r\n  function search(key: string) {\r\n    setKey(key);\r\n    searchPersonnel({ searchKey: key, page: 1 });\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchPersonnel({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='main-container'>\r\n      <div className='item-container'>\r\n        <SeachBar search={search} />\r\n        <div>\r\n          <Pagination\r\n            pages={pageCount}\r\n            currentPageNumber={currentPage}\r\n            goInPage={goToPage}></Pagination>\r\n        </div>\r\n        <PersonnelList.Provider value={personnels}>\r\n          <PersonnelActions.Provider value={personnelAction}>\r\n            <PersonnelItems />\r\n          </PersonnelActions.Provider>\r\n        </PersonnelList.Provider>\r\n      </div>\r\n      <div>\r\n        {showModal && (\r\n          <ManagePersonnel\r\n            onClose={onClose}\r\n            selectedPersonnel={selectedPersonnel}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { Office } from '../../../entities/transaction/Office';\r\nimport { OfficeActions } from '../../office-page';\r\n\r\nexport default function OfficeItem({ office }: { office: Office }) {\r\n  const action = useContext(OfficeActions);\r\n  return (\r\n    <tr>\r\n      <td>{office.description}</td>\r\n      <td>{office.abbreviation}</td>\r\n      <td className='table-actions'>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Edit', payload: office })}>\r\n          Edit\r\n        </button>\r\n        <button\r\n          className='btn'\r\n          onClick={() => action({ action: 'Delete', payload: office.id })}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { OfficeActions, OfficeList } from '../../office-page';\r\nimport OfficeItem from './office-item';\r\n\r\nexport default function OfficeItems() {\r\n  const action = useContext(OfficeActions);\r\n  const offices = useContext(OfficeList);\r\n  return (\r\n    <table className='item-table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Description</th>\r\n          <th>Abbreviation</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={10}>\r\n            <button\r\n              className='btn'\r\n              onClick={() => {\r\n                action({ action: 'Add' });\r\n              }}>\r\n              Add New Office\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {offices.map((office) => (\r\n          <OfficeItem key={office.id} office={office} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  useSetBusy,\r\n  useSetMessage,\r\n} from '../../custom-hooks/authorize-provider';\r\nimport { Office } from '../../entities/transaction/Office';\r\nimport { createOffice, updateOffice } from '../../processors/office-process';\r\nimport CustomTextBox from '../components/custom-textbox';\r\nimport { CustomReturn } from '../components/CustomReturn';\r\nimport Modal from './modal';\r\n\r\nexport default function ManageOffice({\r\n  selectedOffice,\r\n  onClose,\r\n}: {\r\n  selectedOffice: Office | undefined;\r\n  onClose: (hasChanges: boolean) => void;\r\n}) {\r\n  const [office, setOffice] = useState<Office>(\r\n    () =>\r\n      selectedOffice ?? {\r\n        id: 0,\r\n        description: '',\r\n        abbreviation: '',\r\n      }\r\n  );\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  async function saveData() {\r\n    setBusy(true);\r\n    if (office.id === 0) {\r\n      await createOffice(office)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Office Added',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    } else {\r\n      await updateOffice(office)\r\n        .then(() => {\r\n          setMessage({\r\n            message: 'Office Updated',\r\n            onOk: () => {\r\n              onClose(true);\r\n            },\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({ message: err.message });\r\n        })\r\n        .finally(() => setBusy(false));\r\n    }\r\n  }\r\n  function onChange(data: CustomReturn) {\r\n    setOffice((r) => {\r\n      return { ...r, [data.elementName]: data.value };\r\n    });\r\n  }\r\n  return (\r\n    <Modal\r\n      onClose={() => {\r\n        onClose(false);\r\n      }}\r\n      title={!!selectedOffice?.id ? 'Update Office' : 'Add New Office'}>\r\n      <div className='concern-management-modal-body modal-content-body concern-management'>\r\n        <CustomTextBox\r\n          title='Description'\r\n          name='description'\r\n          value={office.description}\r\n          onChange={onChange}\r\n        />\r\n        <CustomTextBox\r\n          title='Abbreviation'\r\n          name='abbreviation'\r\n          value={office.abbreviation}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <button onClick={saveData} className='btn-modal btn-primary'>\r\n          SAVE\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useSetBusy, useSetMessage } from '../custom-hooks/authorize-provider';\r\nimport { Office } from '../entities/transaction/Office';\r\nimport { searchOffices } from '../processors/office-process';\r\nimport OfficeItems from './components/office-components/office-items';\r\nimport Pagination from './components/pagination';\r\nimport SeachBar from './components/seachbar';\r\nimport ManageOffice from './modals/manage-office';\r\n\r\ntype ACTIONS =\r\n  | { action: 'Add' }\r\n  | { action: 'Edit'; payload: Office }\r\n  | { action: 'Delete'; payload: number };\r\nexport const OfficeList = createContext<Office[]>([]);\r\nexport const OfficeActions = createContext<(action: ACTIONS) => void>(() => {});\r\n\r\nexport default function OfficePage() {\r\n  const [key, setKey] = useState<string | undefined>();\r\n  const [offices, setOffices] = useState<Office[]>([]);\r\n  const [pageCount, setPageCount] = useState<number>(1);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const setBusy = useSetBusy();\r\n  const setMessage = useSetMessage();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedOffice, setSelectedOffice] = useState<Office | undefined>();\r\n\r\n  useEffect(\r\n    () => {\r\n      searchOffice({});\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  function officeAction(action: ACTIONS) {\r\n    switch (action.action) {\r\n      case 'Add':\r\n        setShowModal(true);\r\n        setSelectedOffice(undefined);\r\n        break;\r\n      case 'Edit':\r\n        setShowModal(true);\r\n        setSelectedOffice(action.payload);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function searchOffice({\r\n    searchKey,\r\n    page,\r\n  }: {\r\n    searchKey?: string | undefined;\r\n    page?: number | undefined;\r\n  }) {\r\n    setBusy(true);\r\n    searchOffices(searchKey ?? key, page ?? currentPage)\r\n      .then((res) => {\r\n        if (res !== undefined) {\r\n          setOffices(res.results);\r\n          setPageCount(res.pageCount);\r\n          if (page !== undefined) setCurrentPage(page);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMessage({ message: err.message });\r\n      })\r\n      .finally(() => setBusy(false));\r\n  }\r\n\r\n  function goToPage(page: number) {\r\n    searchOffice({ page: page });\r\n  }\r\n\r\n  function search(key: string) {\r\n    setKey(key);\r\n    searchOffice({ searchKey: key, page: 1 });\r\n  }\r\n\r\n  function onClose(needToReload: boolean) {\r\n    setShowModal(false);\r\n    if (needToReload) {\r\n      searchOffice({});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='main-container'>\r\n      <div className='item-container'>\r\n        <SeachBar search={search} />\r\n        <div>\r\n          <Pagination\r\n            pages={pageCount}\r\n            currentPageNumber={currentPage}\r\n            goInPage={goToPage}></Pagination>\r\n        </div>\r\n        <OfficeList.Provider value={offices}>\r\n          <OfficeActions.Provider value={officeAction}>\r\n            <OfficeItems />\r\n          </OfficeActions.Provider>\r\n        </OfficeList.Provider>\r\n      </div>\r\n      <div>\r\n        {showModal && (\r\n          <ManageOffice onClose={onClose} selectedOffice={selectedOffice} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter, NavLink, Route, Switch } from 'react-router-dom';\r\nimport {\r\n  useAuthorize,\r\n  useSetMessage,\r\n  useUpdateAuthorize,\r\n  useUserProfile,\r\n} from '../custom-hooks/authorize-provider';\r\nimport LoginPage from './login-page';\r\nimport UserPage from './user-page';\r\n\r\nimport { useMemo, useState } from 'react';\r\nimport { ICON } from '../constant';\r\nimport { Routes } from '../routes';\r\nimport ConcernPage from './concern-page';\r\nimport ManageProfile from './modals/manage-profile';\r\nimport RolePage from './role-page';\r\nimport TicketPage from './ticket-page';\r\nimport ClassificationPage from './classification-page';\r\nimport PersonnelPage from './personnel-page';\r\nimport OfficePage from './office-page';\r\n\r\nexport default function HomePage() {\r\n  const [showProfile, setShowProfile] = useState(false);\r\n  const authorize = useAuthorize();\r\n  const profile = useUserProfile();\r\n  const updateAuthorize = useUpdateAuthorize();\r\n  const setMessage = useSetMessage();\r\n  const menus: {\r\n    head: string;\r\n    navs: { route: string | undefined; name: string | undefined }[];\r\n  }[] = useMemo(\r\n    () => [\r\n      ...(profile?.admin\r\n        ? [\r\n            {\r\n              head: 'Transactions',\r\n              navs: [\r\n                {\r\n                  route: Routes.Concern,\r\n                  name: 'Concerns',\r\n                },\r\n                {\r\n                  route: Routes.Ticket,\r\n                  name: 'Tickets',\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              head: 'Managements',\r\n              navs: [\r\n                {\r\n                  route: Routes.Personnel,\r\n                  name: 'Personnel',\r\n                },\r\n                {\r\n                  route: Routes.Role,\r\n                  name: 'Roles',\r\n                },\r\n                {\r\n                  route: Routes.Classification,\r\n                  name: 'Classification',\r\n                },\r\n                {\r\n                  route: Routes.Office,\r\n                  name: 'Office',\r\n                },\r\n              ],\r\n            },\r\n          ]\r\n        : [\r\n            {\r\n              head: 'Transactions',\r\n              navs: [\r\n                ...(profile?.distinctModules\r\n                  ?.filter((x) => x.header === 'Transaction')\r\n                  .map((x) => {\r\n                    return { route: x.route, name: x.description };\r\n                  }) ?? []),\r\n              ],\r\n            },\r\n            {\r\n              head: 'Managements',\r\n              navs: [\r\n                ...(profile?.distinctModules\r\n                  ?.filter((x) => x.header === 'Management')\r\n                  .map((x) => {\r\n                    return { route: x.route, name: x.description };\r\n                  }) ?? []),\r\n              ],\r\n            },\r\n          ]),\r\n    ],\r\n    [profile?.distinctModules, profile?.admin]\r\n  );\r\n\r\n  function logoutUser() {\r\n    setMessage({\r\n      message: 'Continue to logout?',\r\n      action: 'YESNO',\r\n      onOk: () => {\r\n        updateAuthorize(false);\r\n        setShowProfile(false);\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {authorize ? (\r\n        <BrowserRouter>\r\n          <header className='navbar'>\r\n            <div className='menu-container'>\r\n              <NavLink to={Routes.Home} className='icon'>\r\n                {ICON}\r\n              </NavLink>\r\n              <nav>\r\n                <div>\r\n                  <ul className='navigations'>\r\n                    {(profile?.distinctModules?.length ?? 0) < 3 &&\r\n                    (profile?.distinctModules?.length ?? 0) > 0 ? (\r\n                      profile?.distinctModules?.map((x) => (\r\n                        <li key={x.id.toString()}>\r\n                          <NavLink to={x.route ?? ''} className='nav-menu'>\r\n                            {x.description ?? ''}\r\n                          </NavLink>\r\n                        </li>\r\n                      ))\r\n                    ) : (\r\n                      <li>\r\n                        <button className='nav-menu'>Menus</button>\r\n                        <div className='menus'>\r\n                          {menus\r\n                            .filter((x) => x.navs.length > 0)\r\n                            .map((menu) => (\r\n                              <div className='menu-items' key={menu.head}>\r\n                                <div className='head'>{menu.head}</div>\r\n                                <div className='navs'>\r\n                                  {menu.navs.map((nav) => (\r\n                                    <div key={nav.route}>\r\n                                      <NavLink\r\n                                        to={nav.route ?? ''}\r\n                                        className='nav-menu'>\r\n                                        {nav.name}\r\n                                      </NavLink>\r\n                                    </div>\r\n                                  ))}\r\n                                </div>\r\n                              </div>\r\n                            ))}\r\n                        </div>\r\n                      </li>\r\n                    )}\r\n                    {(profile?.distinctModules?.filter(\r\n                      (x) => x.route === Routes.User\r\n                    )?.[0]?.id ||\r\n                      profile?.admin) && (\r\n                      <li>\r\n                        <NavLink to={Routes.User} className='nav-menu'>\r\n                          Users\r\n                        </NavLink>\r\n                      </li>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n                <ul className='user'>\r\n                  <li>\r\n                    <label\r\n                      className='user-name nav-menu'\r\n                      onClick={() => setShowProfile(true)}>\r\n                      {`${profile?.personnel?.name} (${profile?.personnel?.classification?.description})`}\r\n                    </label>\r\n                  </li>\r\n                  <li>\r\n                    <label onClick={logoutUser} className='nav-menu'>\r\n                      Logout\r\n                    </label>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n          </header>\r\n          <Switch>\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.User\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.User} exact component={UserPage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Role\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Role} exact component={RolePage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Concern\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Concern} exact component={ConcernPage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Ticket\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Ticket} exact component={TicketPage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Classification\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route\r\n                path={Routes.Classification}\r\n                exact\r\n                component={ClassificationPage}\r\n              />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Personnel\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Personnel} exact component={PersonnelPage} />\r\n            )}\r\n            {(profile?.distinctModules?.filter(\r\n              (x) => x.route === Routes.Office\r\n            )?.[0]?.id ||\r\n              profile?.admin) && (\r\n              <Route path={Routes.Office} exact component={OfficePage} />\r\n            )}\r\n          </Switch>\r\n          <div>\r\n            {showProfile && (\r\n              <ManageProfile onClose={() => setShowProfile(false)} />\r\n            )}\r\n          </div>\r\n        </BrowserRouter>\r\n      ) : (\r\n        <LoginPage />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { AuthorizeProvider } from './custom-hooks/authorize-provider';\nimport Dashboard from './pages/home-page';\nimport './styles/style.css';\nfunction App() {\n  return (\n    <AuthorizeProvider>\n      <Dashboard />\n    </AuthorizeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}